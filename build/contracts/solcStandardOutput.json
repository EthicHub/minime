{
  "contracts": {
    "./contracts/Controlled.sol": {
      "Controlled": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610166806100326000396000f30060806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633cebb8238114610050578063f77c479114610080575b600080fd5b34801561005c57600080fd5b5061007e73ffffffffffffffffffffffffffffffffffffffff600435166100be565b005b34801561008c57600080fd5b5061009561011e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff1633146100e257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058209397fde23b8fa99de5886efab7150f40f1cbedc8a730370d1b9d58dd16cff3200029",
            "sourceMap": "26:548:0:-;;;274:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;305:10:0;:23;;-1:-1:-1;;;;;;305:23:0;318:10;305:23;;;26:548;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633cebb8238114610050578063f77c479114610080575b600080fd5b34801561005c57600080fd5b5061007e73ffffffffffffffffffffffffffffffffffffffff600435166100be565b005b34801561008c57600080fd5b5061009561011e565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff1633146100e257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058209397fde23b8fa99de5886efab7150f40f1cbedc8a730370d1b9d58dd16cff3200029",
            "sourceMap": "26:548:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;456:116:0;;;;;;;;;242:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:25:0;;;;;;;;;;;;;;;;;;;;;;;456:116;219:10;;;;205;:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:0;;;;;;;;;;;;456:116::o;242:25::-;;;;;;:::o"
          },
          "methodIdentifiers": {
            "changeController(address)": "3cebb823",
            "controller()": "f77c4791"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}}}},\"userdoc\":{\"methods\":{\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/Controlled.sol\":\"Controlled\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"}},\"version\":1}"
      }
    },
    "./contracts/MiniMeToken.sol": {
      "ApproveAndCallFallBack": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "receiveApproval",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
          }
        },
        "metadata": ""
      },
      "MiniMeToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "creationBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "balanceOfAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_cloneTokenName",
                "type": "string"
              },
              {
                "name": "_cloneDecimalUnits",
                "type": "uint8"
              },
              {
                "name": "_cloneTokenSymbol",
                "type": "string"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "generateTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "transfersEnabled",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentSnapShotBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_extraData",
                "type": "bytes"
              }
            ],
            "name": "approveAndCall",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "destroyTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "claimTokens",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenFactory",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "enableTransfers",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_tokenFactory",
                "type": "address"
              },
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_parentSnapShotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_token",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_controller",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "ClaimedTokens",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_cloneToken",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_snapshotBlock",
                "type": "uint256"
              }
            ],
            "name": "NewCloneToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "1809:33:1:-;1541:19840;1809:33;;1541:19840;1809:33;;;;;;;;;;;;;;:::i;:::-;;4244:728;8:9:-1;5:2;;;30:1;27;20:12;5:2;4244:728:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:10:0;:23;;-1:-1:-1;;;;;;305:23:0;318:10;305:23;;;4501:12:1;:48;;-1:-1:-1;;;;;4501:48:1;;305:23:0;4501:48:1;-1:-1:-1;;;;;;4501:48:1;;;;;;4244:728;;;4559:17;;4244:728;;;;;;;;;;;;;;4559:17;;305:23:0;;4559:17:1;;;;:::i;:::-;-1:-1:-1;4634:8:1;:24;;-1:-1:-1;;4634:24:1;;;;;;;4713:21;;;;:6;;:21;;;;;:::i;:::-;-1:-1:-1;4790:11:1;:39;;-1:-1:-1;;;;;;4790:39:1;-1:-1:-1;;;;;4790:39:1;;;;;;;;;;;-1:-1:-1;;;4839:19:1;:42;4891:16;:36;;-1:-1:-1;;4891:36:1;;;;;;;;;;-1:-1:-1;4953:12:1;4937:13;:28;1541:19840;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1541:19840:1;;;-1:-1:-1;1541:19840:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60806040526004361061012f5763ffffffff60e060020a60003504166306fdde0381146101ef578063095ea7b31461027957806317634514146102b157806318160ddd146102d857806323b872dd146102ed578063313ce567146103175780633cebb823146103425780634ee2cd7e1461036357806354fd4d50146103875780636638c0871461039c57806370a082311461045f57806380a5400114610480578063827f32c01461049557806395d89b41146104b9578063981b24d0146104ce578063a9059cbb146104e6578063bef97c871461050a578063c5bcc4f11461051f578063cae9ca5114610534578063d3ce77fe1461059d578063dd62ed3e146105c1578063df8de3e7146105e8578063e77772fe14610609578063f41e60c51461061e578063f77c479114610638575b60005461014490600160a060020a031661064d565b151561014f57600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101b557600080fd5b505af11580156101c9573d6000803e3d6000fd5b50505050506040513d60208110156101e057600080fd5b505115156101ed57600080fd5b005b3480156101fb57600080fd5b5061020461067a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023e578181015183820152602001610226565b50505050905090810190601f16801561026b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028557600080fd5b5061029d600160a060020a0360043516602435610707565b604080519115158252519081900360200190f35b3480156102bd57600080fd5b506102c6610885565b60408051918252519081900360200190f35b3480156102e457600080fd5b506102c661088b565b3480156102f957600080fd5b5061029d600160a060020a036004358116906024351660443561089c565b34801561032357600080fd5b5061032c610930565b6040805160ff9092168252519081900360200190f35b34801561034e57600080fd5b506101ed600160a060020a0360043516610939565b34801561036f57600080fd5b506102c6600160a060020a036004351660243561097f565b34801561039357600080fd5b50610204610acc565b3480156103a857600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261044394369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b60ff8b35169b909a909994019750919550918201935091508190840183828082843750949750508435955050505050602001351515610b27565b60408051600160a060020a039092168252519081900360200190f35b34801561046b57600080fd5b506102c6600160a060020a0360043516610d81565b34801561048c57600080fd5b50610443610d95565b3480156104a157600080fd5b5061029d600160a060020a0360043516602435610da4565b3480156104c557600080fd5b50610204610e5e565b3480156104da57600080fd5b506102c6600435610eb9565b3480156104f257600080fd5b5061029d600160a060020a0360043516602435610fad565b34801561051657600080fd5b5061029d610fd5565b34801561052b57600080fd5b506102c6610fde565b34801561054057600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261029d948235600160a060020a0316946024803595369594606494920191908190840183828082843750949750610fe49650505050505050565b3480156105a957600080fd5b5061029d600160a060020a03600435166024356110ff565b3480156105cd57600080fd5b506102c6600160a060020a03600435811690602435166111b5565b3480156105f457600080fd5b506101ed600160a060020a03600435166111e0565b34801561061557600080fd5b506104436113c7565b34801561062a57600080fd5b506101ed60043515156113db565b34801561064457600080fd5b50610443611405565b600080600160a060020a03831615156106695760009150610674565b823b90506000811191505b50919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b505050505081565b600b5460009060ff16151561071b57600080fd5b8115806107495750336000908152600960209081526040808320600160a060020a0387168452909152902054155b151561075457600080fd5b60005461076990600160a060020a031661064d565b1561081d5760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b505050506040513d602081101561081057600080fd5b5051151561081d57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b600061089643610eb9565b90505b90565b60008054600160a060020a0316331461091b57600b5460ff1615156108c057600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020548211156108f057600080fd5b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b610926848484611414565b5060019392505050565b60025460ff1681565b600054600160a060020a0316331461095057600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03821660009081526008602052604081205415806109db5750600160a060020a0383166000908152600860205260408120805484929081106109c457fe5b6000918252602090912001546001608060020a0316115b15610aa357600554600160a060020a031615610a9b57600554600654600160a060020a0390911690634ee2cd7e908590610a1690869061161e565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b505050506040513d6020811015610a9257600080fd5b5051905061087f565b50600061087f565b600160a060020a0383166000908152600860205260409020610ac59083611636565b905061087f565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b600080831515610b35574393505b600b546040517f5b7b72c100000000000000000000000000000000000000000000000000000000815230600482018181526024830188905260ff8a16606484015286151560a484015260c0604484019081528b5160c48501528b51610100909504600160a060020a031694635b7b72c1948a938e938e938e938d939291608482019160e40190602089019080838360005b83811015610bde578181015183820152602001610bc6565b50505050905090810190601f168015610c0b5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c3e578181015183820152602001610c26565b50505050905090810190601f168015610c6b5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610c9057600080fd5b505af1158015610ca4573d6000803e3d6000fd5b505050506040513d6020811015610cba57600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b158015610d2057600080fd5b505af1158015610d34573d6000803e3d6000fd5b5050604080518781529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a29695505050505050565b6000610d8d824361097f565b90505b919050565b600554600160a060020a031681565b6000805481908190600160a060020a03163314610dc057600080fd5b610dc861088b565b9150838201821115610dd957600080fd5b610de285610d81565b9050838101811115610df357600080fd5b610e00600a858401611795565b600160a060020a0385166000908152600860205260409020610e2490828601611795565b604080518581529051600160a060020a038716916000916000805160206118c98339815191529181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b600a546000901580610eee575081600a6000815481101515610ed757fe5b6000918252602090912001546001608060020a0316115b15610f9b57600554600160a060020a031615610f9357600554600654600160a060020a039091169063981b24d090610f2790859061161e565b6040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015610f6057600080fd5b505af1158015610f74573d6000803e3d6000fd5b505050506040513d6020811015610f8a57600080fd5b50519050610d90565b506000610d90565b610fa6600a83611636565b9050610d90565b600b5460009060ff161515610fc157600080fd5b610fcc338484611414565b50600192915050565b600b5460ff1681565b60065481565b6000610ff08484610707565b1515610ffb57600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b8381101561108e578181015183820152602001611076565b50505050905090810190601f1680156110bb5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156110dd57600080fd5b505af11580156110f1573d6000803e3d6000fd5b506001979650505050505050565b6000805481908190600160a060020a0316331461111b57600080fd5b61112361088b565b91508382101561113257600080fd5b61113b85610d81565b90508381101561114a57600080fd5b611157600a858403611795565b600160a060020a038516600090815260086020526040902061117b90858303611795565b604080518581529051600091600160a060020a038816916000805160206118c98339815191529181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600080548190600160a060020a031633146111fa57600080fd5b600160a060020a038316151561124b5760008054604051600160a060020a0390911691303180156108fc02929091818181858888f19350505050158015611245573d6000803e3d6000fd5b506113c2565b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051849350600160a060020a038416916370a082319160248083019260209291908290030181600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d60208110156112d957600080fd5b505160008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b505050506040513d602081101561137957600080fd5b5050600054604080518381529051600160a060020a03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a35b505050565b600b546101009004600160a060020a031681565b600054600160a060020a031633146113f257600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b60008082151561145c5783600160a060020a031685600160a060020a03166000805160206118c9833981519152856040518082815260200191505060405180910390a3611617565b600654431161146a57600080fd5b600160a060020a0384161580159061148b5750600160a060020a0384163014155b151561149657600080fd5b6114a0854361097f565b9150828210156114af57600080fd5b6000546114c490600160a060020a031661064d565b1561157a5760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015288811660248301526044820188905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561154357600080fd5b505af1158015611557573d6000803e3d6000fd5b505050506040513d602081101561156d57600080fd5b5051151561157a57600080fd5b600160a060020a038516600090815260086020526040902061159e90848403611795565b6115a8844361097f565b90508281018111156115b957600080fd5b600160a060020a03841660009081526008602052604090206115dd90828501611795565b83600160a060020a031685600160a060020a03166000805160206118c9833981519152856040518082815260200191505060405180910390a35b5050505050565b600081831061162d578161162f565b825b9392505050565b600080600080858054905060001415611652576000935061178c565b85548690600019810190811061166457fe5b6000918252602090912001546001608060020a031685106116c15785548690600019810190811061169157fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a0316935061178c565b8560008154811015156116d057fe5b6000918252602090912001546001608060020a03168510156116f5576000935061178c565b8554600093506000190191505b8282111561175257600260018385010104905084868281548110151561172457fe5b6000918252602090912001546001608060020a0316116117465780925061174d565b6001810391505b611702565b858381548110151561176057fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b8154600090819015806117ce575083544390859060001981019081106117b757fe5b6000918252602090912001546001608060020a0316105b1561184057835484906117e4826001830161188b565b815481106117ee57fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff1990931692909217161781559150611885565b83548490600019810190811061185257fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b8154818355818111156113c2576000838152602090206113c291810190830161089991905b808211156118c457600081556001016118b0565b50905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820813a6a81afe04f9da86f2314e9c309c7270d3505f7d6e53bd7c3efe45dc5bf500029",
            "sourceMap": "1541:19840:1:-;;;;;;;;-1:-1:-1;1541:19840:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20192:10;;20181:22;;-1:-1:-1;;;;;20192:10:1;20181;:22::i;:::-;20173:31;;;;;;;;20238:10;;20222:69;;;;;;20280:10;20222:69;;;;;;-1:-1:-1;;;;;20238:10:1;;;;20222:40;;20269:9;;20222:69;;;;;;;;;;;;;;20269:9;20238:10;20222:69;;;5:2:-1;;;;30:1;27;20:12;5:2;20222:69:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20222:69:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20222:69:1;20214:78;;;;;;;;1541:19840;1583:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1583:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1583:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9110:829;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9110:829:1;;;-1:-1:-1;;;;;9110:829:1;;;;;;;;;;;;;;;;;;;;;;;2724:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2724:25:1;;;;;;;;;;;;;;;;;;;;11392:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11392:105:1;;;;5808:711;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5808:711:1;-1:-1:-1;;;;;5808:711:1;;;;;;;;;;;;1663:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1663:21:1;;;;;;;;;;;;;;;;;;;;;;;456:116:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;456:116:0;;;-1:-1:-1;;;;;456:116:0;;;11851:938:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11851:938:1;;;-1:-1:-1;;;;;11851:938:1;;;;;1809:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1809:33:1;;;;14649:755;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14649:755:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14649:755:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14649:755:1;;-1:-1:-1;14649:755:1;;;;-1:-1:-1;14649:755:1;-1:-1:-1;14649:755:1;;;;;;;;;;-1:-1:-1;14649:755:1;;-1:-1:-1;;14649:755:1;;;-1:-1:-1;;;;;14649:755:1;;;;;;;;;;;-1:-1:-1;;;;;14649:755:1;;;;;;;;;;;;;;8577:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8577:134:1;;;-1:-1:-1;;;;;8577:134:1;;;2423:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:30:1;;;;15735:576;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15735:576:1;;;-1:-1:-1;;;;;15735:576:1;;;;;1744:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1744:20:1;;;;13002:910;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13002:910:1;;;;;5271:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5271:187:1;;;-1:-1:-1;;;;;5271:187:1;;;;;3303:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3303:28:1;;;;2610:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2610:31:1;;;;10926:342;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10926:342:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10926:342:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10926:342:1;;-1:-1:-1;10926:342:1;;-1:-1:-1;;;;;;;10926:342:1;16541:500;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16541:500:1;;;-1:-1:-1;;;;;16541:500:1;;;;;10258:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10258:151:1;-1:-1:-1;;;;;10258:151:1;;;;;;;;;;20599:365;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20599:365:1;;;-1:-1:-1;;;;;20599:365:1;;;3389:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3389:38:1;;;;17264:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17264:124:1;;;;;;;242:25:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:25:0;;;;19503:222:1;19564:4;;-1:-1:-1;;;;;19603:10:1;;;19599:28;;;19622:5;19615:12;;;;19599:28;19680:5;19668:18;19660:26;;19717:1;19712:4;:6;19705:13;;19503:222;;;;;:::o;1583:18::-;;;;;;;;;;;;;;;-1:-1:-1;;1583:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9110:829::-;9210:16;;9178:12;;9210:16;;9202:25;;;;;;;;9550:12;;;9549:54;;-1:-1:-1;9576:10:1;9568:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;9568:29:1;;;;;;;;;;:34;9549:54;9541:63;;;;;;;;9698:10;;9687:22;;-1:-1:-1;;;;;9698:10:1;9687;:22::i;:::-;9683:130;;;9749:10;;;9733:68;;;;;;9771:10;9733:68;;;;-1:-1:-1;;;;;9733:68:1;;;;;;;;;;;;;;;9749:10;;;;;9733:37;;:68;;;;;;;;;;;;;;;;;;9749:10;9733:68;;;5:2:-1;;;;30:1;27;20:12;5:2;9733:68:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9733:68:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9733:68:1;9725:77;;;;;;;;9831:10;9823:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;9823:29:1;;;;;;;;;;;;:39;;;9872;;;;;;;9823:29;;9831:10;9872:39;;;;;;;;;;;-1:-1:-1;9928:4:1;9110:829;;;;;:::o;2724:25::-;;;;:::o;11392:105::-;11440:4;11463:27;11477:12;11463:13;:27::i;:::-;11456:34;;11392:105;;:::o;5808:711::-;5896:12;6215:10;;-1:-1:-1;;;;;6215:10:1;6201;:24;6197:254;;6249:16;;;;6241:25;;;;;;;;-1:-1:-1;;;;;6351:14:1;;;;;;:7;:14;;;;;;;;6366:10;6351:26;;;;;;;;-1:-1:-1;;6351:37:1;6343:46;;;;;;-1:-1:-1;;;;;6403:14:1;;;;;;:7;:14;;;;;;;;6418:10;6403:26;;;;;;;:37;;;;;;;6197:254;6460:31;6471:5;6478:3;6483:7;6460:10;:31::i;:::-;-1:-1:-1;6508:4:1;5808:711;;;;;:::o;1663:21::-;;;;;;:::o;456:116:0:-;219:10;;-1:-1:-1;;;;;219:10:0;205;:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:0;-1:-1:-1;;;;;538:27:0;;;;;;;;;;456:116::o;11851:938:1:-;-1:-1:-1;;;;;12289:16:1;;11940:4;12289:16;;;:8;:16;;;;;:23;:28;;12288:92;;-1:-1:-1;;;;;;12335:16:1;;;;;;:8;:16;;;;;:19;;12367:12;;12335:16;:19;;;;;;;;;;;;;;;:29;-1:-1:-1;;;;;12335:29:1;:44;12288:92;12284:499;;;12408:11;;-1:-1:-1;;;;;12408:11:1;12400:25;12396:222;;12452:11;;12502:19;;-1:-1:-1;;;;;12452:11:1;;;;:23;;12476:6;;12484:38;;12488:12;;12484:3;:38::i;:::-;12452:71;;;-1:-1:-1;12452:71:1;;;;;;-1:-1:-1;;;;;12452:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12452:71:1;;;;5:2:-1;;;;30:1;27;20:12;5:2;12452:71:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12452:71:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12452:71:1;;-1:-1:-1;12445:78:1;;12396:222;-1:-1:-1;12602:1:1;12595:8;;12284:499;-1:-1:-1;;;;;12741:16:1;;;;;;:8;:16;;;;;12730:42;;12759:12;12730:10;:42::i;:::-;12723:49;;;;1809:33;;;;;;;;;;;;;;;-1:-1:-1;;1809:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14649:755;14861:7;;14884:19;;14880:54;;;14922:12;14905:29;;14880:54;14969:12;;:212;;;;;15012:4;14969:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;;;;-1:-1:-1;;;;;14969:12:1;;:29;;:212;;;;;;15119:17;;14969:212;;;;;;;;;;;-1:-1:-1;14969:212:1;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14969:212:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14969:212:1;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14969:212:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14969:212:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14969:212:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14969:212:1;15192:39;;;;;;15220:10;15192:39;;;;;;14969:212;;-1:-1:-1;;;;;;15192:27:1;;;;;:39;;;;;-1:-1:-1;;15192:39:1;;;;;;;;-1:-1:-1;15192:27:1;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;15192:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;15311:50:1;;;;;;;;-1:-1:-1;;;;;15311:50:1;;;-1:-1:-1;15311:50:1;;-1:-1:-1;15311:50:1;;;;;;;;15386:10;14649:755;-1:-1:-1;;;;;;14649:755:1:o;8577:134::-;8637:15;8671:33;8683:6;8691:12;8671:11;:33::i;:::-;8664:40;;8577:134;;;;:::o;2423:30::-;;;-1:-1:-1;;;;;2423:30:1;;:::o;15735:576::-;15825:4;219:10:0;;15825:4:1;;;;-1:-1:-1;;;;;219:10:0;205;:24;197:33;;;;;;15863:13:1;:11;:13::i;:::-;15841:35;-1:-1:-1;15894:24:1;;;:42;-1:-1:-1;15894:42:1;15886:51;;;;;;15994:17;16004:6;15994:9;:17::i;:::-;15969:42;-1:-1:-1;16029:27:1;;;:48;-1:-1:-1;16029:48:1;16021:57;;;;;;16110:62;16127:18;16164:7;16147:14;:24;16110:16;:62::i;:::-;-1:-1:-1;;;;;16199:16:1;;;;;;:8;:16;;;;;16182:63;;16217:27;;;16182:16;:63::i;:::-;16255:28;;;;;;;;16264:1;-1:-1:-1;;;;;;;16255:28:1;;;16264:1;;16255:28;16264:1;;-1:-1:-1;;16264:1:1;-1:-1:-1;;;;;16255:28:1;;;;;;;;-1:-1:-1;16300:4:1;;15735:576;-1:-1:-1;;;;15735:576:1:o;1744:20::-;;;;;;;;;;;;;;;-1:-1:-1;;1744:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13002:910;13441:18;:25;13068:4;;13441:30;;13440:96;;;13523:12;13489:18;13508:1;13489:21;;;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;13489:31:1;:46;13440:96;13436:470;;;13564:11;;-1:-1:-1;;;;;13564:11:1;13556:25;13552:183;;13608:11;;13652:19;;-1:-1:-1;;;;;13608:11:1;;;;:25;;13634:38;;13638:12;;13634:3;:38::i;:::-;13608:65;;;;;-1:-1:-1;;;13608:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13608:65:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13608:65:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13608:65:1;;-1:-1:-1;13601:72:1;;13552:183;-1:-1:-1;13719:1:1;13712:8;;13436:470;13851:44;13862:18;13882:12;13851:10;:44::i;:::-;13844:51;;;;5271:187;5367:16;;5335:12;;5367:16;;5359:25;;;;;;;;5394:36;5405:10;5417:3;5422:7;5394:10;:36::i;:::-;-1:-1:-1;5447:4:1;5271:187;;;;:::o;3303:28::-;;;;;;:::o;2610:31::-;;;;:::o;10926:342::-;11024:12;11056:26;11064:8;11074:7;11056;:26::i;:::-;11048:35;;;;;;;;11094:145;;;;;11156:10;11094:145;;;;;;;;;;;;11201:4;11094:145;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11094:48:1;;;;;11156:10;11094:145;;11201:4;11094:145;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11094:145:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11094:145:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;11257:4:1;;10926:342;-1:-1:-1;;;;;;;10926:342:1:o;16541:500::-;16630:4;219:10:0;;16630:4:1;;;;-1:-1:-1;;;;;219:10:0;205;:24;197:33;;;;;;16668:13:1;:11;:13::i;:::-;16646:35;-1:-1:-1;16699:25:1;;;;16691:34;;;;;;16762:17;16772:6;16762:9;:17::i;:::-;16735:44;-1:-1:-1;16797:30:1;;;;16789:39;;;;;;16838:62;16855:18;16892:7;16875:14;:24;16838:16;:62::i;:::-;-1:-1:-1;;;;;16927:16:1;;;;;;:8;:16;;;;;16910:65;;16945:29;;;16910:16;:65::i;:::-;16985:28;;;;;;;;17002:1;;-1:-1:-1;;;;;16985:28:1;;;-1:-1:-1;;;;;;;;;;;16985:28:1;;;;;;;;-1:-1:-1;17030:4:1;;16541:500;-1:-1:-1;;;;16541:500:1:o;10258:151::-;-1:-1:-1;;;;;10377:15:1;;;10341:17;10377:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;10258:151::o;20599:365::-;20775:17;219:10:0;;20775:17:1;;-1:-1:-1;;;;;219:10:0;205;:24;197:33;;;;;;-1:-1:-1;;;;;20672:13:1;;;20668:97;;;20701:10;;;:33;;-1:-1:-1;;;;;20701:10:1;;;;20721:4;:12;20701:33;;;;;20721:12;;20701:33;:10;:33;20721:12;20701:10;:33;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20701:33:1;20748:7;;20668:97;20839:21;;;;;;20855:4;20839:21;;;;;;20807:6;;-1:-1:-1;;;;;;20839:15:1;;;;;:21;;;;;;;;;;;;;;-1:-1:-1;20839:15:1;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;20839:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20839:21:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20839:21:1;20885:10;;;20870:35;;;;;;-1:-1:-1;;;;;20885:10:1;;;20870:35;;;;;;;;;;;;20839:21;;-1:-1:-1;20870:14:1;;;;;;:35;;;;;20839:21;;20870:35;;;;;;;;;;;:14;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;20870:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20870:35:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;20937:10:1;;20915:42;;;;;;;;-1:-1:-1;;;;;20937:10:1;;;;20915:42;;;;;;;;;20870:35;20915:42;;;232:1:0;20599:365:1;;;:::o;3389:38::-;;;;;;-1:-1:-1;;;;;3389:38:1;;:::o;17264:124::-;219:10:0;;-1:-1:-1;;;;;219:10:0;205;:24;197:33;;;;;;17345:16:1;:36;;-1:-1:-1;;17345:36:1;;;;;;;;;;17264:124::o;242:25:0:-;;;-1:-1:-1;;;;;242:25:0;;:::o;6898:1544:1:-;7467:23;;6992:12;;6988:158;;;-1:-1:-1;;;;;;;;7023:29:1;;;;;;;;-1:-1:-1;;;;;;;;7023:29:1;;;;;;;;;;;;;;;;7126:7;;6988:158;7167:19;;7189:12;-1:-1:-1;7159:43:1;;;;;;-1:-1:-1;;;;;7297:8:1;;;;;;7296:36;;-1:-1:-1;7326:4:1;-1:-1:-1;;;;;7311:20:1;;;;7296:36;7288:45;;;;;;;;7493:32;7505:5;7512:12;7493:11;:32::i;:::-;7467:58;-1:-1:-1;7547:30:1;;;;7539:39;;;;;;7665:10;;7654:22;;-1:-1:-1;;;;;7665:10:1;7654;:22::i;:::-;7650:127;;;7719:10;;;7703:59;;;;;;-1:-1:-1;;;;;7703:59:1;;;;;;;;;;;;;;;;;;;;;;7719:10;;;;;7703:38;;:59;;;;;;;;;;;;;;;;;;7719:10;7703:59;;;5:2:-1;;;;30:1;27;20:12;5:2;7703:59:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7703:59:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7703:59:1;7695:68;;;;;;;;-1:-1:-1;;;;;7921:15:1;;;;;;:8;:15;;;;;7904:64;;7938:29;;;7904:16;:64::i;:::-;8121:30;8133:3;8138:12;8121:11;:30::i;:::-;8097:54;-1:-1:-1;8172:27:1;;;:48;-1:-1:-1;8172:48:1;8164:57;;;;;;-1:-1:-1;;;;;8273:13:1;;;;;;:8;:13;;;;;8256:60;;8288:27;;;8256:16;:60::i;:::-;-1:-1:-1;;;;;;;;8405:29:1;;;;;;;;-1:-1:-1;;;;;;;;8405:29:1;;;;;;;;;;;;;;;;6898:1544;;;;;;:::o;19797:95::-;19849:4;19876:1;19872;:5;:13;;19884:1;19872:13;;;19880:1;19872:13;19865:20;19797:95;-1:-1:-1;;;19797:95:1:o;17762:765::-;17861:4;18202:8;18224;18297;17881:11;:18;;;;17903:1;17881:23;17877:37;;;17913:1;17906:8;;;;17877:37;17992:18;;;;-1:-1:-1;;17992:20:1;;;17980:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;17980:43:1;17970:53;;17966:117;;18056:18;;;;-1:-1:-1;;18056:20:1;;;18044:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;18044:39:1;;-1:-1:-1;18037:46:1;;17966:117;18106:11;18118:1;18106:14;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;18106:24:1;18097:33;;18093:47;;;18139:1;18132:8;;;;18093:47;18235:18;;18213:1;;-1:-1:-1;;;18235:20:1;;-1:-1:-1;18265:217:1;18278:3;18272;:9;18265:217;;;18325:1;18321;18309:9;;;:13;18308:18;18297:29;;18372:6;18344:11;18356:3;18344:16;;;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;18344:26:1;:34;18340:132;;18404:3;18398:9;;18340:132;;;18456:1;18452:3;:5;18446:11;;18340:132;18265:217;;;18498:11;18510:3;18498:16;;;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;18498:22:1;;-1:-1:-1;17762:765:1;;;;;;;;:::o;18745:587::-;18848:18;;18964:32;;;;18848:23;;18847:98;;-1:-1:-1;18897:18:1;;18932:12;;18897:18;;-1:-1:-1;;18897:21:1;;;18885:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;18885:44:1;:59;18847:98;18843:483;;;19012:20;;18999:11;;19012:20;18999:11;19012:20;;;;:::i;:::-;18999:35;;;;;;;;;;;;;;;;;19051:48;;-1:-1:-1;;19051:48:1;19086:12;-1:-1:-1;;;;;19051:48:1;;;;;;;19116:37;;;;;-1:-1:-1;19116:37:1;;;;18999:35;-1:-1:-1;18843:483:1;;;19237:18;;;;-1:-1:-1;;19237:20:1;;;19225:33;;;;;;;;;;;;;;;19275:37;;-1:-1:-1;;;;;19275:37:1;;;;;;-1:-1:-1;19275:37:1;;;;19225:33;-1:-1:-1;18843:483:1;18745:587;;;;:::o;1541:19840::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveAndCall(address,uint256,bytes)": "cae9ca51",
            "balanceOf(address)": "70a08231",
            "balanceOfAt(address,uint256)": "4ee2cd7e",
            "changeController(address)": "3cebb823",
            "claimTokens(address)": "df8de3e7",
            "controller()": "f77c4791",
            "createCloneToken(string,uint8,string,uint256,bool)": "6638c087",
            "creationBlock()": "17634514",
            "decimals()": "313ce567",
            "destroyTokens(address,uint256)": "d3ce77fe",
            "enableTransfers(bool)": "f41e60c5",
            "generateTokens(address,uint256)": "827f32c0",
            "name()": "06fdde03",
            "parentSnapShotBlock()": "c5bcc4f1",
            "parentToken()": "80a54001",
            "symbol()": "95d89b41",
            "tokenFactory()": "e77772fe",
            "totalSupply()": "18160ddd",
            "totalSupplyAt(uint256)": "981b24d0",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transfersEnabled()": "bef97c87",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/MiniMeToken.sol\":\"MiniMeToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x5e98063ce7b6a58d41e2d7dfbe651527e2cfaf255f0fe82538783c121259e77f\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      },
      "MiniMeTokenFactory": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "21610:1241:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21610:1241:1;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "21610:1241:1:-;;;;;;;;;;;;;;;;;;;;;;;22290:559;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22290:559:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22290:559:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22290:559:1;;-1:-1:-1;22290:559:1;;;;-1:-1:-1;22290:559:1;-1:-1:-1;22290:559:1;;;;;;;;;;-1:-1:-1;22290:559:1;;-1:-1:-1;;;;22290:559:1;;;;;-1:-1:-1;22290:559:1;;-1:-1:-1;;22290:559:1;;;;;;;;;;;;;;;;;;;;;22514:11;22537:20;22589:4;22607:12;22633:14;22661:10;22685:13;22712:12;22738:17;22560:209;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22560:209:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22560:209:1;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;22560:209:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;22780:37:1;;;;;;22806:10;22780:37;;;;;;22537:232;;-1:-1:-1;22780:25:1;;;;;;:37;;;;;-1:-1:-1;;22780:37:1;;;;;;;;-1:-1:-1;22780:25:1;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;22780:37:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;22834:8:1;;22290:559;-1:-1:-1;;;;;;;;;;22290:559:1:o;21610:1241::-;;;;;;;;;;:::o"
          },
          "methodIdentifiers": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": "5b7b72c1"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"params\":{\"_decimalUnits\":\"Number of decimals of the new token\",\"_parentToken\":\"Address of the token being cloned\",\"_snapshotBlock\":\"Block of the parent token that will  determine the initial distribution of the clone token\",\"_tokenName\":\"Name of the new token\",\"_tokenSymbol\":\"Token Symbol for the new token\",\"_transfersEnabled\":\"If true, tokens will be able to be transferred\"},\"return\":\"The address of the new token contract\"}}},\"userdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"notice\":\"Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/MiniMeToken.sol\":\"MiniMeTokenFactory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x5e98063ce7b6a58d41e2d7dfbe651527e2cfaf255f0fe82538783c121259e77f\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      }
    },
    "./contracts/SampleCampaign-TokenController.sol": {
      "Campaign": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "vaultAddress",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onTransfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenContract",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newVaultAddress",
                "type": "address"
              }
            ],
            "name": "setVault",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFunding",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "finalizeFunding",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwner",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "startFundingTime",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onApprove",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalCollected",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "endFundingTime",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "proxyPayment",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_startFundingTime",
                "type": "uint256"
              },
              {
                "name": "_endFundingTime",
                "type": "uint256"
              },
              {
                "name": "_maximumFunding",
                "type": "uint256"
              },
              {
                "name": "_vaultAddress",
                "type": "address"
              },
              {
                "name": "_tokenAddress",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060405160a0806106898339810160409081528151602083015191830151606084015160809094015160008054600160a060020a031916331790559193909142841080159061005e57508484115b8015610074575069021e19e0c9bab24000008311155b80156100885750600160a060020a03821615155b151561009357600080fd5b60019490945560029290925560035560058054600160a060020a03938416600160a060020a031991821617909155600680549290931691161790556105ac806100dd6000396000f3006080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663430bf08a81146100cf5780634a3931491461010057806355a373d61461013e5780636817031b146101535780638da5cb5b1461017457806399d64ab014610189578063a19ed39d146101b0578063a6f9dae1146101c5578063b75ece9c146101e6578063da682aeb14610100578063e29eb836146101fb578063e4693e9814610210578063f48c305414610225575b6100cd33610239565b005b3480156100db57600080fd5b506100e4610405565b60408051600160a060020a039092168252519081900360200190f35b34801561010c57600080fd5b5061012a600160a060020a0360043581169060243516604435610414565b604080519115158252519081900360200190f35b34801561014a57600080fd5b506100e461041d565b34801561015f57600080fd5b506100cd600160a060020a036004351661042c565b34801561018057600080fd5b506100e4610472565b34801561019557600080fd5b5061019e610481565b60408051918252519081900360200190f35b3480156101bc57600080fd5b506100cd610487565b3480156101d157600080fd5b506100cd600160a060020a0360043516610515565b3480156101f257600080fd5b5061019e61055b565b34801561020757600080fd5b5061019e610561565b34801561021c57600080fd5b5061019e610567565b61012a600160a060020a036004351661056d565b600154421015801561024d57506002544211155b80156102f85750600560009054906101000a9004600160a060020a0316600160a060020a031663f77c47916040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050506040513d60208110156102ea57600080fd5b5051600160a060020a031615155b801561030357503415155b80156103155750600354346004540111155b151561032057600080fd5b6004805434908101909155600654604051600160a060020a039091169180156108fc02916000818181858888f19350505050151561035d57600080fd5b600554604080517f827f32c0000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301523460248301529151919092169163827f32c09160448083019260209291908290030181600087803b1580156103cb57600080fd5b505af11580156103df573d6000803e3d6000fd5b505050506040513d60208110156103f557600080fd5b5051151561040257600080fd5b50565b600654600160a060020a031681565b60019392505050565b600554600160a060020a031681565b600054600160a060020a0316331461044357600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031681565b60035481565b60025442101561049657600080fd5b600554604080517f3cebb8230000000000000000000000000000000000000000000000000000000081526000600482018190529151600160a060020a0390931692633cebb8239260248084019391929182900301818387803b1580156104fb57600080fd5b505af115801561050f573d6000803e3d6000fd5b50505050565b600054600160a060020a0316331461052c57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60015481565b60045481565b60025481565b600061057882610239565b5060019190505600a165627a7a72305820c461f6a98b902a8a9e162eb90eca7306c2c433c54f3435f3bd4ccd8fc1508f020029",
            "sourceMap": "1968:5273:2:-;;;3061:728;8:9:-1;5:2;;;30:1;27;20:12;5:2;3061:728:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:5;:18;;-1:-1:-1;;;;;;1453:18:2;1461:10;1453:18;;;3061:728;;;;3279:3;3260:22;;;;;3259:113;;;3354:17;3336:15;:35;3259:113;:161;;;;;3408:11;3389:15;:30;;3259:161;:227;;;;-1:-1:-1;;;;;;3467:18:2;;;;3259:227;3250:237;;;;;;;;3542:16;:36;;;;3588:14;:32;;;;3630:14;:32;3672:13;:42;;-1:-1:-1;;;;;3672:42:2;;;-1:-1:-1;;;;;;3672:42:2;;;;;;;3754:12;:28;;;;;;;;;;;1968:5273;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663430bf08a81146100cf5780634a3931491461010057806355a373d61461013e5780636817031b146101535780638da5cb5b1461017457806399d64ab014610189578063a19ed39d146101b0578063a6f9dae1146101c5578063b75ece9c146101e6578063da682aeb14610100578063e29eb836146101fb578063e4693e9814610210578063f48c305414610225575b6100cd33610239565b005b3480156100db57600080fd5b506100e4610405565b60408051600160a060020a039092168252519081900360200190f35b34801561010c57600080fd5b5061012a600160a060020a0360043581169060243516604435610414565b604080519115158252519081900360200190f35b34801561014a57600080fd5b506100e461041d565b34801561015f57600080fd5b506100cd600160a060020a036004351661042c565b34801561018057600080fd5b506100e4610472565b34801561019557600080fd5b5061019e610481565b60408051918252519081900360200190f35b3480156101bc57600080fd5b506100cd610487565b3480156101d157600080fd5b506100cd600160a060020a0360043516610515565b3480156101f257600080fd5b5061019e61055b565b34801561020757600080fd5b5061019e610561565b34801561021c57600080fd5b5061019e610567565b61012a600160a060020a036004351661056d565b600154421015801561024d57506002544211155b80156102f85750600560009054906101000a9004600160a060020a0316600160a060020a031663f77c47916040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156102c057600080fd5b505af11580156102d4573d6000803e3d6000fd5b505050506040513d60208110156102ea57600080fd5b5051600160a060020a031615155b801561030357503415155b80156103155750600354346004540111155b151561032057600080fd5b6004805434908101909155600654604051600160a060020a039091169180156108fc02916000818181858888f19350505050151561035d57600080fd5b600554604080517f827f32c0000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301523460248301529151919092169163827f32c09160448083019260209291908290030181600087803b1580156103cb57600080fd5b505af11580156103df573d6000803e3d6000fd5b505050506040513d60208110156103f557600080fd5b5051151561040257600080fd5b50565b600654600160a060020a031681565b60019392505050565b600554600160a060020a031681565b600054600160a060020a0316331461044357600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031681565b60035481565b60025442101561049657600080fd5b600554604080517f3cebb8230000000000000000000000000000000000000000000000000000000081526000600482018190529151600160a060020a0390931692633cebb8239260248084019391929182900301818387803b1580156104fb57600080fd5b505af115801561050f573d6000803e3d6000fd5b50505050565b600054600160a060020a0316331461052c57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60015481565b60045481565b60025481565b600061057882610239565b5060019190505600a165627a7a72305820c461f6a98b902a8a9e162eb90eca7306c2c433c54f3435f3bd4ccd8fc1508f020029",
            "sourceMap": "1968:5273:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:21;4150:10;4140:9;:21::i;:::-;1968:5273;2320:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2320:27:2;;;;;;;;-1:-1:-1;;;;;2320:27:2;;;;;;;;;;;;;;4930:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4930:104:2;-1:-1:-1;;;;;4930:104:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2245:32:2;;;;7136:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7136:102:2;-1:-1:-1;;;;;7136:102:2;;;;;1334:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1334:20:2;;;;2145:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2145:26:2;;;;;;;;;;;;;;;;;;;;6853:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6853:117:2;;;;1706:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1706:84:2;-1:-1:-1;;;;;1706:84:2;;;;;2019:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2019:28:2;;;;2195:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2195:26:2;;;;2082;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2082:26:2;;;;4452:115;;-1:-1:-1;;;;;4452:115:2;;;;;5841:726;5982:16;;5975:3;:23;;5974:64;;;;;6023:14;;6016:3;:21;;5974:64;:113;;;;;6055:13;;;;;;;;;-1:-1:-1;;;;;6055:13:2;-1:-1:-1;;;;;6055:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6055:26:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6055:26:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6055:26:2;-1:-1:-1;;;;;6055:31:2;;;5974:113;:170;;;;-1:-1:-1;6129:9:2;:14;;5974:170;:232;;;;;6191:14;;6178:9;6161:14;;:26;:44;;5974:232;5965:242;;;;;;;;6262:14;:27;;6280:9;6262:27;;;;;;6339:12;;:28;;-1:-1:-1;;;;;6339:12:2;;;;:28;;;;;6262:14;6339:28;6262:14;6339:28;6280:9;6339:12;:28;;;;;;;6330:38;;;;;;;;6495:13;;:47;;;;;;-1:-1:-1;;;;;6495:47:2;;;;;;;6532:9;6495:47;;;;;;:13;;;;;:28;;:47;;;;;;;;;;;;;;:13;;:47;;;5:2:-1;;;;30:1;27;20:12;5:2;6495:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6495:47:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6495:47:2;6486:57;;;;;;;;5841:726;:::o;2320:27::-;;;-1:-1:-1;;;;;2320:27:2;;:::o;4930:104::-;5023:4;4930:104;;;;;:::o;2245:32::-;;;-1:-1:-1;;;;;2245:32:2;;:::o;7136:102::-;1316:5;;-1:-1:-1;;;;;1316:5:2;1302:10;:19;1293:29;;;;;;7200:12;:31;;-1:-1:-1;;7200:31:2;-1:-1:-1;;;;;7200:31:2;;;;;;;;;;7136:102::o;1334:20::-;;;-1:-1:-1;;;;;1334:20:2;;:::o;2145:26::-;;;;:::o;6853:117::-;6905:14;;6898:3;:21;;6890:30;;;;;;6930:13;;:33;;;;;;:13;:33;;;;;;;;-1:-1:-1;;;;;6930:13:2;;;;:30;;:33;;;;;:13;;:33;;;;;;:13;;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;6930:33:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6930:33:2;;;;6853:117::o;1706:84::-;1316:5;;-1:-1:-1;;;;;1316:5:2;1302:10;:19;1293:29;;;;;;1766:5;:17;;-1:-1:-1;;1766:17:2;-1:-1:-1;;;;;1766:17:2;;;;;;;;;;1706:84::o;2019:28::-;;;;:::o;2195:26::-;;;;:::o;2082:::-;;;;:::o;4452:115::-;4506:4;4522:17;4532:6;4522:9;:17::i;:::-;-1:-1:-1;4556:4:2;4452:115;;;:::o"
          },
          "methodIdentifiers": {
            "changeOwner(address)": "a6f9dae1",
            "endFundingTime()": "e4693e98",
            "finalizeFunding()": "a19ed39d",
            "maximumFunding()": "99d64ab0",
            "onApprove(address,address,uint256)": "da682aeb",
            "onTransfer(address,address,uint256)": "4a393149",
            "owner()": "8da5cb5b",
            "proxyPayment(address)": "f48c3054",
            "setVault(address)": "6817031b",
            "startFundingTime()": "b75ece9c",
            "tokenContract()": "55a373d6",
            "totalCollected()": "e29eb836",
            "vaultAddress()": "430bf08a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newVaultAddress\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startFundingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endFundingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_startFundingTime\",\"type\":\"uint256\"},{\"name\":\"_endFundingTime\",\"type\":\"uint256\"},{\"name\":\"_maximumFunding\",\"type\":\"uint256\"},{\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{\"changeOwner(address)\":{\"params\":{\"_newOwner\":\"The address of the new owner. 0x0 can be used to create  an unowned neutral vault, however that cannot be undone\"}},\"finalizeFunding()\":{\"details\":\"`finalizeFunding()` can only be called after the end of the funding period.\"},\"onApprove(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount in the `approve()` call\",\"_owner\":\"The address that calls `approve()`\",\"_spender\":\"The spender in the `approve()` call\"},\"return\":\"False if the controller does not authorize the approval\"},\"onTransfer(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of the transfer\",\"_from\":\"The origin of the transfer\",\"_to\":\"The destination of the transfer\"},\"return\":\"False if the controller does not authorize the transfer\"},\"proxyPayment(address)\":{\"params\":{\"_owner\":\"The address that will hold the newly created tokens\"}},\"setVault(address)\":{\"params\":{\"_newVaultAddress\":\"The address that will receive the ether sent to this  Campaign\"}}}},\"userdoc\":{\"methods\":{\"changeOwner(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"finalizeFunding()\":{\"notice\":\"`finalizeFunding()` ends the Campaign by calling setting the  controller to 0, thereby ending the issuance of new tokens and stopping the  Campaign from receiving more ether\"},\"onApprove(address,address,uint256)\":{\"notice\":\"Notifies the controller about an approval, for this Campaign all  approvals are allowed by default and no extra notifications are needed\"},\"onTransfer(address,address,uint256)\":{\"notice\":\"Notifies the controller about a transfer, for this Campaign all  transfers are allowed by default and no extra notifications are needed\"},\"proxyPayment(address)\":{\"notice\":\"//////////////`proxyPayment()` allows the caller to send ether to the Campaign and have the tokens created in an address of their choosing\"},\"setVault(address)\":{\"notice\":\"`onlyOwner` changes the location that ether is sent\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/SampleCampaign-TokenController.sol\":\"Campaign\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x5e98063ce7b6a58d41e2d7dfbe651527e2cfaf255f0fe82538783c121259e77f\"},\"./contracts/SampleCampaign-TokenController.sol\":{\"content\":\"pragma solidity ^0.4.6;\\n\\n/*\\n    Copyright 2017, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MilestoneTracker Contract\\n/// @author Jordi Baylina\\n/// @dev This contract controls the issuance of tokens for the MiniMe Token\\n///  Contract. This version specifically acts as a Campaign manager for raising\\n///  funds for non-profit causes, but it can be customized for any variety of\\n///  purposes.\\n\\nimport \\\"MiniMeToken.sol\\\";\\n\\n\\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\\n///  later changed\\ncontract Owned {\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner { require (msg.sender == owner); _; }\\n\\n    address public owner;\\n\\n    /// @notice The Constructor assigns the message sender to be `owner`\\n    function Owned() { owner = msg.sender;}\\n\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner. 0x0 can be used to create\\n    ///  an unowned neutral vault, however that cannot be undone\\n    function changeOwner(address _newOwner) onlyOwner {\\n        owner = _newOwner;\\n    }\\n}\\n\\n\\n/// @dev This is designed to control the issuance of a MiniMe Token for a\\n///  non-profit Campaign. This contract effectively dictates the terms of the\\n///  funding round.\\n\\ncontract Campaign is TokenController, Owned {\\n\\n    uint public startFundingTime;       // In UNIX Time Format\\n    uint public endFundingTime;         // In UNIX Time Format\\n    uint public maximumFunding;         // In wei\\n    uint public totalCollected;         // In wei\\n    MiniMeToken public tokenContract;   // The new token for this Campaign\\n    address public vaultAddress;        // The address to hold the funds donated\\n\\n/// @notice 'Campaign()' initiates the Campaign by setting its funding\\n/// parameters\\n/// @dev There are several checks to make sure the parameters are acceptable\\n/// @param _startFundingTime The UNIX time that the Campaign will be able to\\n/// start receiving funds\\n/// @param _endFundingTime The UNIX time that the Campaign will stop being able\\n/// to receive funds\\n/// @param _maximumFunding In wei, the Maximum amount that the Campaign can\\n/// receive (currently the max is set at 10,000 ETH for the beta)\\n/// @param _vaultAddress The address that will store the donated funds\\n/// @param _tokenAddress Address of the token contract this contract controls\\n\\n    function Campaign(\\n        uint _startFundingTime,\\n        uint _endFundingTime,\\n        uint _maximumFunding,\\n        address _vaultAddress,\\n        address _tokenAddress\\n\\n    ) {\\n        require ((_endFundingTime >= now) &&           // Cannot end in the past\\n            (_endFundingTime > _startFundingTime) &&\\n            (_maximumFunding <= 10000 ether) &&        // The Beta is limited\\n            (_vaultAddress != 0));                    // To prevent burning ETH\\n        startFundingTime = _startFundingTime;\\n        endFundingTime = _endFundingTime;\\n        maximumFunding = _maximumFunding;\\n        tokenContract = MiniMeToken(_tokenAddress);// The Deployed Token Contract\\n        vaultAddress = _vaultAddress;\\n    }\\n\\n/// @dev The fallback function is called when ether is sent to the contract, it\\n/// simply calls `doPayment()` with the address that sent the ether as the\\n/// `_owner`. Payable is a required solidity modifier for functions to receive\\n/// ether, without this modifier functions will throw if ether is sent to them\\n\\n    function ()  payable {\\n        doPayment(msg.sender);\\n    }\\n\\n/////////////////\\n// TokenController interface\\n/////////////////\\n\\n/// @notice `proxyPayment()` allows the caller to send ether to the Campaign and\\n/// have the tokens created in an address of their choosing\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function proxyPayment(address _owner) payable returns(bool) {\\n        doPayment(_owner);\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about a transfer, for this Campaign all\\n///  transfers are allowed by default and no extra notifications are needed\\n/// @param _from The origin of the transfer\\n/// @param _to The destination of the transfer\\n/// @param _amount The amount of the transfer\\n/// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about an approval, for this Campaign all\\n///  approvals are allowed by default and no extra notifications are needed\\n/// @param _owner The address that calls `approve()`\\n/// @param _spender The spender in the `approve()` call\\n/// @param _amount The amount in the `approve()` call\\n/// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount)\\n        returns(bool)\\n    {\\n        return true;\\n    }\\n\\n\\n/// @dev `doPayment()` is an internal function that sends the ether that this\\n///  contract receives to the `vault` and creates tokens in the address of the\\n///  `_owner` assuming the Campaign is still accepting funds\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function doPayment(address _owner) internal {\\n\\n// First check that the Campaign is allowed to receive this donation\\n        require ((now >= startFundingTime) &&\\n            (now <= endFundingTime) &&\\n            (tokenContract.controller() != 0) &&           // Extra check\\n            (msg.value != 0) &&\\n            (totalCollected + msg.value <= maximumFunding));\\n\\n//Track how much the Campaign has collected\\n        totalCollected += msg.value;\\n\\n//Send the ether to the vault\\n        require (vaultAddress.send(msg.value));\\n\\n// Creates an equal amount of tokens as ether sent. The new tokens are created\\n//  in the `_owner` address\\n        require (tokenContract.generateTokens(_owner, msg.value));\\n\\n        return;\\n    }\\n\\n/// @notice `finalizeFunding()` ends the Campaign by calling setting the\\n///  controller to 0, thereby ending the issuance of new tokens and stopping the\\n///  Campaign from receiving more ether\\n/// @dev `finalizeFunding()` can only be called after the end of the funding period.\\n\\n    function finalizeFunding() {\\n        require(now >= endFundingTime);\\n        tokenContract.changeController(0);\\n    }\\n\\n\\n/// @notice `onlyOwner` changes the location that ether is sent\\n/// @param _newVaultAddress The address that will receive the ether sent to this\\n///  Campaign\\n    function setVault(address _newVaultAddress) onlyOwner {\\n        vaultAddress = _newVaultAddress;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf442c850e56095399f35b12ccec5469d36276578632a998f48d094f9844c817b\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      },
      "Owned": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwner",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610166806100326000396000f30060806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114610050578063a6f9dae11461008e575b600080fd5b34801561005c57600080fd5b506100656100be565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561009a57600080fd5b506100bc73ffffffffffffffffffffffffffffffffffffffff600435166100da565b005b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100fe57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820e4aec4af48729fb058506426337ea4b3027c4818dc99006ceed1379f45be441a0029",
            "sourceMap": "1158:634:2:-;;;1434:39;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1453:5:2;:18;;-1:-1:-1;;;;;;1453:18:2;1461:10;1453:18;;;1158:634;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114610050578063a6f9dae11461008e575b600080fd5b34801561005c57600080fd5b506100656100be565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561009a57600080fd5b506100bc73ffffffffffffffffffffffffffffffffffffffff600435166100da565b005b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100fe57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820e4aec4af48729fb058506426337ea4b3027c4818dc99006ceed1379f45be441a0029",
            "sourceMap": "1158:634:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1334:20:2;;;;;;;;;;;;;;;;;;;;;;;1706:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1706:84:2;;;;;;;;;1334:20;;;;;;:::o;1706:84::-;1316:5;;;;1302:10;:19;1293:29;;;;;;1766:5;:17;;-1:-1:-1;;1766:17:2;;;;;;;;;;;;1706:84::o"
          },
          "methodIdentifiers": {
            "changeOwner(address)": "a6f9dae1",
            "owner()": "8da5cb5b"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"changeOwner(address)\":{\"params\":{\"_newOwner\":\"The address of the new owner. 0x0 can be used to create  an unowned neutral vault, however that cannot be undone\"}}}},\"userdoc\":{\"methods\":{\"changeOwner(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/SampleCampaign-TokenController.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    MiniMeTokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (MiniMeToken) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0x5e98063ce7b6a58d41e2d7dfbe651527e2cfaf255f0fe82538783c121259e77f\"},\"./contracts/SampleCampaign-TokenController.sol\":{\"content\":\"pragma solidity ^0.4.6;\\n\\n/*\\n    Copyright 2017, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MilestoneTracker Contract\\n/// @author Jordi Baylina\\n/// @dev This contract controls the issuance of tokens for the MiniMe Token\\n///  Contract. This version specifically acts as a Campaign manager for raising\\n///  funds for non-profit causes, but it can be customized for any variety of\\n///  purposes.\\n\\nimport \\\"MiniMeToken.sol\\\";\\n\\n\\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\\n///  later changed\\ncontract Owned {\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner { require (msg.sender == owner); _; }\\n\\n    address public owner;\\n\\n    /// @notice The Constructor assigns the message sender to be `owner`\\n    function Owned() { owner = msg.sender;}\\n\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner. 0x0 can be used to create\\n    ///  an unowned neutral vault, however that cannot be undone\\n    function changeOwner(address _newOwner) onlyOwner {\\n        owner = _newOwner;\\n    }\\n}\\n\\n\\n/// @dev This is designed to control the issuance of a MiniMe Token for a\\n///  non-profit Campaign. This contract effectively dictates the terms of the\\n///  funding round.\\n\\ncontract Campaign is TokenController, Owned {\\n\\n    uint public startFundingTime;       // In UNIX Time Format\\n    uint public endFundingTime;         // In UNIX Time Format\\n    uint public maximumFunding;         // In wei\\n    uint public totalCollected;         // In wei\\n    MiniMeToken public tokenContract;   // The new token for this Campaign\\n    address public vaultAddress;        // The address to hold the funds donated\\n\\n/// @notice 'Campaign()' initiates the Campaign by setting its funding\\n/// parameters\\n/// @dev There are several checks to make sure the parameters are acceptable\\n/// @param _startFundingTime The UNIX time that the Campaign will be able to\\n/// start receiving funds\\n/// @param _endFundingTime The UNIX time that the Campaign will stop being able\\n/// to receive funds\\n/// @param _maximumFunding In wei, the Maximum amount that the Campaign can\\n/// receive (currently the max is set at 10,000 ETH for the beta)\\n/// @param _vaultAddress The address that will store the donated funds\\n/// @param _tokenAddress Address of the token contract this contract controls\\n\\n    function Campaign(\\n        uint _startFundingTime,\\n        uint _endFundingTime,\\n        uint _maximumFunding,\\n        address _vaultAddress,\\n        address _tokenAddress\\n\\n    ) {\\n        require ((_endFundingTime >= now) &&           // Cannot end in the past\\n            (_endFundingTime > _startFundingTime) &&\\n            (_maximumFunding <= 10000 ether) &&        // The Beta is limited\\n            (_vaultAddress != 0));                    // To prevent burning ETH\\n        startFundingTime = _startFundingTime;\\n        endFundingTime = _endFundingTime;\\n        maximumFunding = _maximumFunding;\\n        tokenContract = MiniMeToken(_tokenAddress);// The Deployed Token Contract\\n        vaultAddress = _vaultAddress;\\n    }\\n\\n/// @dev The fallback function is called when ether is sent to the contract, it\\n/// simply calls `doPayment()` with the address that sent the ether as the\\n/// `_owner`. Payable is a required solidity modifier for functions to receive\\n/// ether, without this modifier functions will throw if ether is sent to them\\n\\n    function ()  payable {\\n        doPayment(msg.sender);\\n    }\\n\\n/////////////////\\n// TokenController interface\\n/////////////////\\n\\n/// @notice `proxyPayment()` allows the caller to send ether to the Campaign and\\n/// have the tokens created in an address of their choosing\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function proxyPayment(address _owner) payable returns(bool) {\\n        doPayment(_owner);\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about a transfer, for this Campaign all\\n///  transfers are allowed by default and no extra notifications are needed\\n/// @param _from The origin of the transfer\\n/// @param _to The destination of the transfer\\n/// @param _amount The amount of the transfer\\n/// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about an approval, for this Campaign all\\n///  approvals are allowed by default and no extra notifications are needed\\n/// @param _owner The address that calls `approve()`\\n/// @param _spender The spender in the `approve()` call\\n/// @param _amount The amount in the `approve()` call\\n/// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount)\\n        returns(bool)\\n    {\\n        return true;\\n    }\\n\\n\\n/// @dev `doPayment()` is an internal function that sends the ether that this\\n///  contract receives to the `vault` and creates tokens in the address of the\\n///  `_owner` assuming the Campaign is still accepting funds\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function doPayment(address _owner) internal {\\n\\n// First check that the Campaign is allowed to receive this donation\\n        require ((now >= startFundingTime) &&\\n            (now <= endFundingTime) &&\\n            (tokenContract.controller() != 0) &&           // Extra check\\n            (msg.value != 0) &&\\n            (totalCollected + msg.value <= maximumFunding));\\n\\n//Track how much the Campaign has collected\\n        totalCollected += msg.value;\\n\\n//Send the ether to the vault\\n        require (vaultAddress.send(msg.value));\\n\\n// Creates an equal amount of tokens as ether sent. The new tokens are created\\n//  in the `_owner` address\\n        require (tokenContract.generateTokens(_owner, msg.value));\\n\\n        return;\\n    }\\n\\n/// @notice `finalizeFunding()` ends the Campaign by calling setting the\\n///  controller to 0, thereby ending the issuance of new tokens and stopping the\\n///  Campaign from receiving more ether\\n/// @dev `finalizeFunding()` can only be called after the end of the funding period.\\n\\n    function finalizeFunding() {\\n        require(now >= endFundingTime);\\n        tokenContract.changeController(0);\\n    }\\n\\n\\n/// @notice `onlyOwner` changes the location that ether is sent\\n/// @param _newVaultAddress The address that will receive the ether sent to this\\n///  Campaign\\n    function setVault(address _newVaultAddress) onlyOwner {\\n        vaultAddress = _newVaultAddress;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf442c850e56095399f35b12ccec5469d36276578632a998f48d094f9844c817b\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"}},\"version\":1}"
      }
    },
    "./contracts/TokenController.sol": {
      "TokenController": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onTransfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onApprove",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "proxyPayment",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "methodIdentifiers": {
            "onApprove(address,address,uint256)": "da682aeb",
            "onTransfer(address,address,uint256)": "4a393149",
            "proxyPayment(address)": "f48c3054"
          }
        },
        "metadata": ""
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "formattedMessage": "./contracts/Controlled.sol:10:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Controlled() public { controller = msg.sender;}\n    ^------------------------------------------------------^\n",
      "message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 330,
        "file": "./contracts/Controlled.sol",
        "start": 274
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:103:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function MiniMeToken(\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4972,
        "file": "./contracts/MiniMeToken.sol",
        "start": 4244
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:182:12: Warning: Use of the \"var\" keyword is deprecated.\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\n           ^---------------------^\n",
      "message": "Use of the \"var\" keyword is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 7490,
        "file": "./contracts/MiniMeToken.sol",
        "start": 7467
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:197:12: Warning: Use of the \"var\" keyword is deprecated.\n           var previousBalanceTo = balanceOfAt(_to, block.number);\n           ^-------------------^\n",
      "message": "Use of the \"var\" keyword is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8118,
        "file": "./contracts/MiniMeToken.sol",
        "start": 8097
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:40:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Owned() { owner = msg.sender;}\n    ^-------------------------------------^\n",
      "message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 1473,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 1434
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:76:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function Campaign(\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 3789,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 3061
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:171:16: Warning: Invoking events without \"emit\" prefix is deprecated.\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\n               ^---------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 7052,
        "file": "./contracts/MiniMeToken.sol",
        "start": 7023
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:202:12: Warning: Invoking events without \"emit\" prefix is deprecated.\n           Transfer(_from, _to, _amount);\n           ^---------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 8434,
        "file": "./contracts/MiniMeToken.sol",
        "start": 8405
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:233:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Approval(msg.sender, _spender, _amount);\n        ^-------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 9911,
        "file": "./contracts/MiniMeToken.sol",
        "start": 9872
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:364:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        NewCloneToken(address(cloneToken), _snapshotBlock);\n        ^------------------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 15361,
        "file": "./contracts/MiniMeToken.sol",
        "start": 15311
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:384:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(0, _owner, _amount);\n        ^--------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 16283,
        "file": "./contracts/MiniMeToken.sol",
        "start": 16255
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:401:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        Transfer(_owner, 0, _amount);\n        ^--------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 17013,
        "file": "./contracts/MiniMeToken.sol",
        "start": 16985
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:499:33: Warning: Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.\n            controller.transfer(this.balance);\n                                ^----------^\n",
      "message": "Using contract member \"balance\" inherited from the address type is deprecated. Convert the contract to \"address\" type to access the member, for example use \"address(contract).balance\" instead.",
      "severity": "warning",
      "sourceLocation": {
        "end": 20733,
        "file": "./contracts/MiniMeToken.sol",
        "start": 20721
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/MiniMeToken.sol:506:9: Warning: Invoking events without \"emit\" prefix is deprecated.\n        ClaimedTokens(_token, controller, balance);\n        ^----------------------------------------^\n",
      "message": "Invoking events without \"emit\" prefix is deprecated.",
      "severity": "warning",
      "sourceLocation": {
        "end": 20957,
        "file": "./contracts/MiniMeToken.sol",
        "start": 20915
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:40:5: Warning: No visibility specified. Defaulting to \"public\". \n    function Owned() { owner = msg.sender;}\n    ^-------------------------------------^\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 1473,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 1434
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:45:5: Warning: No visibility specified. Defaulting to \"public\". \n    function changeOwner(address _newOwner) onlyOwner {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 1790,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 1706
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:76:5: Warning: No visibility specified. Defaulting to \"public\". \n    function Campaign(\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 3789,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 3061
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:100:5: Warning: No visibility specified. Defaulting to \"public\". \n    function ()  payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 4168,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 4109
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:112:5: Warning: No visibility specified. Defaulting to \"public\". \n    function proxyPayment(address _owner) payable returns(bool) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 4567,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 4452
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:5: Warning: No visibility specified. Defaulting to \"public\". \n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 5034,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 4930
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n                        ^-----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4963,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 4950
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n                                       ^---------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4976,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 4965
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n                                                    ^----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 4990,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 4978
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:5: Warning: No visibility specified. Defaulting to \"public\". \n    function onApprove(address _owner, address _spender, uint _amount)\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 5545,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 5424
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount)\n                       ^------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 5457,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 5443
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount)\n                                       ^--------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 5475,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 5459
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:58: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount)\n                                                         ^----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "sourceLocation": {
        "end": 5489,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 5477
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:172:5: Warning: No visibility specified. Defaulting to \"public\". \n    function finalizeFunding() {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 6970,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 6853
      },
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:181:5: Warning: No visibility specified. Defaulting to \"public\". \n    function setVault(address _newVaultAddress) onlyOwner {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
      "message": "No visibility specified. Defaulting to \"public\". ",
      "severity": "warning",
      "sourceLocation": {
        "end": 7238,
        "file": "./contracts/SampleCampaign-TokenController.sol",
        "start": 7136
      },
      "type": "Warning"
    }
  ],
  "sources": {
    "./contracts/Controlled.sol": {
      "id": 0
    },
    "./contracts/MiniMeToken.sol": {
      "id": 1
    },
    "./contracts/SampleCampaign-TokenController.sol": {
      "id": 2
    },
    "./contracts/TokenController.sol": {
      "id": 3
    }
  }
}