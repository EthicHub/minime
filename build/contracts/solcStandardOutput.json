{
  "contracts": {
    "./contracts/Controlled.sol": {
      "Controlled": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "devdoc": {
          "methods": {
            "changeController(address)": {
              "params": {
                "_newController": "The new controller of the contract"
              }
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a03199091161790556101668061003b6000396000f30060606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633cebb8238114610050578063f77c47911461007e575b600080fd5b341561005b57600080fd5b61007c73ffffffffffffffffffffffffffffffffffffffff600435166100ba565b005b341561008957600080fd5b61009161011e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000543373ffffffffffffffffffffffffffffffffffffffff9081169116146100e257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820dd442365781c0a95b286fd7e8f90c7b6faa168d5743cdf4a28f125ea94a01db20029",
            "sourceMap": "26:548:0:-;;;274:56;;;;;;;;305:10;:23;;-1:-1:-1;;;;;318:10:0;305:23;-1:-1:-1;;;;;;305:23:0;;;;;;26:548;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633cebb8238114610050578063f77c47911461007e575b600080fd5b341561005b57600080fd5b61007c73ffffffffffffffffffffffffffffffffffffffff600435166100ba565b005b341561008957600080fd5b61009161011e565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000543373ffffffffffffffffffffffffffffffffffffffff9081169116146100e257600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820dd442365781c0a95b286fd7e8f90c7b6faa168d5743cdf4a28f125ea94a01db20029",
            "sourceMap": "26:548:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116;;;;;;;;;;;;;;;;;;242:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116;219:10;;205;219;205:24;;;219:10;;205:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:0;;;;;;;;;;;;456:116::o;242:25::-;;;;;;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "71600",
              "executionCost": "20491",
              "totalCost": "92091"
            },
            "external": {
              "changeController(address)": "20622",
              "controller()": "410"
            }
          },
          "methodIdentifiers": {
            "changeController(address)": "3cebb823",
            "controller()": "f77c4791"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}}}},\"userdoc\":{\"methods\":{\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/Controlled.sol\":\"Controlled\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "changeController(address)": {
              "notice": "Changes the controller of the contract"
            }
          }
        }
      }
    },
    "./contracts/MiniMeToken.sol": {
      "ApproveAndCallFallBack": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "from",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_token",
                "type": "address"
              },
              {
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "receiveApproval",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "methods": {}
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "methodIdentifiers": {
            "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {}
        }
      },
      "MiniMeToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "creationBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newTokenFactory",
                "type": "address"
              }
            ],
            "name": "setTokenFactory",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "balanceOfAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_cloneTokenName",
                "type": "string"
              },
              {
                "name": "_cloneDecimalUnits",
                "type": "uint8"
              },
              {
                "name": "_cloneTokenSymbol",
                "type": "string"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "generateTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "transfersEnabled",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentSnapShotBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_extraData",
                "type": "bytes"
              }
            ],
            "name": "approveAndCall",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "destroyTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "claimTokens",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenFactory",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "enableTransfers",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_tokenFactory",
                "type": "address"
              },
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_parentSnapShotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_token",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_controller",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "ClaimedTokens",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_cloneToken",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_snapshotBlock",
                "type": "uint256"
              }
            ],
            "name": "NewCloneToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "methods": {
            "allowance(address,address)": {
              "details": "This function makes it easy to read the `allowed[]` map",
              "params": {
                "_owner": "The address of the account that owns the token",
                "_spender": "The address of the account able to transfer the tokens"
              },
              "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
            },
            "approve(address,uint256)": {
              "params": {
                "_amount": "The amount of tokens to be approved for transfer",
                "_spender": "The address of the account able to transfer the tokens"
              },
              "return": "True if the approval was successful"
            },
            "approveAndCall(address,uint256,bytes)": {
              "params": {
                "_amount": "The amount of tokens to be approved for transfer",
                "_spender": "The address of the contract able to transfer the tokens"
              },
              "return": "True if the function call was successful"
            },
            "balanceOf(address)": {
              "params": {
                "_owner": "The address that's balance is being requested"
              },
              "return": "The balance of `_owner` at the current block"
            },
            "balanceOfAt(address,uint256)": {
              "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
              "params": {
                "_blockNumber": "The block number when the balance is queried",
                "_owner": "The address from which the balance will be retrieved"
              },
              "return": "The balance at `_blockNumber`"
            },
            "changeController(address)": {
              "params": {
                "_newController": "The new controller of the contract"
              }
            },
            "claimTokens(address)": {
              "params": {
                "_token": "The address of the token contract that you want to recover  set to 0 in case you want to extract ether."
              }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
              "params": {
                "_cloneDecimalUnits": "Number of decimals of the smallest unit",
                "_cloneTokenName": "Name of the clone token",
                "_cloneTokenSymbol": "Symbol of the clone token",
                "_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
                "_transfersEnabled": "True if transfers are allowed in the clone"
              },
              "return": "The address of the new MiniMeToken Contract"
            },
            "destroyTokens(address,uint256)": {
              "params": {
                "_amount": "The quantity of tokens to burn",
                "_owner": "The address that will lose the tokens"
              },
              "return": "True if the tokens are burned correctly"
            },
            "enableTransfers(bool)": {
              "params": {
                "_transfersEnabled": "True if transfers are allowed in the clone"
              }
            },
            "generateTokens(address,uint256)": {
              "params": {
                "_amount": "The quantity of tokens generated",
                "_owner": "The address that will be assigned the new tokens"
              },
              "return": "True if the tokens are generated correctly"
            },
            "setTokenFactory(address)": {
              "details": "allows the controller to change the TokenFactory that clones the token",
              "params": {
                "_newTokenFactory": "new TokenFactory address"
              }
            },
            "totalSupply()": {
              "details": "This function makes it easy to get the total number of tokens",
              "return": "The total number of tokens"
            },
            "totalSupplyAt(uint256)": {
              "params": {
                "_blockNumber": "The block number when the totalSupply is queried"
              },
              "return": "The total amount of tokens at `_blockNumber`"
            },
            "transfer(address,uint256)": {
              "params": {
                "_amount": "The amount of tokens to be transferred",
                "_to": "The address of the recipient"
              },
              "return": "Whether the transfer was successful or not"
            },
            "transferFrom(address,address,uint256)": {
              "params": {
                "_amount": "The amount of tokens to be transferred",
                "_from": "The address holding the tokens being transferred",
                "_to": "The address of the recipient"
              },
              "return": "True if the transfer was successful"
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "1570:20226:1:-;;;1838:33;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4267:722;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:10:0;:23;;-1:-1:-1;;;;;318:10:0;305:23;;-1:-1:-1;;;;;;305:23:0;;;;;;;;;;4524:12:1;:42;;;;;305:23:0;4524:42:1;-1:-1:-1;;;;;;4524:42:1;;;;;;;;;4267:722;-1:-1:-1;305:23:0;;-1:-1:-1;4583:10:1;;4576:17;;;;;;;;:::i;:::-;-1:-1:-1;4651:8:1;:24;;-1:-1:-1;;4651:24:1;;;;;;;4730:6;4739:12;;4730:21;;;;;;;;:::i;:::-;-1:-1:-1;4807:11:1;:39;;-1:-1:-1;;;;;;4807:39:1;-1:-1:-1;;;;;4807:39:1;;;;;;;;;;;-1:-1:-1;;;4856:19:1;:42;4908:16;:36;;-1:-1:-1;;4908:36:1;;;;;;;;;;-1:-1:-1;4970:12:1;4954:13;:28;1570:20226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1570:20226:1;;;-1:-1:-1;1570:20226:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60606040526004361061013a5763ffffffff60e060020a60003504166306fdde0381146101df578063095ea7b314610269578063176345141461029f57806318160ddd146102c457806323b872dd146102d75780632f73a9f8146102ff578063313ce5671461031e5780633cebb823146103475780634ee2cd7e1461036657806354fd4d50146103885780636638c0871461039b57806370a082311461045f57806380a540011461047e578063827f32c01461049157806395d89b41146104b3578063981b24d0146104c6578063a9059cbb146104dc578063bef97c87146104fe578063c5bcc4f114610511578063cae9ca5114610524578063d3ce77fe14610589578063dd62ed3e146105ab578063df8de3e7146105d0578063e77772fe146105ef578063f41e60c514610602578063f77c47911461061a575b60005461014f90600160a060020a031661062d565b151561015a57600080fd5b60008054600160a060020a03169063f48c305490349033906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390911660048201526024016020604051808303818588803b15156101b657600080fd5b6125ee5a03f115156101c757600080fd5b505050506040518051905015156101dd57600080fd5b005b34156101ea57600080fd5b6101f261065a565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561022e578082015183820152602001610216565b50505050905090810190601f16801561025b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027457600080fd5b61028b600160a060020a03600435166024356106f8565b604051901515815260200160405180910390f35b34156102aa57600080fd5b6102b2610861565b60405190815260200160405180910390f35b34156102cf57600080fd5b6102b2610867565b34156102e257600080fd5b61028b600160a060020a0360043581169060243516604435610878565b341561030a57600080fd5b6101dd600160a060020a0360043516610917565b341561032957600080fd5b61033161097c565b60405160ff909116815260200160405180910390f35b341561035257600080fd5b6101dd600160a060020a0360043516610985565b341561037157600080fd5b6102b2600160a060020a03600435166024356109cf565b341561039357600080fd5b6101f2610b05565b34156103a657600080fd5b61044360046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013515159350610b7092505050565b604051600160a060020a03909116815260200160405180910390f35b341561046a57600080fd5b6102b2600160a060020a0360043516610d9a565b341561048957600080fd5b610443610dae565b341561049c57600080fd5b61028b600160a060020a0360043516602435610dbd565b34156104be57600080fd5b6101f2610e7b565b34156104d157600080fd5b6102b2600435610ee6565b34156104e757600080fd5b61028b600160a060020a0360043516602435610fcf565b341561050957600080fd5b61028b610ff7565b341561051c57600080fd5b6102b2611000565b341561052f57600080fd5b61028b60048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061100695505050505050565b341561059457600080fd5b61028b600160a060020a0360043516602435611121565b34156105b657600080fd5b6102b2600160a060020a03600435811690602435166111d9565b34156105db57600080fd5b6101dd600160a060020a0360043516611204565b34156105fa57600080fd5b6104436113b0565b341561060d57600080fd5b6101dd60043515156113c4565b341561062557600080fd5b6104436113f2565b600080600160a060020a03831615156106495760009150610654565b823b90506000811191505b50919050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f05780601f106106c5576101008083540402835291602001916106f0565b820191906000526020600020905b8154815290600101906020018083116106d357829003601f168201915b505050505081565b600b5460009060ff16151561070c57600080fd5b81158061073c5750600160a060020a03338116600090815260096020908152604080832093871683529290522054155b151561074757600080fd5b60005461075c90600160a060020a031661062d565b156107f75760008054600160a060020a03169063da682aeb903390869086906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156107d157600080fd5b6102c65a03f115156107e257600080fd5b5050506040518051905015156107f757600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60075481565b600061087243610ee6565b90505b90565b6000805433600160a060020a0390811691161461090257600b5460ff1615156108a057600080fd5b600160a060020a0380851660009081526009602090815260408083203390941683529290522054829010156108d457600080fd5b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b61090d848484611401565b5060019392505050565b60005433600160a060020a0390811691161461093257600080fd5b600160a060020a038116151561094757600080fd5b600b8054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60025460ff1681565b60005433600160a060020a039081169116146109a057600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382166000908152600860205260408120541580610a2b5750600160a060020a038316600090815260086020526040812080548492908110610a1457fe5b6000918252602090912001546001608060020a0316115b15610adc57600554600160a060020a031615610ad457600554600654600160a060020a0390911690634ee2cd7e908590610a669086906115f3565b60006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610ab257600080fd5b6102c65a03f11515610ac357600080fd5b50505060405180519050905061085b565b50600061085b565b600160a060020a0383166000908152600860205260409020610afe908361160b565b905061085b565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f05780601f106106c5576101008083540402835291602001916106f0565b600080831515610b7e574393505b600b546101009004600160a060020a0316635b7b72c130868a8a8a8960006040516020015260405160e060020a63ffffffff8916028152600160a060020a038716600482019081526024820187905260ff8516606483015282151560a483015260c0604483019081529091608481019060c40187818151815260200191508051906020019080838360005b83811015610c21578082015183820152602001610c09565b50505050905090810190601f168015610c4e5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610c84578082015183820152602001610c6c565b50505050905090810190601f168015610cb15780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1515610cd557600080fd5b6102c65a03f11515610ce657600080fd5b5050506040518051915050600160a060020a038116633cebb8233360405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b1515610d3f57600080fd5b6102c65a03f11515610d5057600080fd5b50505080600160a060020a03167f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade8560405190815260200160405180910390a29695505050505050565b6000610da682436109cf565b90505b919050565b600554600160a060020a031681565b600080548190819033600160a060020a03908116911614610ddd57600080fd5b610de5610867565b915083820182901015610df757600080fd5b610e0085610d9a565b905083810181901015610e1257600080fd5b610e1f600a85840161176a565b600160a060020a0385166000908152600860205260409020610e439082860161176a565b84600160a060020a0316600060008051602061189e8339815191528660405190815260200160405180910390a3506001949350505050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f05780601f106106c5576101008083540402835291602001916106f0565b600a546000901580610f1b575081600a6000815481101515610f0457fe5b6000918252602090912001546001608060020a0316115b15610fbd57600554600160a060020a031615610fb557600554600654600160a060020a039091169063981b24d090610f549085906115f3565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610f9357600080fd5b6102c65a03f11515610fa457600080fd5b505050604051805190509050610da9565b506000610da9565b610fc8600a8361160b565b9050610da9565b600b5460009060ff161515610fe357600080fd5b610fee338484611401565b50600192915050565b600b5460ff1681565b60065481565b600061101284846106f8565b151561101d57600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156110b557808201518382015260200161109d565b50505050905090810190601f1680156110e25780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561110357600080fd5b6102c65a03f1151561111457600080fd5b5060019695505050505050565b600080548190819033600160a060020a0390811691161461114157600080fd5b611149610867565b91508382101561115857600080fd5b61116185610d9a565b90508381101561117057600080fd5b61117d600a85840361176a565b600160a060020a03851660009081526008602052604090206111a19085830361176a565b600085600160a060020a031660008051602061189e8339815191528660405190815260200160405180910390a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461122257600080fd5b600160a060020a038316151561127057600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f19350505050151561126b57600080fd5b6113ab565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156112ca57600080fd5b6102c65a03f115156112db57600080fd5b505050604051805160008054919350600160a060020a03808616935063a9059cbb92169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561134b57600080fd5b6102c65a03f1151561135c57600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a35b505050565b600b546101009004600160a060020a031681565b60005433600160a060020a039081169116146113df57600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b6000808215156114455783600160a060020a031685600160a060020a031660008051602061189e8339815191528560405190815260200160405180910390a36115ec565b60065443901061145457600080fd5b600160a060020a0384161580159061147e575030600160a060020a031684600160a060020a031614155b151561148957600080fd5b61149385436109cf565b9150828210156114a257600080fd5b6000546114b790600160a060020a031661062d565b156115525760008054600160a060020a031690634a393149908790879087906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561152c57600080fd5b6102c65a03f1151561153d57600080fd5b50505060405180519050151561155257600080fd5b600160a060020a03851660009081526008602052604090206115769084840361176a565b61158084436109cf565b90508281018190101561159257600080fd5b600160a060020a03841660009081526008602052604090206115b69082850161176a565b83600160a060020a031685600160a060020a031660008051602061189e8339815191528560405190815260200160405180910390a35b5050505050565b60008183106116025781611604565b825b9392505050565b6000806000808580549050600014156116275760009350611761565b85548690600019810190811061163957fe5b6000918252602090912001546001608060020a031685106116965785548690600019810190811061166657fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a03169350611761565b8560008154811015156116a557fe5b6000918252602090912001546001608060020a03168510156116ca5760009350611761565b8554600093506000190191505b828211156117275760026001838501010490508486828154811015156116f957fe5b6000918252602090912001546001608060020a03161161171b57809250611722565b6001810391505b6116d7565b858381548110151561173557fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b8154600090819015806117a35750835443908590600019810190811061178c57fe5b6000918252602090912001546001608060020a0316105b1561181557835484906117b98260018301611860565b815481106117c357fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff199093169290921716178155915061185a565b83548490600019810190811061182757fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b8154818355818115116113ab576000838152602090206113ab91810190830161087591905b808211156118995760008155600101611885565b50905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820565cdb6ea0c482ea65d1e9445bf8b589cf62bc57afd2c3e8d55d50f0681bd4740029",
            "sourceMap": "1570:20226:1:-;;;;;;;;-1:-1:-1;;;1570:20226:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20607:10;;20596:22;;-1:-1:-1;;;;;20607:10:1;20596;:22::i;:::-;20588:31;;;;;;;;20653:10;;;-1:-1:-1;;;;;20653:10:1;;20637:40;;20684:9;;20695:10;;20637:69;;;;;;;;;;-1:-1:-1;;;20637:69:1;;;-1:-1:-1;;;;;20637:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20629:78;;;;;;;;1570:20226;1612:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9127:829:1;;;;;;;;;;;;-1:-1:-1;;;;;9127:829:1;;;;;;;;;;;;;;;;;;;;;;2753:25;;;;;;;;;;;;;;;;;;;;;;;;;;;11409:105;;;;;;;;;;;;5825:711;;;;;;;;;;-1:-1:-1;;;;;5825:711:1;;;;;;;;;;;;14134:180;;;;;;;;;;;;-1:-1:-1;;;;;14134:180:1;;;1692:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116:0;;;;;;;;;;;;-1:-1:-1;;;;;456:116:0;;;11868:938:1;;;;;;;;;;;;-1:-1:-1;;;;;11868:938:1;;;;;1838:33;;;;;;;;;;;;15051:768;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15051:768:1;;-1:-1:-1;;15051:768:1;;;;;;;;;-1:-1:-1;15051:768:1;;-1:-1:-1;;;15051:768:1;;;;-1:-1:-1;;;;;15051:768:1;;;;;;;;;;;;;;;8594:134;;;;;;;;;;;;-1:-1:-1;;;;;8594:134:1;;;2452:30;;;;;;;;;;;;16150:576;;;;;;;;;;;;-1:-1:-1;;;;;16150:576:1;;;;;1773:20;;;;;;;;;;;;13019:910;;;;;;;;;;;;;;5288:187;;;;;;;;;;;;-1:-1:-1;;;;;5288:187:1;;;;;3332:28;;;;;;;;;;;;2639:31;;;;;;;;;;;;10943:342;;;;;;;;;;;;;-1:-1:-1;;;;;10943:342:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10943:342:1;;-1:-1:-1;10943:342:1;;-1:-1:-1;;;;;;10943:342:1;16956:500;;;;;;;;;;;;-1:-1:-1;;;;;16956:500:1;;;;;10275:151;;;;;;;;;;-1:-1:-1;;;;;10275:151:1;;;;;;;;;;21014:365;;;;;;;;;;;;-1:-1:-1;;;;;21014:365:1;;;3418:32;;;;;;;;;;;;17679:124;;;;;;;;;;;;;;;;242:25:0;;;;;;;;;;;;19918:222:1;19979:4;;-1:-1:-1;;;;;20018:10:1;;;20014:28;;;20037:5;20030:12;;;;20014:28;20095:5;20083:11;20075:26;;20132:1;20127:4;:6;20120:13;;19918:222;;;;;:::o;1612:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9127:829::-;9227:16;;9195:12;;9227:16;;9219:25;;;;;;;;9567:12;;;9566:54;;-1:-1:-1;;;;;;9593:10:1;9585:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;:34;9566:54;9558:63;;;;;;;;9715:10;;9704:22;;-1:-1:-1;;;;;9715:10:1;9704;:22::i;:::-;9700:130;;;9766:10;;;-1:-1:-1;;;;;9766:10:1;;9750:37;;9788:10;;9800:8;;9810:7;;9750:68;;;;;;;;;;-1:-1:-1;;;9750:68:1;;;-1:-1:-1;;;;;9750:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:77;;;;;;;;-1:-1:-1;;;;;9848:10:1;9840:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;;:39;;;9889;;9840;;9889;;;;;;;;;;;;;-1:-1:-1;9945:4:1;9127:829;;;;;:::o;2753:25::-;;;;:::o;11409:105::-;11457:4;11480:27;11494:12;11480:13;:27::i;:::-;11473:34;;11409:105;;:::o;5825:711::-;5913:12;6232:10;;6218;-1:-1:-1;;;;;6218:24:1;;;6232:10;;6218:24;6214:254;;6266:16;;;;6258:25;;;;;;;;-1:-1:-1;;;;;6368:14:1;;;;;;;:7;:14;;;;;;;;6383:10;6368:26;;;;;;;;;;:37;;;;6360:46;;;;;;-1:-1:-1;;;;;6420:14:1;;;;;;;:7;:14;;;;;;;;6435:10;6420:26;;;;;;;;;:37;;;;;;;6214:254;6477:31;6488:5;6495:3;6500:7;6477:10;:31::i;:::-;-1:-1:-1;6525:4:1;5825:711;;;;;:::o;14134:180::-;219:10:0;;205;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;-1:-1:-1;;;;;14223:30:1;;;;14215:39;;;;;;14262:12;:45;;-1:-1:-1;;;;;14262:45:1;;;;;;-1:-1:-1;;14262:45:1;;;;;;;;;14134:180::o;1692:21::-;;;;;;:::o;456:116:0:-;219:10;;205;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:0;-1:-1:-1;;;;;538:27:0;;;;;;;;;;456:116::o;11868:938:1:-;-1:-1:-1;;;;;12306:16:1;;11957:4;12306:16;;;:8;:16;;;;;:23;:28;;12305:92;;-1:-1:-1;;;;;;12352:16:1;;;;;;:8;:16;;;;;:19;;12384:12;;12352:16;:19;;;;;;;;;;;;;;;:29;-1:-1:-1;;;;;12352:29:1;:44;12305:92;12301:499;;;12425:11;;-1:-1:-1;;;;;12425:11:1;12417:25;12413:222;;12469:11;;12519:19;;-1:-1:-1;;;;;12469:11:1;;;;:23;;12493:6;;12501:38;;12505:12;;12501:3;:38::i;:::-;12469:71;;;;;;;;;;;-1:-1:-1;;;12469:71:1;;;-1:-1:-1;;;;;12469:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12462:78;;;;12413:222;-1:-1:-1;12619:1:1;12612:8;;12301:499;-1:-1:-1;;;;;12758:16:1;;;;;;:8;:16;;;;;12747:42;;12776:12;12747:10;:42::i;:::-;12740:49;;;;1838:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15051:768;15263:7;;15286:19;;15282:54;;;15324:12;15307:29;;15282:54;15383:12;;;;;-1:-1:-1;;;;;15383:12:1;:29;15426:4;15444:14;15472:15;15501:18;15533:17;15564;15383:212;;;;;;;;;;;-1:-1:-1;;;15383:212:1;;;-1:-1:-1;;;;;15383:212:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;;;;;;;15607:27:1;;;15635:10;15607:39;;;;;-1:-1:-1;;;15607:39:1;;;-1:-1:-1;;;;;15607:39:1;;;;;;;;;;-1:-1:-1;15607:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15726:50:1;;;15761:14;15726:50;;;;;;;;;;;;;;15801:10;15051:768;-1:-1:-1;;;;;;15051:768:1:o;8594:134::-;8654:15;8688:33;8700:6;8708:12;8688:11;:33::i;:::-;8681:40;;8594:134;;;;:::o;2452:30::-;;;-1:-1:-1;;;;;2452:30:1;;:::o;16150:576::-;16240:4;219:10:0;;16240:4:1;;;;205:10:0;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;16278:13:1;:11;:13::i;:::-;16256:35;-1:-1:-1;16309:24:1;;;:42;;;;16301:51;;;;;;16409:17;16419:6;16409:9;:17::i;:::-;16384:42;-1:-1:-1;16444:27:1;;;:48;;;;16436:57;;;;;;16525:62;16542:18;16579:7;16562:14;:24;16525:16;:62::i;:::-;-1:-1:-1;;;;;16614:16:1;;;;;;:8;:16;;;;;16597:63;;16632:27;;;16597:16;:63::i;:::-;-1:-1:-1;;;;;16670:28:1;;16679:1;;;-1:-1:-1;;;;;;;;;16690:7:1;16670:28;;;;;;;;;;;;;;-1:-1:-1;16715:4:1;;16150:576;-1:-1:-1;;;;16150:576:1:o;1773:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13019:910;13458:18;:25;13085:4;;13458:30;;13457:96;;;13540:12;13506:18;13525:1;13506:21;;;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;13506:31:1;:46;13457:96;13453:470;;;13581:11;;-1:-1:-1;;;;;13581:11:1;13573:25;13569:183;;13625:11;;13669:19;;-1:-1:-1;;;;;13625:11:1;;;;:25;;13651:38;;13655:12;;13651:3;:38::i;:::-;13625:65;;;;;;;;;;;-1:-1:-1;;;13625:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13618:72;;;;13569:183;-1:-1:-1;13736:1:1;13729:8;;13453:470;13868:44;13879:18;13899:12;13868:10;:44::i;:::-;13861:51;;;;5288:187;5384:16;;5352:12;;5384:16;;5376:25;;;;;;;;5411:36;5422:10;5434:3;5439:7;5411:10;:36::i;:::-;-1:-1:-1;5464:4:1;5288:187;;;;:::o;3332:28::-;;;;;;:::o;2639:31::-;;;;:::o;10943:342::-;11041:12;11073:26;11081:8;11091:7;11073;:26::i;:::-;11065:35;;;;;;;;-1:-1:-1;;;;;11111:48:1;;;11173:10;11197:7;11218:4;11236:10;11111:145;;-1:-1:-1;;;11111:145:1;;;;;;-1:-1:-1;;;;;11111:145:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;11274:4:1;;10943:342;-1:-1:-1;;;;;;10943:342:1:o;16956:500::-;17045:4;219:10:0;;17045:4:1;;;;205:10:0;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;17083:13:1;:11;:13::i;:::-;17061:35;-1:-1:-1;17114:25:1;;;;17106:34;;;;;;17177:17;17187:6;17177:9;:17::i;:::-;17150:44;-1:-1:-1;17212:30:1;;;;17204:39;;;;;;17253:62;17270:18;17307:7;17290:14;:24;17253:16;:62::i;:::-;-1:-1:-1;;;;;17342:16:1;;;;;;:8;:16;;;;;17325:65;;17360:29;;;17325:16;:65::i;:::-;17417:1;-1:-1:-1;;;;;17400:28:1;;17417:1;;-1:-1:-1;;;;;;;;;17420:7:1;17400:28;;;;;;;;;;;;;;-1:-1:-1;17445:4:1;;16956:500;-1:-1:-1;;;;16956:500:1:o;10275:151::-;-1:-1:-1;;;;;10394:15:1;;;10358:17;10394:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;10275:151::o;21014:365::-;21190:17;219:10:0;;21190:17:1;;205:10:0;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;-1:-1:-1;;;;;21087:13:1;;;21083:97;;;21116:10;;-1:-1:-1;;;;;21116:10:1;;;;21136:4;:12;;21116:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21163:7;;21083:97;21222:6;;-1:-1:-1;;;;;;21254:15:1;;;21270:4;21254:21;;;;;;;;;;;-1:-1:-1;;;21254:21:1;;;-1:-1:-1;;;;;21254:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21300:10;;;21254:21;;-1:-1:-1;;;;;;21285:14:1;;;;-1:-1:-1;21285:14:1;;21300:10;;21254:21;;21285:35;;;;;;;;;;-1:-1:-1;;;21285:35:1;;;-1:-1:-1;;;;;21285:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21352:10:1;;-1:-1:-1;;;;;21352:10:1;;;;21330:42;;;21364:7;21330:42;;;;;;;;;;;;;;232:1:0;21014:365:1;;;:::o;3418:32::-;;;;;;-1:-1:-1;;;;;3418:32:1;;:::o;17679:124::-;219:10:0;;205;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;17760:16:1;:36;;-1:-1:-1;;17760:36:1;;;;;;;;;;17679:124::o;242:25:0:-;;;-1:-1:-1;;;;;242:25:0;;:::o;6915:1544:1:-;7484:23;;7009:12;;7005:158;;;-1:-1:-1;;;;;7040:29:1;;;;;;-1:-1:-1;;;;;;;;;;;7061:7:1;7040:29;;;;;;;;;;;;;;7143:7;;7005:158;7184:19;;7206:12;7184:34;;7176:43;;;;;;-1:-1:-1;;;;;7314:8:1;;;;;;7313:36;;-1:-1:-1;7343:4:1;-1:-1:-1;;;;;7328:20:1;;;;;;;;7313:36;7305:45;;;;;;;;7510:32;7522:5;7529:12;7510:11;:32::i;:::-;7484:58;-1:-1:-1;7564:30:1;;;;7556:39;;;;;;7682:10;;7671:22;;-1:-1:-1;;;;;7682:10:1;7671;:22::i;:::-;7667:127;;;7736:10;;;-1:-1:-1;;;;;7736:10:1;;7720:38;;7759:5;;7766:3;;7771:7;;7720:59;;;;;;;;;;-1:-1:-1;;;7720:59:1;;;-1:-1:-1;;;;;7720:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7712:68;;;;;;;;-1:-1:-1;;;;;7938:15:1;;;;;;:8;:15;;;;;7921:64;;7955:29;;;7921:16;:64::i;:::-;8138:30;8150:3;8155:12;8138:11;:30::i;:::-;8114:54;-1:-1:-1;8189:27:1;;;:48;;;;8181:57;;;;;;-1:-1:-1;;;;;8290:13:1;;;;;;:8;:13;;;;;8273:60;;8305:27;;;8273:16;:60::i;:::-;-1:-1:-1;;;;;8422:29:1;;;;;;-1:-1:-1;;;;;;;;;;;8443:7:1;8422:29;;;;;;;;;;;;;;6915:1544;;;;;;:::o;20212:95::-;20264:4;20291:1;20287;:5;:13;;20299:1;20287:13;;;20295:1;20287:13;20280:20;20212:95;-1:-1:-1;;;20212:95:1:o;18177:765::-;18276:4;18617:8;18639;18712;18296:11;:18;;;;18318:1;18296:23;18292:37;;;18328:1;18321:8;;;;18292:37;18407:18;;;;-1:-1:-1;;18407:20:1;;;18395:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;18395:43:1;18385:53;;18381:117;;18471:18;;;;-1:-1:-1;;18471:20:1;;;18459:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;18459:39:1;;-1:-1:-1;18452:46:1;;18381:117;18521:11;18533:1;18521:14;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;18521:24:1;18512:33;;18508:47;;;18554:1;18547:8;;;;18508:47;18650:18;;18628:1;;-1:-1:-1;;;18650:20:1;;-1:-1:-1;18680:217:1;18693:3;18687;:9;18680:217;;;18740:1;18736;18724:9;;;:13;18723:18;18712:29;;18787:6;18759:11;18771:3;18759:16;;;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;18759:26:1;:34;18755:132;;18819:3;18813:9;;18755:132;;;18871:1;18867:3;:5;18861:11;;18755:132;18680:217;;;18913:11;18925:3;18913:16;;;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;18913:22:1;;-1:-1:-1;18177:765:1;;;;;;;;:::o;19160:587::-;19263:18;;19379:32;;;;19263:23;;19262:98;;-1:-1:-1;19312:18:1;;19347:12;;19312:18;;-1:-1:-1;;19312:21:1;;;19300:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;19300:44:1;:59;19262:98;19258:483;;;19427:20;;19414:11;;19427:20;19414:11;19427:20;;;;:::i;:::-;19414:35;;;;;;;;;;;;;;;;;19466:48;;-1:-1:-1;;19466:48:1;19501:12;-1:-1:-1;;;;;19466:48:1;;;;;;;19531:37;;;;;-1:-1:-1;19531:37:1;;;;19414:35;-1:-1:-1;19258:483:1;;;19652:18;;;;-1:-1:-1;;19652:20:1;;;19640:33;;;;;;;;;;;;;;;19690:37;;-1:-1:-1;;;;;19690:37:1;;;;;;-1:-1:-1;19690:37:1;;;;19640:33;-1:-1:-1;19258:483:1;19160:587;;;;:::o;1570:20226::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "1275400",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "": "infinite",
              "allowance(address,address)": "infinite",
              "approve(address,uint256)": "infinite",
              "approveAndCall(address,uint256,bytes)": "infinite",
              "balanceOf(address)": "infinite",
              "balanceOfAt(address,uint256)": "infinite",
              "changeController(address)": "infinite",
              "claimTokens(address)": "infinite",
              "controller()": "infinite",
              "createCloneToken(string,uint8,string,uint256,bool)": "infinite",
              "creationBlock()": "infinite",
              "decimals()": "infinite",
              "destroyTokens(address,uint256)": "infinite",
              "enableTransfers(bool)": "infinite",
              "generateTokens(address,uint256)": "infinite",
              "name()": "infinite",
              "parentSnapShotBlock()": "infinite",
              "parentToken()": "infinite",
              "setTokenFactory(address)": "infinite",
              "symbol()": "infinite",
              "tokenFactory()": "infinite",
              "totalSupply()": "infinite",
              "totalSupplyAt(uint256)": "infinite",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite",
              "transfersEnabled()": "infinite",
              "version()": "infinite"
            },
            "internal": {
              "doTransfer(address,address,uint256)": "infinite",
              "getValueAt(struct MiniMeToken.Checkpoint storage ref[] storage pointer,uint256)": "infinite",
              "isContract(address)": "846",
              "min(uint256,uint256)": "61",
              "updateValueAtNow(struct MiniMeToken.Checkpoint storage ref[] storage pointer,uint256)": "infinite"
            }
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveAndCall(address,uint256,bytes)": "cae9ca51",
            "balanceOf(address)": "70a08231",
            "balanceOfAt(address,uint256)": "4ee2cd7e",
            "changeController(address)": "3cebb823",
            "claimTokens(address)": "df8de3e7",
            "controller()": "f77c4791",
            "createCloneToken(string,uint8,string,uint256,bool)": "6638c087",
            "creationBlock()": "17634514",
            "decimals()": "313ce567",
            "destroyTokens(address,uint256)": "d3ce77fe",
            "enableTransfers(bool)": "f41e60c5",
            "generateTokens(address,uint256)": "827f32c0",
            "name()": "06fdde03",
            "parentSnapShotBlock()": "c5bcc4f1",
            "parentToken()": "80a54001",
            "setTokenFactory(address)": "2f73a9f8",
            "symbol()": "95d89b41",
            "tokenFactory()": "e77772fe",
            "totalSupply()": "18160ddd",
            "totalSupplyAt(uint256)": "981b24d0",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transfersEnabled()": "bef97c87",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTokenFactory\",\"type\":\"address\"}],\"name\":\"setTokenFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"setTokenFactory(address)\":{\"details\":\"allows the controller to change the TokenFactory that clones the token\",\"params\":{\"_newTokenFactory\":\"new TokenFactory address\"}},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"setTokenFactory(address)\":{\"notice\":\"/////////////\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/MiniMeToken.sol\":\"MiniMeToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    TokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = TokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n////////////////\\n// Change Token Factory\\n////////////////\\n\\n    /// @dev allows the controller to change the TokenFactory that clones the token\\n    /// @param _newTokenFactory new TokenFactory address\\n    function setTokenFactory(address _newTokenFactory) public onlyController {\\n      require(_newTokenFactory != address(0));\\n      tokenFactory = TokenFactory(_newTokenFactory);\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = MiniMeToken(tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            ));\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\",\"keccak256\":\"0x818e3d9167eed5e6ba516ec6166842474dc734bb18075be40925aa1e58cb21f7\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"},\"./contracts/TokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev a MinimeToken factory must implement this method\\ncontract TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address);\\n}\\n\",\"keccak256\":\"0xf64d9320ae9e43c01f4e54322fc08b18fe7261ed0e33060561a15d9b2b4bb70d\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "approve(address,uint256)": {
              "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
            },
            "approveAndCall(address,uint256,bytes)": {
              "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
            },
            "balanceOfAt(address,uint256)": {
              "notice": "/////////////"
            },
            "changeController(address)": {
              "notice": "Changes the controller of the contract"
            },
            "claimTokens(address)": {
              "notice": "///////This method can be used by the controller to extract mistakenly  sent tokens to this contract."
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
              "notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
            },
            "destroyTokens(address,uint256)": {
              "notice": "Burns `_amount` tokens from `_owner`"
            },
            "enableTransfers(bool)": {
              "notice": "/////////////Enables token holders to transfer their tokens freely if true"
            },
            "generateTokens(address,uint256)": {
              "notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
            },
            "setTokenFactory(address)": {
              "notice": "/////////////"
            },
            "totalSupplyAt(uint256)": {
              "notice": "Total amount of tokens at a specific `_blockNumber`."
            },
            "transfer(address,uint256)": {
              "notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`"
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
            }
          }
        }
      }
    },
    "./contracts/MiniMeTokenFactory.sol": {
      "MiniMeTokenFactory": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "methods": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": {
              "params": {
                "_decimalUnits": "Number of decimals of the new token",
                "_parentToken": "Address of the token being cloned",
                "_snapshotBlock": "Block of the parent token that will  determine the initial distribution of the clone token",
                "_tokenName": "Name of the new token",
                "_tokenSymbol": "Token Symbol for the new token",
                "_transfersEnabled": "If true, tokens will be able to be transferred"
              },
              "return": "The address of the new token contract"
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "310:1253:2:-;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "310:1253:2:-;;;;;;;;;;;;;;;;;;;;;;;1006:555;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1006:555:2;;-1:-1:-1;;;;1006:555:2;;;;;-1:-1:-1;1006:555:2;;-1:-1:-1;1006:555:2;;;;;;;;;;;;;;;;;;;;1230:7;1249:20;1301:4;1319:12;1345:14;1373:10;1397:13;1424:12;1450:17;1272:209;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:232:2;;1492:8;:25;;;1518:10;1492:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;1492:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1546:8:2;;1006:555;-1:-1:-1;;;;;;;;;1006:555:2:o;310:1253::-;;;;;;;;;;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "1551800",
              "executionCost": "1619",
              "totalCost": "1553419"
            },
            "external": {
              "createCloneToken(address,uint256,string,uint8,string,bool)": "infinite"
            }
          },
          "methodIdentifiers": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": "5b7b72c1"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"params\":{\"_decimalUnits\":\"Number of decimals of the new token\",\"_parentToken\":\"Address of the token being cloned\",\"_snapshotBlock\":\"Block of the parent token that will  determine the initial distribution of the clone token\",\"_tokenName\":\"Name of the new token\",\"_tokenSymbol\":\"Token Symbol for the new token\",\"_transfersEnabled\":\"If true, tokens will be able to be transferred\"},\"return\":\"The address of the new token contract\"}}},\"userdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"notice\":\"Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/MiniMeTokenFactory.sol\":\"MiniMeTokenFactory\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    TokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = TokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n////////////////\\n// Change Token Factory\\n////////////////\\n\\n    /// @dev allows the controller to change the TokenFactory that clones the token\\n    /// @param _newTokenFactory new TokenFactory address\\n    function setTokenFactory(address _newTokenFactory) public onlyController {\\n      require(_newTokenFactory != address(0));\\n      tokenFactory = TokenFactory(_newTokenFactory);\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = MiniMeToken(tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            ));\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\",\"keccak256\":\"0x818e3d9167eed5e6ba516ec6166842474dc734bb18075be40925aa1e58cb21f7\"},\"./contracts/MiniMeTokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\nimport \\\"./MiniMeToken.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\n\\n/// @dev This contract is used to generate clone contracts from a contract.\\n///  In solidity this is the way to create a contract from a contract of the\\n///  same class\\ncontract MiniMeTokenFactory is TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address) {\\n        MiniMeToken newToken = new MiniMeToken(\\n            this,\\n            _parentToken,\\n            _snapshotBlock,\\n            _tokenName,\\n            _decimalUnits,\\n            _tokenSymbol,\\n            _transfersEnabled\\n            );\\n\\n        newToken.changeController(msg.sender);\\n        return newToken;\\n    }\\n}\\n\",\"keccak256\":\"0xebe95b81a82d5c6ed7478d9b984d9191191460f5d0fcffd43745c9b05c36a5f8\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"},\"./contracts/TokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev a MinimeToken factory must implement this method\\ncontract TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address);\\n}\\n\",\"keccak256\":\"0xf64d9320ae9e43c01f4e54322fc08b18fe7261ed0e33060561a15d9b2b4bb70d\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": {
              "notice": "Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token"
            }
          }
        }
      }
    },
    "./contracts/SampleCampaign-TokenController.sol": {
      "Campaign": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "vaultAddress",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onTransfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenContract",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newVaultAddress",
                "type": "address"
              }
            ],
            "name": "setVault",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "maximumFunding",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [],
            "name": "finalizeFunding",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwner",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "startFundingTime",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onApprove",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalCollected",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "endFundingTime",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "proxyPayment",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_startFundingTime",
                "type": "uint256"
              },
              {
                "name": "_endFundingTime",
                "type": "uint256"
              },
              {
                "name": "_maximumFunding",
                "type": "uint256"
              },
              {
                "name": "_vaultAddress",
                "type": "address"
              },
              {
                "name": "_tokenAddress",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          }
        ],
        "devdoc": {
          "methods": {
            "changeOwner(address)": {
              "params": {
                "_newOwner": "The address of the new owner. 0x0 can be used to create  an unowned neutral vault, however that cannot be undone"
              }
            },
            "finalizeFunding()": {
              "details": "`finalizeFunding()` can only be called after the end of the funding period."
            },
            "onApprove(address,address,uint256)": {
              "params": {
                "_amount": "The amount in the `approve()` call",
                "_owner": "The address that calls `approve()`",
                "_spender": "The spender in the `approve()` call"
              },
              "return": "False if the controller does not authorize the approval"
            },
            "onTransfer(address,address,uint256)": {
              "params": {
                "_amount": "The amount of the transfer",
                "_from": "The origin of the transfer",
                "_to": "The destination of the transfer"
              },
              "return": "False if the controller does not authorize the transfer"
            },
            "proxyPayment(address)": {
              "params": {
                "_owner": "The address that will hold the newly created tokens"
              }
            },
            "setVault(address)": {
              "params": {
                "_newVaultAddress": "The address that will receive the ether sent to this  Campaign"
              }
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6060604052341561000f57600080fd5b60405160a080610604833981016040528080519190602001805191906020018051919060200180519190602001805160008054600160a060020a03191633600160a060020a031617905591505042841080159061006b57508484115b8015610081575069021e19e0c9bab24000008311155b80156100955750600160a060020a03821615155b15156100a057600080fd5b60019490945560029290925560035560058054600160a060020a03938416600160a060020a0319918216179091556006805492909316911617905561051a806100ea6000396000f3006060604052600436106100ab5763ffffffff60e060020a600035041663430bf08a81146100b65780634a393149146100e557806355a373d6146101215780636817031b146101345780638da5cb5b1461015357806399d64ab014610166578063a19ed39d1461018b578063a6f9dae11461019e578063b75ece9c146101bd578063da682aeb146100e5578063e29eb836146101d0578063e4693e98146101e3578063f48c3054146101f6575b6100b43361020a565b005b34156100c157600080fd5b6100c9610383565b604051600160a060020a03909116815260200160405180910390f35b34156100f057600080fd5b61010d600160a060020a0360043581169060243516604435610392565b604051901515815260200160405180910390f35b341561012c57600080fd5b6100c961039b565b341561013f57600080fd5b6100b4600160a060020a03600435166103aa565b341561015e57600080fd5b6100c96103f4565b341561017157600080fd5b610179610403565b60405190815260200160405180910390f35b341561019657600080fd5b6100b4610409565b34156101a957600080fd5b6100b4600160a060020a036004351661047f565b34156101c857600080fd5b6101796104c9565b34156101db57600080fd5b6101796104cf565b34156101ee57600080fd5b6101796104d5565b61010d600160a060020a03600435166104db565b600154421015801561021e57506002544211155b80156102945750600554600160a060020a031663f77c47916000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561026d57600080fd5b6102c65a03f1151561027e57600080fd5b5050506040518051600160a060020a0316151590505b801561029f57503415155b80156102b15750600354346004540111155b15156102bc57600080fd5b6004805434908101909155600654600160a060020a03169080156108fc0290604051600060405180830381858888f1935050505015156102fb57600080fd5b600554600160a060020a031663827f32c0823460006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561035a57600080fd5b6102c65a03f1151561036b57600080fd5b50505060405180519050151561038057600080fd5b50565b600654600160a060020a031681565b60019392505050565b600554600160a060020a031681565b60005433600160a060020a039081169116146103c557600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031681565b60035481565b60025442101561041857600080fd5b600554600160a060020a0316633cebb823600060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b151561046957600080fd5b6102c65a03f1151561047a57600080fd5b505050565b60005433600160a060020a0390811691161461049a57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60015481565b60045481565b60025481565b60006104e68261020a565b5060019190505600a165627a7a72305820378d78fe9ae6a4551d983d1720944f8df4e478852e6bedcb56eb040fb594861a0029",
            "sourceMap": "1968:5273:3:-;;;3061:728;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:5;:18;;-1:-1:-1;;;;;;1453:18:3;1461:10;-1:-1:-1;;;;;1453:18:3;;;;3061:728;-1:-1:-1;;3279:3:3;3260:22;;;;;3259:113;;;3354:17;3336:15;:35;3259:113;:161;;;;;3408:11;3389:15;:30;;3259:161;:227;;;;-1:-1:-1;;;;;;3467:18:3;;;;3259:227;3250:237;;;;;;;;3542:16;:36;;;;3588:14;:32;;;;3630:14;:32;3672:13;:42;;-1:-1:-1;;;;;3672:42:3;;;-1:-1:-1;;;;;;3672:42:3;;;;;;;3754:12;:28;;;;;;;;;;;1968:5273;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100ab5763ffffffff60e060020a600035041663430bf08a81146100b65780634a393149146100e557806355a373d6146101215780636817031b146101345780638da5cb5b1461015357806399d64ab014610166578063a19ed39d1461018b578063a6f9dae11461019e578063b75ece9c146101bd578063da682aeb146100e5578063e29eb836146101d0578063e4693e98146101e3578063f48c3054146101f6575b6100b43361020a565b005b34156100c157600080fd5b6100c9610383565b604051600160a060020a03909116815260200160405180910390f35b34156100f057600080fd5b61010d600160a060020a0360043581169060243516604435610392565b604051901515815260200160405180910390f35b341561012c57600080fd5b6100c961039b565b341561013f57600080fd5b6100b4600160a060020a03600435166103aa565b341561015e57600080fd5b6100c96103f4565b341561017157600080fd5b610179610403565b60405190815260200160405180910390f35b341561019657600080fd5b6100b4610409565b34156101a957600080fd5b6100b4600160a060020a036004351661047f565b34156101c857600080fd5b6101796104c9565b34156101db57600080fd5b6101796104cf565b34156101ee57600080fd5b6101796104d5565b61010d600160a060020a03600435166104db565b600154421015801561021e57506002544211155b80156102945750600554600160a060020a031663f77c47916000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561026d57600080fd5b6102c65a03f1151561027e57600080fd5b5050506040518051600160a060020a0316151590505b801561029f57503415155b80156102b15750600354346004540111155b15156102bc57600080fd5b6004805434908101909155600654600160a060020a03169080156108fc0290604051600060405180830381858888f1935050505015156102fb57600080fd5b600554600160a060020a031663827f32c0823460006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561035a57600080fd5b6102c65a03f1151561036b57600080fd5b50505060405180519050151561038057600080fd5b50565b600654600160a060020a031681565b60019392505050565b600554600160a060020a031681565b60005433600160a060020a039081169116146103c557600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600054600160a060020a031681565b60035481565b60025442101561041857600080fd5b600554600160a060020a0316633cebb823600060405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b151561046957600080fd5b6102c65a03f1151561047a57600080fd5b505050565b60005433600160a060020a0390811691161461049a57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60015481565b60045481565b60025481565b60006104e68261020a565b5060019190505600a165627a7a72305820378d78fe9ae6a4551d983d1720944f8df4e478852e6bedcb56eb040fb594861a0029",
            "sourceMap": "1968:5273:3:-;;;;;;;;;-1:-1:-1;;;1968:5273:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4140:21;4150:10;4140:9;:21::i;:::-;1968:5273;2320:27;;;;;;;;;;;;;;;-1:-1:-1;;;;;2320:27:3;;;;;;;;;;;;;;4930:104;;;;;;;;;;-1:-1:-1;;;;;4930:104:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:32;;;;;;;;;;;;7136:102;;;;;;;;;;-1:-1:-1;;;;;7136:102:3;;;;;1334:20;;;;;;;;;;;;2145:26;;;;;;;;;;;;;;;;;;;;;;;;;;;6853:117;;;;;;;;;;;;1706:84;;;;;;;;;;-1:-1:-1;;;;;1706:84:3;;;;;2019:28;;;;;;;;;;;;2195:26;;;;;;;;;;;;2082;;;;;;;;;;;;4452:115;;-1:-1:-1;;;;;4452:115:3;;;;;5841:726;5982:16;;5975:3;:23;;5974:64;;;;;6023:14;;6016:3;:21;;5974:64;:113;;;;-1:-1:-1;6055:13:3;;-1:-1:-1;;;;;6055:13:3;:24;:13;:26;;;;;;;;;;-1:-1:-1;;;6055:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6055:31:3;;;;-1:-1:-1;5974:113:3;:170;;;;-1:-1:-1;6129:9:3;:14;;5974:170;:232;;;;;6191:14;;6178:9;6161:14;;:26;:44;;5974:232;5965:242;;;;;;;;6262:14;:27;;6280:9;6262:27;;;;;;6339:12;;-1:-1:-1;;;;;6339:12:3;;:28;;;;;;;;;;;;;;;;;;;;;;;6330:38;;;;;;;;6495:13;;-1:-1:-1;;;;;6495:13:3;:28;6524:6;6532:9;6495:13;:47;;;;;;;-1:-1:-1;;;6495:47:3;;;;;;-1:-1:-1;;;;;6495:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6486:57;;;;;;;;5841:726;:::o;2320:27::-;;;-1:-1:-1;;;;;2320:27:3;;:::o;4930:104::-;5023:4;4930:104;;;;;:::o;2245:32::-;;;-1:-1:-1;;;;;2245:32:3;;:::o;7136:102::-;1316:5;;1302:10;-1:-1:-1;;;;;1302:19:3;;;1316:5;;1302:19;1293:29;;;;;;7200:12;:31;;-1:-1:-1;;7200:31:3;-1:-1:-1;;;;;7200:31:3;;;;;;;;;;7136:102::o;1334:20::-;;;-1:-1:-1;;;;;1334:20:3;;:::o;2145:26::-;;;;:::o;6853:117::-;6905:14;;6898:3;:21;;6890:30;;;;;;6930:13;;-1:-1:-1;;;;;6930:13:3;:30;:13;:33;;-1:-1:-1;;;6930:33:3;;;;;;-1:-1:-1;;;;;6930:33:3;;;;;;;;;-1:-1:-1;6930:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6853:117::o;1706:84::-;1316:5;;1302:10;-1:-1:-1;;;;;1302:19:3;;;1316:5;;1302:19;1293:29;;;;;;1766:5;:17;;-1:-1:-1;;1766:17:3;-1:-1:-1;;;;;1766:17:3;;;;;;;;;;1706:84::o;2019:28::-;;;;:::o;2195:26::-;;;;:::o;2082:::-;;;;:::o;4452:115::-;4506:4;4522:17;4532:6;4522:9;:17::i;:::-;-1:-1:-1;4556:4:3;4452:115;;;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "261200",
              "executionCost": "121637",
              "totalCost": "382837"
            },
            "external": {
              "": "infinite",
              "changeOwner(address)": "infinite",
              "endFundingTime()": "infinite",
              "finalizeFunding()": "infinite",
              "maximumFunding()": "infinite",
              "onApprove(address,address,uint256)": "infinite",
              "onTransfer(address,address,uint256)": "infinite",
              "owner()": "infinite",
              "proxyPayment(address)": "infinite",
              "setVault(address)": "infinite",
              "startFundingTime()": "infinite",
              "tokenContract()": "infinite",
              "totalCollected()": "infinite",
              "vaultAddress()": "infinite"
            },
            "internal": {
              "doPayment(address)": "infinite"
            }
          },
          "methodIdentifiers": {
            "changeOwner(address)": "a6f9dae1",
            "endFundingTime()": "e4693e98",
            "finalizeFunding()": "a19ed39d",
            "maximumFunding()": "99d64ab0",
            "onApprove(address,address,uint256)": "da682aeb",
            "onTransfer(address,address,uint256)": "4a393149",
            "owner()": "8da5cb5b",
            "proxyPayment(address)": "f48c3054",
            "setVault(address)": "6817031b",
            "startFundingTime()": "b75ece9c",
            "tokenContract()": "55a373d6",
            "totalCollected()": "e29eb836",
            "vaultAddress()": "430bf08a"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"vaultAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newVaultAddress\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeFunding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startFundingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endFundingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_startFundingTime\",\"type\":\"uint256\"},{\"name\":\"_endFundingTime\",\"type\":\"uint256\"},{\"name\":\"_maximumFunding\",\"type\":\"uint256\"},{\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{\"changeOwner(address)\":{\"params\":{\"_newOwner\":\"The address of the new owner. 0x0 can be used to create  an unowned neutral vault, however that cannot be undone\"}},\"finalizeFunding()\":{\"details\":\"`finalizeFunding()` can only be called after the end of the funding period.\"},\"onApprove(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount in the `approve()` call\",\"_owner\":\"The address that calls `approve()`\",\"_spender\":\"The spender in the `approve()` call\"},\"return\":\"False if the controller does not authorize the approval\"},\"onTransfer(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of the transfer\",\"_from\":\"The origin of the transfer\",\"_to\":\"The destination of the transfer\"},\"return\":\"False if the controller does not authorize the transfer\"},\"proxyPayment(address)\":{\"params\":{\"_owner\":\"The address that will hold the newly created tokens\"}},\"setVault(address)\":{\"params\":{\"_newVaultAddress\":\"The address that will receive the ether sent to this  Campaign\"}}}},\"userdoc\":{\"methods\":{\"changeOwner(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"},\"finalizeFunding()\":{\"notice\":\"`finalizeFunding()` ends the Campaign by calling setting the  controller to 0, thereby ending the issuance of new tokens and stopping the  Campaign from receiving more ether\"},\"onApprove(address,address,uint256)\":{\"notice\":\"Notifies the controller about an approval, for this Campaign all  approvals are allowed by default and no extra notifications are needed\"},\"onTransfer(address,address,uint256)\":{\"notice\":\"Notifies the controller about a transfer, for this Campaign all  transfers are allowed by default and no extra notifications are needed\"},\"proxyPayment(address)\":{\"notice\":\"//////////////`proxyPayment()` allows the caller to send ether to the Campaign and have the tokens created in an address of their choosing\"},\"setVault(address)\":{\"notice\":\"`onlyOwner` changes the location that ether is sent\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/SampleCampaign-TokenController.sol\":\"Campaign\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    TokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = TokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n////////////////\\n// Change Token Factory\\n////////////////\\n\\n    /// @dev allows the controller to change the TokenFactory that clones the token\\n    /// @param _newTokenFactory new TokenFactory address\\n    function setTokenFactory(address _newTokenFactory) public onlyController {\\n      require(_newTokenFactory != address(0));\\n      tokenFactory = TokenFactory(_newTokenFactory);\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = MiniMeToken(tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            ));\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\",\"keccak256\":\"0x818e3d9167eed5e6ba516ec6166842474dc734bb18075be40925aa1e58cb21f7\"},\"./contracts/SampleCampaign-TokenController.sol\":{\"content\":\"pragma solidity ^0.4.6;\\n\\n/*\\n    Copyright 2017, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MilestoneTracker Contract\\n/// @author Jordi Baylina\\n/// @dev This contract controls the issuance of tokens for the MiniMe Token\\n///  Contract. This version specifically acts as a Campaign manager for raising\\n///  funds for non-profit causes, but it can be customized for any variety of\\n///  purposes.\\n\\nimport \\\"MiniMeToken.sol\\\";\\n\\n\\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\\n///  later changed\\ncontract Owned {\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner { require (msg.sender == owner); _; }\\n\\n    address public owner;\\n\\n    /// @notice The Constructor assigns the message sender to be `owner`\\n    function Owned() { owner = msg.sender;}\\n\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner. 0x0 can be used to create\\n    ///  an unowned neutral vault, however that cannot be undone\\n    function changeOwner(address _newOwner) onlyOwner {\\n        owner = _newOwner;\\n    }\\n}\\n\\n\\n/// @dev This is designed to control the issuance of a MiniMe Token for a\\n///  non-profit Campaign. This contract effectively dictates the terms of the\\n///  funding round.\\n\\ncontract Campaign is TokenController, Owned {\\n\\n    uint public startFundingTime;       // In UNIX Time Format\\n    uint public endFundingTime;         // In UNIX Time Format\\n    uint public maximumFunding;         // In wei\\n    uint public totalCollected;         // In wei\\n    MiniMeToken public tokenContract;   // The new token for this Campaign\\n    address public vaultAddress;        // The address to hold the funds donated\\n\\n/// @notice 'Campaign()' initiates the Campaign by setting its funding\\n/// parameters\\n/// @dev There are several checks to make sure the parameters are acceptable\\n/// @param _startFundingTime The UNIX time that the Campaign will be able to\\n/// start receiving funds\\n/// @param _endFundingTime The UNIX time that the Campaign will stop being able\\n/// to receive funds\\n/// @param _maximumFunding In wei, the Maximum amount that the Campaign can\\n/// receive (currently the max is set at 10,000 ETH for the beta)\\n/// @param _vaultAddress The address that will store the donated funds\\n/// @param _tokenAddress Address of the token contract this contract controls\\n\\n    function Campaign(\\n        uint _startFundingTime,\\n        uint _endFundingTime,\\n        uint _maximumFunding,\\n        address _vaultAddress,\\n        address _tokenAddress\\n\\n    ) {\\n        require ((_endFundingTime >= now) &&           // Cannot end in the past\\n            (_endFundingTime > _startFundingTime) &&\\n            (_maximumFunding <= 10000 ether) &&        // The Beta is limited\\n            (_vaultAddress != 0));                    // To prevent burning ETH\\n        startFundingTime = _startFundingTime;\\n        endFundingTime = _endFundingTime;\\n        maximumFunding = _maximumFunding;\\n        tokenContract = MiniMeToken(_tokenAddress);// The Deployed Token Contract\\n        vaultAddress = _vaultAddress;\\n    }\\n\\n/// @dev The fallback function is called when ether is sent to the contract, it\\n/// simply calls `doPayment()` with the address that sent the ether as the\\n/// `_owner`. Payable is a required solidity modifier for functions to receive\\n/// ether, without this modifier functions will throw if ether is sent to them\\n\\n    function ()  payable {\\n        doPayment(msg.sender);\\n    }\\n\\n/////////////////\\n// TokenController interface\\n/////////////////\\n\\n/// @notice `proxyPayment()` allows the caller to send ether to the Campaign and\\n/// have the tokens created in an address of their choosing\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function proxyPayment(address _owner) payable returns(bool) {\\n        doPayment(_owner);\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about a transfer, for this Campaign all\\n///  transfers are allowed by default and no extra notifications are needed\\n/// @param _from The origin of the transfer\\n/// @param _to The destination of the transfer\\n/// @param _amount The amount of the transfer\\n/// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about an approval, for this Campaign all\\n///  approvals are allowed by default and no extra notifications are needed\\n/// @param _owner The address that calls `approve()`\\n/// @param _spender The spender in the `approve()` call\\n/// @param _amount The amount in the `approve()` call\\n/// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount)\\n        returns(bool)\\n    {\\n        return true;\\n    }\\n\\n\\n/// @dev `doPayment()` is an internal function that sends the ether that this\\n///  contract receives to the `vault` and creates tokens in the address of the\\n///  `_owner` assuming the Campaign is still accepting funds\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function doPayment(address _owner) internal {\\n\\n// First check that the Campaign is allowed to receive this donation\\n        require ((now >= startFundingTime) &&\\n            (now <= endFundingTime) &&\\n            (tokenContract.controller() != 0) &&           // Extra check\\n            (msg.value != 0) &&\\n            (totalCollected + msg.value <= maximumFunding));\\n\\n//Track how much the Campaign has collected\\n        totalCollected += msg.value;\\n\\n//Send the ether to the vault\\n        require (vaultAddress.send(msg.value));\\n\\n// Creates an equal amount of tokens as ether sent. The new tokens are created\\n//  in the `_owner` address\\n        require (tokenContract.generateTokens(_owner, msg.value));\\n\\n        return;\\n    }\\n\\n/// @notice `finalizeFunding()` ends the Campaign by calling setting the\\n///  controller to 0, thereby ending the issuance of new tokens and stopping the\\n///  Campaign from receiving more ether\\n/// @dev `finalizeFunding()` can only be called after the end of the funding period.\\n\\n    function finalizeFunding() {\\n        require(now >= endFundingTime);\\n        tokenContract.changeController(0);\\n    }\\n\\n\\n/// @notice `onlyOwner` changes the location that ether is sent\\n/// @param _newVaultAddress The address that will receive the ether sent to this\\n///  Campaign\\n    function setVault(address _newVaultAddress) onlyOwner {\\n        vaultAddress = _newVaultAddress;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf442c850e56095399f35b12ccec5469d36276578632a998f48d094f9844c817b\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"},\"./contracts/TokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev a MinimeToken factory must implement this method\\ncontract TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address);\\n}\\n\",\"keccak256\":\"0xf64d9320ae9e43c01f4e54322fc08b18fe7261ed0e33060561a15d9b2b4bb70d\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "changeOwner(address)": {
              "notice": "`owner` can step down and assign some other address to this role"
            },
            "finalizeFunding()": {
              "notice": "`finalizeFunding()` ends the Campaign by calling setting the  controller to 0, thereby ending the issuance of new tokens and stopping the  Campaign from receiving more ether"
            },
            "onApprove(address,address,uint256)": {
              "notice": "Notifies the controller about an approval, for this Campaign all  approvals are allowed by default and no extra notifications are needed"
            },
            "onTransfer(address,address,uint256)": {
              "notice": "Notifies the controller about a transfer, for this Campaign all  transfers are allowed by default and no extra notifications are needed"
            },
            "proxyPayment(address)": {
              "notice": "//////////////`proxyPayment()` allows the caller to send ether to the Campaign and have the tokens created in an address of their choosing"
            },
            "setVault(address)": {
              "notice": "`onlyOwner` changes the location that ether is sent"
            }
          }
        }
      },
      "Owned": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newOwner",
                "type": "address"
              }
            ],
            "name": "changeOwner",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "devdoc": {
          "methods": {
            "changeOwner(address)": {
              "params": {
                "_newOwner": "The address of the new owner. 0x0 can be used to create  an unowned neutral vault, however that cannot be undone"
              }
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6060604052341561000f57600080fd5b60008054600160a060020a033316600160a060020a03199091161790556101668061003b6000396000f30060606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114610050578063a6f9dae11461008c575b600080fd5b341561005b57600080fd5b6100636100ba565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b341561009757600080fd5b6100b873ffffffffffffffffffffffffffffffffffffffff600435166100d6565b005b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000543373ffffffffffffffffffffffffffffffffffffffff9081169116146100fe57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a723058206574110f8de78ffbde745e3e880bfeccca66a8c90f8ea28cbad7e60bd0e435f70029",
            "sourceMap": "1158:634:3:-;;;1434:39;;;;;;;;1453:5;:18;;-1:-1:-1;;;;;1461:10:3;1453:18;-1:-1:-1;;;;;;1453:18:3;;;;;;1158:634;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "60606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b8114610050578063a6f9dae11461008c575b600080fd5b341561005b57600080fd5b6100636100ba565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b341561009757600080fd5b6100b873ffffffffffffffffffffffffffffffffffffffff600435166100d6565b005b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000543373ffffffffffffffffffffffffffffffffffffffff9081169116146100fe57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a723058206574110f8de78ffbde745e3e880bfeccca66a8c90f8ea28cbad7e60bd0e435f70029",
            "sourceMap": "1158:634:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:84;;;;;;;;;;;;;;;;;;1334:20;;;;;;:::o;1706:84::-;1316:5;;1302:10;1316:5;1302:19;;;1316:5;;1302:19;1293:29;;;;;;1766:5;:17;;-1:-1:-1;;1766:17:3;;;;;;;;;;;;1706:84::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "71600",
              "executionCost": "20491",
              "totalCost": "92091"
            },
            "external": {
              "changeOwner(address)": "20644",
              "owner()": "388"
            }
          },
          "methodIdentifiers": {
            "changeOwner(address)": "a6f9dae1",
            "owner()": "8da5cb5b"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"changeOwner(address)\":{\"params\":{\"_newOwner\":\"The address of the new owner. 0x0 can be used to create  an unowned neutral vault, however that cannot be undone\"}}}},\"userdoc\":{\"methods\":{\"changeOwner(address)\":{\"notice\":\"`owner` can step down and assign some other address to this role\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/SampleCampaign-TokenController.sol\":\"Owned\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    TokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = TokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n////////////////\\n// Change Token Factory\\n////////////////\\n\\n    /// @dev allows the controller to change the TokenFactory that clones the token\\n    /// @param _newTokenFactory new TokenFactory address\\n    function setTokenFactory(address _newTokenFactory) public onlyController {\\n      require(_newTokenFactory != address(0));\\n      tokenFactory = TokenFactory(_newTokenFactory);\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = MiniMeToken(tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            ));\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\",\"keccak256\":\"0x818e3d9167eed5e6ba516ec6166842474dc734bb18075be40925aa1e58cb21f7\"},\"./contracts/SampleCampaign-TokenController.sol\":{\"content\":\"pragma solidity ^0.4.6;\\n\\n/*\\n    Copyright 2017, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MilestoneTracker Contract\\n/// @author Jordi Baylina\\n/// @dev This contract controls the issuance of tokens for the MiniMe Token\\n///  Contract. This version specifically acts as a Campaign manager for raising\\n///  funds for non-profit causes, but it can be customized for any variety of\\n///  purposes.\\n\\nimport \\\"MiniMeToken.sol\\\";\\n\\n\\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\\n///  later changed\\ncontract Owned {\\n    /// @dev `owner` is the only address that can call a function with this\\n    /// modifier\\n    modifier onlyOwner { require (msg.sender == owner); _; }\\n\\n    address public owner;\\n\\n    /// @notice The Constructor assigns the message sender to be `owner`\\n    function Owned() { owner = msg.sender;}\\n\\n    /// @notice `owner` can step down and assign some other address to this role\\n    /// @param _newOwner The address of the new owner. 0x0 can be used to create\\n    ///  an unowned neutral vault, however that cannot be undone\\n    function changeOwner(address _newOwner) onlyOwner {\\n        owner = _newOwner;\\n    }\\n}\\n\\n\\n/// @dev This is designed to control the issuance of a MiniMe Token for a\\n///  non-profit Campaign. This contract effectively dictates the terms of the\\n///  funding round.\\n\\ncontract Campaign is TokenController, Owned {\\n\\n    uint public startFundingTime;       // In UNIX Time Format\\n    uint public endFundingTime;         // In UNIX Time Format\\n    uint public maximumFunding;         // In wei\\n    uint public totalCollected;         // In wei\\n    MiniMeToken public tokenContract;   // The new token for this Campaign\\n    address public vaultAddress;        // The address to hold the funds donated\\n\\n/// @notice 'Campaign()' initiates the Campaign by setting its funding\\n/// parameters\\n/// @dev There are several checks to make sure the parameters are acceptable\\n/// @param _startFundingTime The UNIX time that the Campaign will be able to\\n/// start receiving funds\\n/// @param _endFundingTime The UNIX time that the Campaign will stop being able\\n/// to receive funds\\n/// @param _maximumFunding In wei, the Maximum amount that the Campaign can\\n/// receive (currently the max is set at 10,000 ETH for the beta)\\n/// @param _vaultAddress The address that will store the donated funds\\n/// @param _tokenAddress Address of the token contract this contract controls\\n\\n    function Campaign(\\n        uint _startFundingTime,\\n        uint _endFundingTime,\\n        uint _maximumFunding,\\n        address _vaultAddress,\\n        address _tokenAddress\\n\\n    ) {\\n        require ((_endFundingTime >= now) &&           // Cannot end in the past\\n            (_endFundingTime > _startFundingTime) &&\\n            (_maximumFunding <= 10000 ether) &&        // The Beta is limited\\n            (_vaultAddress != 0));                    // To prevent burning ETH\\n        startFundingTime = _startFundingTime;\\n        endFundingTime = _endFundingTime;\\n        maximumFunding = _maximumFunding;\\n        tokenContract = MiniMeToken(_tokenAddress);// The Deployed Token Contract\\n        vaultAddress = _vaultAddress;\\n    }\\n\\n/// @dev The fallback function is called when ether is sent to the contract, it\\n/// simply calls `doPayment()` with the address that sent the ether as the\\n/// `_owner`. Payable is a required solidity modifier for functions to receive\\n/// ether, without this modifier functions will throw if ether is sent to them\\n\\n    function ()  payable {\\n        doPayment(msg.sender);\\n    }\\n\\n/////////////////\\n// TokenController interface\\n/////////////////\\n\\n/// @notice `proxyPayment()` allows the caller to send ether to the Campaign and\\n/// have the tokens created in an address of their choosing\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function proxyPayment(address _owner) payable returns(bool) {\\n        doPayment(_owner);\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about a transfer, for this Campaign all\\n///  transfers are allowed by default and no extra notifications are needed\\n/// @param _from The origin of the transfer\\n/// @param _to The destination of the transfer\\n/// @param _amount The amount of the transfer\\n/// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\\n        return true;\\n    }\\n\\n/// @notice Notifies the controller about an approval, for this Campaign all\\n///  approvals are allowed by default and no extra notifications are needed\\n/// @param _owner The address that calls `approve()`\\n/// @param _spender The spender in the `approve()` call\\n/// @param _amount The amount in the `approve()` call\\n/// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount)\\n        returns(bool)\\n    {\\n        return true;\\n    }\\n\\n\\n/// @dev `doPayment()` is an internal function that sends the ether that this\\n///  contract receives to the `vault` and creates tokens in the address of the\\n///  `_owner` assuming the Campaign is still accepting funds\\n/// @param _owner The address that will hold the newly created tokens\\n\\n    function doPayment(address _owner) internal {\\n\\n// First check that the Campaign is allowed to receive this donation\\n        require ((now >= startFundingTime) &&\\n            (now <= endFundingTime) &&\\n            (tokenContract.controller() != 0) &&           // Extra check\\n            (msg.value != 0) &&\\n            (totalCollected + msg.value <= maximumFunding));\\n\\n//Track how much the Campaign has collected\\n        totalCollected += msg.value;\\n\\n//Send the ether to the vault\\n        require (vaultAddress.send(msg.value));\\n\\n// Creates an equal amount of tokens as ether sent. The new tokens are created\\n//  in the `_owner` address\\n        require (tokenContract.generateTokens(_owner, msg.value));\\n\\n        return;\\n    }\\n\\n/// @notice `finalizeFunding()` ends the Campaign by calling setting the\\n///  controller to 0, thereby ending the issuance of new tokens and stopping the\\n///  Campaign from receiving more ether\\n/// @dev `finalizeFunding()` can only be called after the end of the funding period.\\n\\n    function finalizeFunding() {\\n        require(now >= endFundingTime);\\n        tokenContract.changeController(0);\\n    }\\n\\n\\n/// @notice `onlyOwner` changes the location that ether is sent\\n/// @param _newVaultAddress The address that will receive the ether sent to this\\n///  Campaign\\n    function setVault(address _newVaultAddress) onlyOwner {\\n        vaultAddress = _newVaultAddress;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xf442c850e56095399f35b12ccec5469d36276578632a998f48d094f9844c817b\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"},\"./contracts/TokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev a MinimeToken factory must implement this method\\ncontract TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address);\\n}\\n\",\"keccak256\":\"0xf64d9320ae9e43c01f4e54322fc08b18fe7261ed0e33060561a15d9b2b4bb70d\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "changeOwner(address)": {
              "notice": "`owner` can step down and assign some other address to this role"
            }
          }
        }
      }
    },
    "./contracts/SampleUpgradeTokenFactory-TokenController.sol": {
      "MockFutureMiniMeToken": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "creationBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newTokenFactory",
                "type": "address"
              }
            ],
            "name": "setTokenFactory",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "name": "",
                "type": "uint8"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_newController",
                "type": "address"
              }
            ],
            "name": "changeController",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "balanceOfAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_cloneTokenName",
                "type": "string"
              },
              {
                "name": "_cloneDecimalUnits",
                "type": "uint8"
              },
              {
                "name": "_cloneTokenSymbol",
                "type": "string"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "name": "balance",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "achieveDecentralizedWorld",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "generateTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_blockNumber",
                "type": "uint256"
              }
            ],
            "name": "totalSupplyAt",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "transfersEnabled",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "parentSnapShotBlock",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              },
              {
                "name": "_extraData",
                "type": "bytes"
              }
            ],
            "name": "approveAndCall",
            "outputs": [
              {
                "name": "success",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "destroyTokens",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "claimTokens",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "tokenFactory",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "enableTransfers",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "controller",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "name": "_tokenFactory",
                "type": "address"
              },
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_parentSnapShotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "payable": true,
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_token",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_controller",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "ClaimedTokens",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_cloneToken",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_snapshotBlock",
                "type": "uint256"
              }
            ],
            "name": "NewCloneToken",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "_spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          }
        ],
        "devdoc": {
          "author": "Raul Martinez",
          "methods": {
            "achieveDecentralizedWorld()": {
              "details": "example of added functionality in future MiniMeTokens",
              "return": "sample results"
            },
            "allowance(address,address)": {
              "details": "This function makes it easy to read the `allowed[]` map",
              "params": {
                "_owner": "The address of the account that owns the token",
                "_spender": "The address of the account able to transfer the tokens"
              },
              "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
            },
            "approve(address,uint256)": {
              "params": {
                "_amount": "The amount of tokens to be approved for transfer",
                "_spender": "The address of the account able to transfer the tokens"
              },
              "return": "True if the approval was successful"
            },
            "approveAndCall(address,uint256,bytes)": {
              "params": {
                "_amount": "The amount of tokens to be approved for transfer",
                "_spender": "The address of the contract able to transfer the tokens"
              },
              "return": "True if the function call was successful"
            },
            "balanceOf(address)": {
              "params": {
                "_owner": "The address that's balance is being requested"
              },
              "return": "The balance of `_owner` at the current block"
            },
            "balanceOfAt(address,uint256)": {
              "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
              "params": {
                "_blockNumber": "The block number when the balance is queried",
                "_owner": "The address from which the balance will be retrieved"
              },
              "return": "The balance at `_blockNumber`"
            },
            "changeController(address)": {
              "params": {
                "_newController": "The new controller of the contract"
              }
            },
            "claimTokens(address)": {
              "params": {
                "_token": "The address of the token contract that you want to recover  set to 0 in case you want to extract ether."
              }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
              "params": {
                "_cloneDecimalUnits": "Number of decimals of the smallest unit",
                "_cloneTokenName": "Name of the clone token",
                "_cloneTokenSymbol": "Symbol of the clone token",
                "_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
                "_transfersEnabled": "True if transfers are allowed in the clone"
              },
              "return": "The address of the new MiniMeToken Contract"
            },
            "destroyTokens(address,uint256)": {
              "params": {
                "_amount": "The quantity of tokens to burn",
                "_owner": "The address that will lose the tokens"
              },
              "return": "True if the tokens are burned correctly"
            },
            "enableTransfers(bool)": {
              "params": {
                "_transfersEnabled": "True if transfers are allowed in the clone"
              }
            },
            "generateTokens(address,uint256)": {
              "params": {
                "_amount": "The quantity of tokens generated",
                "_owner": "The address that will be assigned the new tokens"
              },
              "return": "True if the tokens are generated correctly"
            },
            "setTokenFactory(address)": {
              "details": "allows the controller to change the TokenFactory that clones the token",
              "params": {
                "_newTokenFactory": "new TokenFactory address"
              }
            },
            "totalSupply()": {
              "details": "This function makes it easy to get the total number of tokens",
              "return": "The total number of tokens"
            },
            "totalSupplyAt(uint256)": {
              "params": {
                "_blockNumber": "The block number when the totalSupply is queried"
              },
              "return": "The total amount of tokens at `_blockNumber`"
            },
            "transfer(address,uint256)": {
              "params": {
                "_amount": "The amount of tokens to be transferred",
                "_to": "The address of the recipient"
              },
              "return": "Whether the transfer was successful or not"
            },
            "transferFrom(address,address,uint256)": {
              "params": {
                "_amount": "The amount of tokens to be transferred",
                "_from": "The address holding the tokens being transferred",
                "_to": "The address of the recipient"
              },
              "return": "True if the transfer was successful"
            }
          },
          "title": "FutureMiniMeToken Contract"
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "896:1547:4:-;;;1838:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1771:449:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:10:0;:23;;-1:-1:-1;;;;;318:10:0;305:23;;-1:-1:-1;;;;;;305:23:0;;;;;;;;;;4524:12:1;:42;;;;;305:23:0;4524:42:1;-1:-1:-1;;;;;;4524:42:1;;;;;;;;;1771:449:4;-1:-1:-1;2042:13:4;;-1:-1:-1;2065:12:4;2087:20;2117:10;2137:13;2160:12;1771:449;305:23:0;2117:10:4;;4576:17:1;;;;;;;;:::i;:::-;-1:-1:-1;4651:8:1;:24;;-1:-1:-1;;4651:24:1;;;;;;;4730:6;4739:12;;4730:21;;;;;;;;:::i;:::-;-1:-1:-1;4807:11:1;:39;;-1:-1:-1;;;;;;4807:39:1;-1:-1:-1;;;;;4807:39:1;;;;;;;;;;;-1:-1:-1;;;4856:19:1;:42;4908:16;:36;;-1:-1:-1;;4908:36:1;;;;;;;;;;-1:-1:-1;;4970:12:1;4954:13;:28;-1:-1:-1;896:1547:4;;-1:-1:-1;;;;;896:1547:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;896:1547:4;;;-1:-1:-1;896:1547:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106101455763ffffffff60e060020a60003504166306fdde0381146101ea578063095ea7b31461027457806317634514146102aa57806318160ddd146102cf57806323b872dd146102e25780632f73a9f81461030a578063313ce567146103295780633cebb823146103525780634ee2cd7e1461037157806354fd4d50146103935780636638c087146103a657806370a082311461046a57806371f823751461048957806380a540011461049c578063827f32c0146104af57806395d89b41146104d1578063981b24d0146104e4578063a9059cbb146104fa578063bef97c871461051c578063c5bcc4f11461052f578063cae9ca5114610542578063d3ce77fe146105a7578063dd62ed3e146105c9578063df8de3e7146105ee578063e77772fe1461060d578063f41e60c514610620578063f77c479114610638575b60005461015a90600160a060020a031661064b565b151561016557600080fd5b60008054600160a060020a03169063f48c305490349033906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390911660048201526024016020604051808303818588803b15156101c157600080fd5b6125ee5a03f115156101d257600080fd5b505050506040518051905015156101e857600080fd5b005b34156101f557600080fd5b6101fd610678565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610239578082015183820152602001610221565b50505050905090810190601f1680156102665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027f57600080fd5b610296600160a060020a0360043516602435610716565b604051901515815260200160405180910390f35b34156102b557600080fd5b6102bd61087f565b60405190815260200160405180910390f35b34156102da57600080fd5b6102bd610885565b34156102ed57600080fd5b610296600160a060020a0360043581169060243516604435610896565b341561031557600080fd5b6101e8600160a060020a0360043516610935565b341561033457600080fd5b61033c61099a565b60405160ff909116815260200160405180910390f35b341561035d57600080fd5b6101e8600160a060020a03600435166109a3565b341561037c57600080fd5b6102bd600160a060020a03600435166024356109ed565b341561039e57600080fd5b6101fd610b23565b34156103b157600080fd5b61044e60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013515159350610b8e92505050565b604051600160a060020a03909116815260200160405180910390f35b341561047557600080fd5b6102bd600160a060020a0360043516610db8565b341561049457600080fd5b6101fd610dcc565b34156104a757600080fd5b61044e610e0d565b34156104ba57600080fd5b610296600160a060020a0360043516602435610e1c565b34156104dc57600080fd5b6101fd610eda565b34156104ef57600080fd5b6102bd600435610f45565b341561050557600080fd5b610296600160a060020a036004351660243561102e565b341561052757600080fd5b610296611056565b341561053a57600080fd5b6102bd61105f565b341561054d57600080fd5b61029660048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061106595505050505050565b34156105b257600080fd5b610296600160a060020a0360043516602435611180565b34156105d457600080fd5b6102bd600160a060020a0360043581169060243516611238565b34156105f957600080fd5b6101e8600160a060020a0360043516611263565b341561061857600080fd5b61044e61140f565b341561062b57600080fd5b6101e86004351515611423565b341561064357600080fd5b61044e611451565b600080600160a060020a03831615156106675760009150610672565b823b90506000811191505b50919050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b505050505081565b600b5460009060ff16151561072a57600080fd5b81158061075a5750600160a060020a03338116600090815260096020908152604080832093871683529290522054155b151561076557600080fd5b60005461077a90600160a060020a031661064b565b156108155760008054600160a060020a03169063da682aeb903390869086906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156107ef57600080fd5b6102c65a03f1151561080057600080fd5b50505060405180519050151561081557600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60075481565b600061089043610f45565b90505b90565b6000805433600160a060020a0390811691161461092057600b5460ff1615156108be57600080fd5b600160a060020a0380851660009081526009602090815260408083203390941683529290522054829010156108f257600080fd5b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b61092b848484611460565b5060019392505050565b60005433600160a060020a0390811691161461095057600080fd5b600160a060020a038116151561096557600080fd5b600b8054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60025460ff1681565b60005433600160a060020a039081169116146109be57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382166000908152600860205260408120541580610a495750600160a060020a038316600090815260086020526040812080548492908110610a3257fe5b6000918252602090912001546001608060020a0316115b15610afa57600554600160a060020a031615610af257600554600654600160a060020a0390911690634ee2cd7e908590610a84908690611652565b60006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610ad057600080fd5b6102c65a03f11515610ae157600080fd5b505050604051805190509050610879565b506000610879565b600160a060020a0383166000908152600860205260409020610b1c908361166a565b9050610879565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070e5780601f106106e35761010080835404028352916020019161070e565b600080831515610b9c574393505b600b546101009004600160a060020a0316635b7b72c130868a8a8a8960006040516020015260405160e060020a63ffffffff8916028152600160a060020a038716600482019081526024820187905260ff8516606483015282151560a483015260c0604483019081529091608481019060c40187818151815260200191508051906020019080838360005b83811015610c3f578082015183820152602001610c27565b50505050905090810190601f168015610c6c5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610ca2578082015183820152602001610c8a565b50505050905090810190601f168015610ccf5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1515610cf357600080fd5b6102c65a03f11515610d0457600080fd5b5050506040518051915050600160a060020a038116633cebb8233360405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b1515610d5d57600080fd5b6102c65a03f11515610d6e57600080fd5b50505080600160a060020a03167f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade8560405190815260200160405180910390a29695505050505050565b6000610dc482436109ed565b90505b919050565b610dd46118bf565b60408051908101604052601981527f646563656e7472616c697a6174696f6e206163686965766564000000000000006020820152905090565b600554600160a060020a031681565b600080548190819033600160a060020a03908116911614610e3c57600080fd5b610e44610885565b915083820182901015610e5657600080fd5b610e5f85610db8565b905083810181901015610e7157600080fd5b610e7e600a8584016117c9565b600160a060020a0385166000908152600860205260409020610ea2908286016117c9565b84600160a060020a0316600060008051602061190f8339815191528660405190815260200160405180910390a3506001949350505050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070e5780601f106106e35761010080835404028352916020019161070e565b600a546000901580610f7a575081600a6000815481101515610f6357fe5b6000918252602090912001546001608060020a0316115b1561101c57600554600160a060020a03161561101457600554600654600160a060020a039091169063981b24d090610fb3908590611652565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610ff257600080fd5b6102c65a03f1151561100357600080fd5b505050604051805190509050610dc7565b506000610dc7565b611027600a8361166a565b9050610dc7565b600b5460009060ff16151561104257600080fd5b61104d338484611460565b50600192915050565b600b5460ff1681565b60065481565b60006110718484610716565b151561107c57600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111145780820151838201526020016110fc565b50505050905090810190601f1680156111415780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561116257600080fd5b6102c65a03f1151561117357600080fd5b5060019695505050505050565b600080548190819033600160a060020a039081169116146111a057600080fd5b6111a8610885565b9150838210156111b757600080fd5b6111c085610db8565b9050838110156111cf57600080fd5b6111dc600a8584036117c9565b600160a060020a0385166000908152600860205260409020611200908583036117c9565b600085600160a060020a031660008051602061190f8339815191528660405190815260200160405180910390a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461128157600080fd5b600160a060020a03831615156112cf57600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f1935050505015156112ca57600080fd5b61140a565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561132957600080fd5b6102c65a03f1151561133a57600080fd5b505050604051805160008054919350600160a060020a03808616935063a9059cbb92169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156113aa57600080fd5b6102c65a03f115156113bb57600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a35b505050565b600b546101009004600160a060020a031681565b60005433600160a060020a0390811691161461143e57600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b6000808215156114a45783600160a060020a031685600160a060020a031660008051602061190f8339815191528560405190815260200160405180910390a361164b565b6006544390106114b357600080fd5b600160a060020a038416158015906114dd575030600160a060020a031684600160a060020a031614155b15156114e857600080fd5b6114f285436109ed565b91508282101561150157600080fd5b60005461151690600160a060020a031661064b565b156115b15760008054600160a060020a031690634a393149908790879087906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561158b57600080fd5b6102c65a03f1151561159c57600080fd5b5050506040518051905015156115b157600080fd5b600160a060020a03851660009081526008602052604090206115d5908484036117c9565b6115df84436109ed565b9050828101819010156115f157600080fd5b600160a060020a0384166000908152600860205260409020611615908285016117c9565b83600160a060020a031685600160a060020a031660008051602061190f8339815191528560405190815260200160405180910390a35b5050505050565b60008183106116615781611663565b825b9392505050565b60008060008085805490506000141561168657600093506117c0565b85548690600019810190811061169857fe5b6000918252602090912001546001608060020a031685106116f5578554869060001981019081106116c557fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693506117c0565b85600081548110151561170457fe5b6000918252602090912001546001608060020a031685101561172957600093506117c0565b8554600093506000190191505b8282111561178657600260018385010104905084868281548110151561175857fe5b6000918252602090912001546001608060020a03161161177a57809250611781565b6001810391505b611736565b858381548110151561179457fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b815460009081901580611802575083544390859060001981019081106117eb57fe5b6000918252602090912001546001608060020a0316105b15611874578354849061181882600183016118d1565b8154811061182257fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff19909316929092171617815591506118b9565b83548490600019810190811061188657fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b60206040519081016040526000815290565b81548183558181151161140a5760008381526020902061140a91810190830161089391905b8082111561190a57600081556001016118f6565b50905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058204177b2d80dbdd16bf67ab19be5c5b427dea17e19dee85e33e30a24fd626759530029",
            "sourceMap": "896:1547:4:-;;;;;;;;-1:-1:-1;;;896:1547:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20607:10:1;;20596:22;;-1:-1:-1;;;;;20607:10:1;20596;:22::i;:::-;20588:31;;;;;;;;20653:10;;;-1:-1:-1;;;;;20653:10:1;;20637:40;;20684:9;;20695:10;;20637:69;;;;;;;;;;-1:-1:-1;;;20637:69:1;;;-1:-1:-1;;;;;20637:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20629:78;;;;;;;;896:1547:4;1612:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9127:829:1;;;;;;;;;;;;-1:-1:-1;;;;;9127:829:1;;;;;;;;;;;;;;;;;;;;;;2753:25;;;;;;;;;;;;;;;;;;;;;;;;;;;11409:105;;;;;;;;;;;;5825:711;;;;;;;;;;-1:-1:-1;;;;;5825:711:1;;;;;;;;;;;;14134:180;;;;;;;;;;;;-1:-1:-1;;;;;14134:180:1;;;1692:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:116:0;;;;;;;;;;;;-1:-1:-1;;;;;456:116:0;;;11868:938:1;;;;;;;;;;;;-1:-1:-1;;;;;11868:938:1;;;;;1838:33;;;;;;;;;;;;15051:768;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15051:768:1;;-1:-1:-1;;15051:768:1;;;;;;;;;-1:-1:-1;15051:768:1;;-1:-1:-1;;;15051:768:1;;;;-1:-1:-1;;;;;15051:768:1;;;;;;;;;;;;;;;8594:134;;;;;;;;;;;;-1:-1:-1;;;;;8594:134:1;;;2323:117:4;;;;;;;;;;;;2452:30:1;;;;;;;;;;;;16150:576;;;;;;;;;;;;-1:-1:-1;;;;;16150:576:1;;;;;1773:20;;;;;;;;;;;;13019:910;;;;;;;;;;;;;;5288:187;;;;;;;;;;;;-1:-1:-1;;;;;5288:187:1;;;;;3332:28;;;;;;;;;;;;2639:31;;;;;;;;;;;;10943:342;;;;;;;;;;;;;-1:-1:-1;;;;;10943:342:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10943:342:1;;-1:-1:-1;10943:342:1;;-1:-1:-1;;;;;;10943:342:1;16956:500;;;;;;;;;;;;-1:-1:-1;;;;;16956:500:1;;;;;10275:151;;;;;;;;;;-1:-1:-1;;;;;10275:151:1;;;;;;;;;;21014:365;;;;;;;;;;;;-1:-1:-1;;;;;21014:365:1;;;3418:32;;;;;;;;;;;;17679:124;;;;;;;;;;;;;;;;242:25:0;;;;;;;;;;;;19918:222:1;19979:4;;-1:-1:-1;;;;;20018:10:1;;;20014:28;;;20037:5;20030:12;;;;20014:28;20095:5;20083:11;20075:26;;20132:1;20127:4;:6;20120:13;;19918:222;;;;;:::o;1612:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9127:829::-;9227:16;;9195:12;;9227:16;;9219:25;;;;;;;;9567:12;;;9566:54;;-1:-1:-1;;;;;;9593:10:1;9585:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;:34;9566:54;9558:63;;;;;;;;9715:10;;9704:22;;-1:-1:-1;;;;;9715:10:1;9704;:22::i;:::-;9700:130;;;9766:10;;;-1:-1:-1;;;;;9766:10:1;;9750:37;;9788:10;;9800:8;;9810:7;;9750:68;;;;;;;;;;-1:-1:-1;;;9750:68:1;;;-1:-1:-1;;;;;9750:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:77;;;;;;;;-1:-1:-1;;;;;9848:10:1;9840:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;;:39;;;9889;;9840;;9889;;;;;;;;;;;;;-1:-1:-1;9945:4:1;9127:829;;;;;:::o;2753:25::-;;;;:::o;11409:105::-;11457:4;11480:27;11494:12;11480:13;:27::i;:::-;11473:34;;11409:105;;:::o;5825:711::-;5913:12;6232:10;;6218;-1:-1:-1;;;;;6218:24:1;;;6232:10;;6218:24;6214:254;;6266:16;;;;6258:25;;;;;;;;-1:-1:-1;;;;;6368:14:1;;;;;;;:7;:14;;;;;;;;6383:10;6368:26;;;;;;;;;;:37;;;;6360:46;;;;;;-1:-1:-1;;;;;6420:14:1;;;;;;;:7;:14;;;;;;;;6435:10;6420:26;;;;;;;;;:37;;;;;;;6214:254;6477:31;6488:5;6495:3;6500:7;6477:10;:31::i;:::-;-1:-1:-1;6525:4:1;5825:711;;;;;:::o;14134:180::-;219:10:0;;205;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;-1:-1:-1;;;;;14223:30:1;;;;14215:39;;;;;;14262:12;:45;;-1:-1:-1;;;;;14262:45:1;;;;;;-1:-1:-1;;14262:45:1;;;;;;;;;14134:180::o;1692:21::-;;;;;;:::o;456:116:0:-;219:10;;205;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;538:10;:27;;-1:-1:-1;;538:27:0;-1:-1:-1;;;;;538:27:0;;;;;;;;;;456:116::o;11868:938:1:-;-1:-1:-1;;;;;12306:16:1;;11957:4;12306:16;;;:8;:16;;;;;:23;:28;;12305:92;;-1:-1:-1;;;;;;12352:16:1;;;;;;:8;:16;;;;;:19;;12384:12;;12352:16;:19;;;;;;;;;;;;;;;:29;-1:-1:-1;;;;;12352:29:1;:44;12305:92;12301:499;;;12425:11;;-1:-1:-1;;;;;12425:11:1;12417:25;12413:222;;12469:11;;12519:19;;-1:-1:-1;;;;;12469:11:1;;;;:23;;12493:6;;12501:38;;12505:12;;12501:3;:38::i;:::-;12469:71;;;;;;;;;;;-1:-1:-1;;;12469:71:1;;;-1:-1:-1;;;;;12469:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12462:78;;;;12413:222;-1:-1:-1;12619:1:1;12612:8;;12301:499;-1:-1:-1;;;;;12758:16:1;;;;;;:8;:16;;;;;12747:42;;12776:12;12747:10;:42::i;:::-;12740:49;;;;1838:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15051:768;15263:7;;15286:19;;15282:54;;;15324:12;15307:29;;15282:54;15383:12;;;;;-1:-1:-1;;;;;15383:12:1;:29;15426:4;15444:14;15472:15;15501:18;15533:17;15564;15383:212;;;;;;;;;;;-1:-1:-1;;;15383:212:1;;;-1:-1:-1;;;;;15383:212:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;;;;;;;15607:27:1;;;15635:10;15607:39;;;;;-1:-1:-1;;;15607:39:1;;;-1:-1:-1;;;;;15607:39:1;;;;;;;;;;-1:-1:-1;15607:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15726:50:1;;;15761:14;15726:50;;;;;;;;;;;;;;15801:10;15051:768;-1:-1:-1;;;;;;15051:768:1:o;8594:134::-;8654:15;8688:33;8700:6;8708:12;8688:11;:33::i;:::-;8681:40;;8594:134;;;;:::o;2323:117:4:-;2381:6;;:::i;:::-;2399:34;;;;;;;;;;;;;;;;;-1:-1:-1;2323:117:4;:::o;2452:30:1:-;;;-1:-1:-1;;;;;2452:30:1;;:::o;16150:576::-;16240:4;219:10:0;;16240:4:1;;;;205:10:0;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;16278:13:1;:11;:13::i;:::-;16256:35;-1:-1:-1;16309:24:1;;;:42;;;;16301:51;;;;;;16409:17;16419:6;16409:9;:17::i;:::-;16384:42;-1:-1:-1;16444:27:1;;;:48;;;;16436:57;;;;;;16525:62;16542:18;16579:7;16562:14;:24;16525:16;:62::i;:::-;-1:-1:-1;;;;;16614:16:1;;;;;;:8;:16;;;;;16597:63;;16632:27;;;16597:16;:63::i;:::-;-1:-1:-1;;;;;16670:28:1;;16679:1;;;-1:-1:-1;;;;;;;;;16690:7:1;16670:28;;;;;;;;;;;;;;-1:-1:-1;16715:4:1;;16150:576;-1:-1:-1;;;;16150:576:1:o;1773:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13019:910;13458:18;:25;13085:4;;13458:30;;13457:96;;;13540:12;13506:18;13525:1;13506:21;;;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;13506:31:1;:46;13457:96;13453:470;;;13581:11;;-1:-1:-1;;;;;13581:11:1;13573:25;13569:183;;13625:11;;13669:19;;-1:-1:-1;;;;;13625:11:1;;;;:25;;13651:38;;13655:12;;13651:3;:38::i;:::-;13625:65;;;;;;;;;;;-1:-1:-1;;;13625:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13618:72;;;;13569:183;-1:-1:-1;13736:1:1;13729:8;;13453:470;13868:44;13879:18;13899:12;13868:10;:44::i;:::-;13861:51;;;;5288:187;5384:16;;5352:12;;5384:16;;5376:25;;;;;;;;5411:36;5422:10;5434:3;5439:7;5411:10;:36::i;:::-;-1:-1:-1;5464:4:1;5288:187;;;;:::o;3332:28::-;;;;;;:::o;2639:31::-;;;;:::o;10943:342::-;11041:12;11073:26;11081:8;11091:7;11073;:26::i;:::-;11065:35;;;;;;;;-1:-1:-1;;;;;11111:48:1;;;11173:10;11197:7;11218:4;11236:10;11111:145;;-1:-1:-1;;;11111:145:1;;;;;;-1:-1:-1;;;;;11111:145:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;11274:4:1;;10943:342;-1:-1:-1;;;;;;10943:342:1:o;16956:500::-;17045:4;219:10:0;;17045:4:1;;;;205:10:0;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;17083:13:1;:11;:13::i;:::-;17061:35;-1:-1:-1;17114:25:1;;;;17106:34;;;;;;17177:17;17187:6;17177:9;:17::i;:::-;17150:44;-1:-1:-1;17212:30:1;;;;17204:39;;;;;;17253:62;17270:18;17307:7;17290:14;:24;17253:16;:62::i;:::-;-1:-1:-1;;;;;17342:16:1;;;;;;:8;:16;;;;;17325:65;;17360:29;;;17325:16;:65::i;:::-;17417:1;-1:-1:-1;;;;;17400:28:1;;17417:1;;-1:-1:-1;;;;;;;;;17420:7:1;17400:28;;;;;;;;;;;;;;-1:-1:-1;17445:4:1;;16956:500;-1:-1:-1;;;;16956:500:1:o;10275:151::-;-1:-1:-1;;;;;10394:15:1;;;10358:17;10394:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;10275:151::o;21014:365::-;21190:17;219:10:0;;21190:17:1;;205:10:0;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;-1:-1:-1;;;;;21087:13:1;;;21083:97;;;21116:10;;-1:-1:-1;;;;;21116:10:1;;;;21136:4;:12;;21116:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21163:7;;21083:97;21222:6;;-1:-1:-1;;;;;;21254:15:1;;;21270:4;21254:21;;;;;;;;;;;-1:-1:-1;;;21254:21:1;;;-1:-1:-1;;;;;21254:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21300:10;;;21254:21;;-1:-1:-1;;;;;;21285:14:1;;;;-1:-1:-1;21285:14:1;;21300:10;;21254:21;;21285:35;;;;;;;;;;-1:-1:-1;;;21285:35:1;;;-1:-1:-1;;;;;21285:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21352:10:1;;-1:-1:-1;;;;;21352:10:1;;;;21330:42;;;21364:7;21330:42;;;;;;;;;;;;;;232:1:0;21014:365:1;;;:::o;3418:32::-;;;;;;-1:-1:-1;;;;;3418:32:1;;:::o;17679:124::-;219:10:0;;205;-1:-1:-1;;;;;205:24:0;;;219:10;;205:24;197:33;;;;;;17760:16:1;:36;;-1:-1:-1;;17760:36:1;;;;;;;;;;17679:124::o;242:25:0:-;;;-1:-1:-1;;;;;242:25:0;;:::o;6915:1544:1:-;7484:23;;7009:12;;7005:158;;;-1:-1:-1;;;;;7040:29:1;;;;;;-1:-1:-1;;;;;;;;;;;7061:7:1;7040:29;;;;;;;;;;;;;;7143:7;;7005:158;7184:19;;7206:12;7184:34;;7176:43;;;;;;-1:-1:-1;;;;;7314:8:1;;;;;;7313:36;;-1:-1:-1;7343:4:1;-1:-1:-1;;;;;7328:20:1;;;;;;;;7313:36;7305:45;;;;;;;;7510:32;7522:5;7529:12;7510:11;:32::i;:::-;7484:58;-1:-1:-1;7564:30:1;;;;7556:39;;;;;;7682:10;;7671:22;;-1:-1:-1;;;;;7682:10:1;7671;:22::i;:::-;7667:127;;;7736:10;;;-1:-1:-1;;;;;7736:10:1;;7720:38;;7759:5;;7766:3;;7771:7;;7720:59;;;;;;;;;;-1:-1:-1;;;7720:59:1;;;-1:-1:-1;;;;;7720:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7712:68;;;;;;;;-1:-1:-1;;;;;7938:15:1;;;;;;:8;:15;;;;;7921:64;;7955:29;;;7921:16;:64::i;:::-;8138:30;8150:3;8155:12;8138:11;:30::i;:::-;8114:54;-1:-1:-1;8189:27:1;;;:48;;;;8181:57;;;;;;-1:-1:-1;;;;;8290:13:1;;;;;;:8;:13;;;;;8273:60;;8305:27;;;8273:16;:60::i;:::-;-1:-1:-1;;;;;8422:29:1;;;;;;-1:-1:-1;;;;;;;;;;;8443:7:1;8422:29;;;;;;;;;;;;;;6915:1544;;;;;;:::o;20212:95::-;20264:4;20291:1;20287;:5;:13;;20299:1;20287:13;;;20295:1;20287:13;20280:20;20212:95;-1:-1:-1;;;20212:95:1:o;18177:765::-;18276:4;18617:8;18639;18712;18296:11;:18;;;;18318:1;18296:23;18292:37;;;18328:1;18321:8;;;;18292:37;18407:18;;;;-1:-1:-1;;18407:20:1;;;18395:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;18395:43:1;18385:53;;18381:117;;18471:18;;;;-1:-1:-1;;18471:20:1;;;18459:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;18459:39:1;;-1:-1:-1;18452:46:1;;18381:117;18521:11;18533:1;18521:14;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;18521:24:1;18512:33;;18508:47;;;18554:1;18547:8;;;;18508:47;18650:18;;18628:1;;-1:-1:-1;;;18650:20:1;;-1:-1:-1;18680:217:1;18693:3;18687;:9;18680:217;;;18740:1;18736;18724:9;;;:13;18723:18;18712:29;;18787:6;18759:11;18771:3;18759:16;;;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;18759:26:1;:34;18755:132;;18819:3;18813:9;;18755:132;;;18871:1;18867:3;:5;18861:11;;18755:132;18680:217;;;18913:11;18925:3;18913:16;;;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;18913:22:1;;-1:-1:-1;18177:765:1;;;;;;;;:::o;19160:587::-;19263:18;;19379:32;;;;19263:23;;19262:98;;-1:-1:-1;19312:18:1;;19347:12;;19312:18;;-1:-1:-1;;19312:21:1;;;19300:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;19300:44:1;:59;19262:98;19258:483;;;19427:20;;19414:11;;19427:20;19414:11;19427:20;;;;:::i;:::-;19414:35;;;;;;;;;;;;;;;;;19466:48;;-1:-1:-1;;19466:48:1;19501:12;-1:-1:-1;;;;;19466:48:1;;;;;;;19531:37;;;;;-1:-1:-1;19531:37:1;;;;19414:35;-1:-1:-1;19258:483:1;;;19652:18;;;;-1:-1:-1;;19652:20:1;;;19640:33;;;;;;;;;;;;;;;19690:37;;-1:-1:-1;;;;;19690:37:1;;;;;;-1:-1:-1;19690:37:1;;;;19640:33;-1:-1:-1;19258:483:1;19160:587;;;;:::o;896:1547:4:-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "1298000",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "": "infinite",
              "achieveDecentralizedWorld()": "infinite",
              "allowance(address,address)": "infinite",
              "approve(address,uint256)": "infinite",
              "approveAndCall(address,uint256,bytes)": "infinite",
              "balanceOf(address)": "infinite",
              "balanceOfAt(address,uint256)": "infinite",
              "changeController(address)": "infinite",
              "claimTokens(address)": "infinite",
              "controller()": "infinite",
              "createCloneToken(string,uint8,string,uint256,bool)": "infinite",
              "creationBlock()": "infinite",
              "decimals()": "infinite",
              "destroyTokens(address,uint256)": "infinite",
              "enableTransfers(bool)": "infinite",
              "generateTokens(address,uint256)": "infinite",
              "name()": "infinite",
              "parentSnapShotBlock()": "infinite",
              "parentToken()": "infinite",
              "setTokenFactory(address)": "infinite",
              "symbol()": "infinite",
              "tokenFactory()": "infinite",
              "totalSupply()": "infinite",
              "totalSupplyAt(uint256)": "infinite",
              "transfer(address,uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite",
              "transfersEnabled()": "infinite",
              "version()": "infinite"
            }
          },
          "methodIdentifiers": {
            "achieveDecentralizedWorld()": "71f82375",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveAndCall(address,uint256,bytes)": "cae9ca51",
            "balanceOf(address)": "70a08231",
            "balanceOfAt(address,uint256)": "4ee2cd7e",
            "changeController(address)": "3cebb823",
            "claimTokens(address)": "df8de3e7",
            "controller()": "f77c4791",
            "createCloneToken(string,uint8,string,uint256,bool)": "6638c087",
            "creationBlock()": "17634514",
            "decimals()": "313ce567",
            "destroyTokens(address,uint256)": "d3ce77fe",
            "enableTransfers(bool)": "f41e60c5",
            "generateTokens(address,uint256)": "827f32c0",
            "name()": "06fdde03",
            "parentSnapShotBlock()": "c5bcc4f1",
            "parentToken()": "80a54001",
            "setTokenFactory(address)": "2f73a9f8",
            "symbol()": "95d89b41",
            "tokenFactory()": "e77772fe",
            "totalSupply()": "18160ddd",
            "totalSupplyAt(uint256)": "981b24d0",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transfersEnabled()": "bef97c87",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTokenFactory\",\"type\":\"address\"}],\"name\":\"setTokenFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"achieveDecentralizedWorld\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Raul Martinez\",\"methods\":{\"achieveDecentralizedWorld()\":{\"details\":\"example of added functionality in future MiniMeTokens\",\"return\":\"sample results\"},\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"setTokenFactory(address)\":{\"details\":\"allows the controller to change the TokenFactory that clones the token\",\"params\":{\"_newTokenFactory\":\"new TokenFactory address\"}},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}},\"title\":\"FutureMiniMeToken Contract\"},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"setTokenFactory(address)\":{\"notice\":\"/////////////\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/SampleUpgradeTokenFactory-TokenController.sol\":\"MockFutureMiniMeToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    TokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = TokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n////////////////\\n// Change Token Factory\\n////////////////\\n\\n    /// @dev allows the controller to change the TokenFactory that clones the token\\n    /// @param _newTokenFactory new TokenFactory address\\n    function setTokenFactory(address _newTokenFactory) public onlyController {\\n      require(_newTokenFactory != address(0));\\n      tokenFactory = TokenFactory(_newTokenFactory);\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = MiniMeToken(tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            ));\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\",\"keccak256\":\"0x818e3d9167eed5e6ba516ec6166842474dc734bb18075be40925aa1e58cb21f7\"},\"./contracts/SampleUpgradeTokenFactory-TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\nimport \\\"./TokenFactory.sol\\\";\\nimport \\\"./MiniMeToken.sol\\\";\\n\\n/// @title FutureMiniMeToken Contract\\n/// @author Raul Martinez\\n/// @dev Example of MiniMe with added functionality\\ncontract MockFutureMiniMeToken is MiniMeToken {\\n\\n    ////////////////\\n    // Constructor\\n    ////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MockFutureMiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) MiniMeToken(\\n        _tokenFactory,\\n        _parentToken,\\n        _parentSnapShotBlock,\\n        _tokenName,\\n        _decimalUnits,\\n        _tokenSymbol,\\n        _transfersEnabled\\n    ) public {\\n    }\\n    /// @dev example of added functionality in future MiniMeTokens\\n    /// @return sample results\\n    function achieveDecentralizedWorld() public pure returns (string) {\\n        return \\\"decentralization achieved\\\";\\n    }\\n\\n}\\n\\n/// @title MilestoneTracker Contract\\n/// @author Raul Martinez\\n/// @dev Example of the factory that will generate the FutureMiniMes\\ncontract MockFutureMiniMeTokenFactory is TokenFactory {\\n\\n  /// @notice Update the DApp by creating a new token with new functionalities\\n  ///  the msg.sender becomes the controller of this clone token\\n  /// @param _parentToken Address of the token being cloned\\n  /// @param _snapshotBlock Block of the parent token that will\\n  ///  determine the initial distribution of the clone token\\n  /// @param _tokenName Name of the new token\\n  /// @param _decimalUnits Number of decimals of the new token\\n  /// @param _tokenSymbol Token Symbol for the new token\\n  /// @param _transfersEnabled If true, tokens will be able to be transferred\\n  /// @return The address of the new token contract\\n  function createCloneToken(\\n      address _parentToken,\\n      uint _snapshotBlock,\\n      string _tokenName,\\n      uint8 _decimalUnits,\\n      string _tokenSymbol,\\n      bool _transfersEnabled\\n  ) public returns (address) {\\n      MockFutureMiniMeToken newToken = new MockFutureMiniMeToken(\\n          this,\\n          _parentToken,\\n          _snapshotBlock,\\n          _tokenName,\\n          _decimalUnits,\\n          _tokenSymbol,\\n          _transfersEnabled\\n          );\\n\\n      newToken.changeController(msg.sender);\\n      return newToken;\\n  }\\n}\\n\",\"keccak256\":\"0xeb93502555427590dfbfd43efb0852b9682bcc2f992bea58b333d4240355564d\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"},\"./contracts/TokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev a MinimeToken factory must implement this method\\ncontract TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address);\\n}\\n\",\"keccak256\":\"0xf64d9320ae9e43c01f4e54322fc08b18fe7261ed0e33060561a15d9b2b4bb70d\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "approve(address,uint256)": {
              "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
            },
            "approveAndCall(address,uint256,bytes)": {
              "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
            },
            "balanceOfAt(address,uint256)": {
              "notice": "/////////////"
            },
            "changeController(address)": {
              "notice": "Changes the controller of the contract"
            },
            "claimTokens(address)": {
              "notice": "///////This method can be used by the controller to extract mistakenly  sent tokens to this contract."
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
              "notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
            },
            "destroyTokens(address,uint256)": {
              "notice": "Burns `_amount` tokens from `_owner`"
            },
            "enableTransfers(bool)": {
              "notice": "/////////////Enables token holders to transfer their tokens freely if true"
            },
            "generateTokens(address,uint256)": {
              "notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
            },
            "setTokenFactory(address)": {
              "notice": "/////////////"
            },
            "totalSupplyAt(uint256)": {
              "notice": "Total amount of tokens at a specific `_blockNumber`."
            },
            "transfer(address,uint256)": {
              "notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`"
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
            }
          }
        }
      },
      "MockFutureMiniMeTokenFactory": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "author": "Raul Martinez",
          "methods": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": {
              "params": {
                "_decimalUnits": "Number of decimals of the new token",
                "_parentToken": "Address of the token being cloned",
                "_snapshotBlock": "Block of the parent token that will  determine the initial distribution of the clone token",
                "_tokenName": "Name of the new token",
                "_tokenSymbol": "Token Symbol for the new token",
                "_transfersEnabled": "If true, tokens will be able to be transferred"
              },
              "return": "The address of the new token contract"
            }
          },
          "title": "MilestoneTracker Contract"
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": "2577:1223:4:-;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "6060604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635b7b72c18114610045575b600080fd5b341561005057600080fd5b6101096004803573ffffffffffffffffffffffffffffffffffffffff169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050509135151591506101329050565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60008030888888888888610144610313565b73ffffffffffffffffffffffffffffffffffffffff8089168252871660208201526040810186905260ff8416608082015281151560c082015260e0606082018181529060a0830190830187818151815260200191508051906020019080838360005b838110156101be5780820151838201526020016101a6565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610221578082015183820152602001610209565b50505050905090810190601f16801561024e5780820380516001836020036101000a031916815260200191505b509950505050505050505050604051809103906000f080151561027057600080fd5b90508073ffffffffffffffffffffffffffffffffffffffff16633cebb823336040517c010000000000000000000000000000000000000000000000000000000063ffffffff841602815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b15156102f357600080fd5b6102c65a03f1151561030457600080fd5b50919998505050505050505050565b604051611b8080610324833901905600606060405260408051908101604052600781527f4d4d545f302e3200000000000000000000000000000000000000000000000000602082015260049080516200004d92916020019062000171565b5034156200005a57600080fd5b60405162001b8038038062001b80833981016040528080519190602001805191906020018051919060200180518201919060200180519190602001805182019190602001805160008054600160a060020a03338116600160a060020a031990921691909117909155600b8054918b166101000261010060a860020a0319909216919091179055915087905086868686868660018480516200010092916020019062000171565b506002805460ff191660ff851617905560038280516200012592916020019062000171565b5060058054600160a060020a031916600160a060020a039790971696909617909555505050600655600b805460ff19169115159190911790555050436007555062000216945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b457805160ff1916838001178555620001e4565b82800160010185558215620001e4579182015b82811115620001e4578251825591602001919060010190620001c7565b50620001f2929150620001f6565b5090565b6200021391905b80821115620001f25760008155600101620001fd565b90565b61195a80620002266000396000f3006060604052600436106101455763ffffffff60e060020a60003504166306fdde0381146101ea578063095ea7b31461027457806317634514146102aa57806318160ddd146102cf57806323b872dd146102e25780632f73a9f81461030a578063313ce567146103295780633cebb823146103525780634ee2cd7e1461037157806354fd4d50146103935780636638c087146103a657806370a082311461046a57806371f823751461048957806380a540011461049c578063827f32c0146104af57806395d89b41146104d1578063981b24d0146104e4578063a9059cbb146104fa578063bef97c871461051c578063c5bcc4f11461052f578063cae9ca5114610542578063d3ce77fe146105a7578063dd62ed3e146105c9578063df8de3e7146105ee578063e77772fe1461060d578063f41e60c514610620578063f77c479114610638575b60005461015a90600160a060020a031661064b565b151561016557600080fd5b60008054600160a060020a03169063f48c305490349033906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390911660048201526024016020604051808303818588803b15156101c157600080fd5b6125ee5a03f115156101d257600080fd5b505050506040518051905015156101e857600080fd5b005b34156101f557600080fd5b6101fd610678565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610239578082015183820152602001610221565b50505050905090810190601f1680156102665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027f57600080fd5b610296600160a060020a0360043516602435610716565b604051901515815260200160405180910390f35b34156102b557600080fd5b6102bd61087f565b60405190815260200160405180910390f35b34156102da57600080fd5b6102bd610885565b34156102ed57600080fd5b610296600160a060020a0360043581169060243516604435610896565b341561031557600080fd5b6101e8600160a060020a0360043516610935565b341561033457600080fd5b61033c61099a565b60405160ff909116815260200160405180910390f35b341561035d57600080fd5b6101e8600160a060020a03600435166109a3565b341561037c57600080fd5b6102bd600160a060020a03600435166024356109ed565b341561039e57600080fd5b6101fd610b23565b34156103b157600080fd5b61044e60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013515159350610b8e92505050565b604051600160a060020a03909116815260200160405180910390f35b341561047557600080fd5b6102bd600160a060020a0360043516610db8565b341561049457600080fd5b6101fd610dcc565b34156104a757600080fd5b61044e610e0d565b34156104ba57600080fd5b610296600160a060020a0360043516602435610e1c565b34156104dc57600080fd5b6101fd610eda565b34156104ef57600080fd5b6102bd600435610f45565b341561050557600080fd5b610296600160a060020a036004351660243561102e565b341561052757600080fd5b610296611056565b341561053a57600080fd5b6102bd61105f565b341561054d57600080fd5b61029660048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061106595505050505050565b34156105b257600080fd5b610296600160a060020a0360043516602435611180565b34156105d457600080fd5b6102bd600160a060020a0360043581169060243516611238565b34156105f957600080fd5b6101e8600160a060020a0360043516611263565b341561061857600080fd5b61044e61140f565b341561062b57600080fd5b6101e86004351515611423565b341561064357600080fd5b61044e611451565b600080600160a060020a03831615156106675760009150610672565b823b90506000811191505b50919050565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b505050505081565b600b5460009060ff16151561072a57600080fd5b81158061075a5750600160a060020a03338116600090815260096020908152604080832093871683529290522054155b151561076557600080fd5b60005461077a90600160a060020a031661064b565b156108155760008054600160a060020a03169063da682aeb903390869086906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156107ef57600080fd5b6102c65a03f1151561080057600080fd5b50505060405180519050151561081557600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60075481565b600061089043610f45565b90505b90565b6000805433600160a060020a0390811691161461092057600b5460ff1615156108be57600080fd5b600160a060020a0380851660009081526009602090815260408083203390941683529290522054829010156108f257600080fd5b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b61092b848484611460565b5060019392505050565b60005433600160a060020a0390811691161461095057600080fd5b600160a060020a038116151561096557600080fd5b600b8054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b60025460ff1681565b60005433600160a060020a039081169116146109be57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382166000908152600860205260408120541580610a495750600160a060020a038316600090815260086020526040812080548492908110610a3257fe5b6000918252602090912001546001608060020a0316115b15610afa57600554600160a060020a031615610af257600554600654600160a060020a0390911690634ee2cd7e908590610a84908690611652565b60006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610ad057600080fd5b6102c65a03f11515610ae157600080fd5b505050604051805190509050610879565b506000610879565b600160a060020a0383166000908152600860205260409020610b1c908361166a565b9050610879565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070e5780601f106106e35761010080835404028352916020019161070e565b600080831515610b9c574393505b600b546101009004600160a060020a0316635b7b72c130868a8a8a8960006040516020015260405160e060020a63ffffffff8916028152600160a060020a038716600482019081526024820187905260ff8516606483015282151560a483015260c0604483019081529091608481019060c40187818151815260200191508051906020019080838360005b83811015610c3f578082015183820152602001610c27565b50505050905090810190601f168015610c6c5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610ca2578082015183820152602001610c8a565b50505050905090810190601f168015610ccf5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1515610cf357600080fd5b6102c65a03f11515610d0457600080fd5b5050506040518051915050600160a060020a038116633cebb8233360405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b1515610d5d57600080fd5b6102c65a03f11515610d6e57600080fd5b50505080600160a060020a03167f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade8560405190815260200160405180910390a29695505050505050565b6000610dc482436109ed565b90505b919050565b610dd46118bf565b60408051908101604052601981527f646563656e7472616c697a6174696f6e206163686965766564000000000000006020820152905090565b600554600160a060020a031681565b600080548190819033600160a060020a03908116911614610e3c57600080fd5b610e44610885565b915083820182901015610e5657600080fd5b610e5f85610db8565b905083810181901015610e7157600080fd5b610e7e600a8584016117c9565b600160a060020a0385166000908152600860205260409020610ea2908286016117c9565b84600160a060020a0316600060008051602061190f8339815191528660405190815260200160405180910390a3506001949350505050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070e5780601f106106e35761010080835404028352916020019161070e565b600a546000901580610f7a575081600a6000815481101515610f6357fe5b6000918252602090912001546001608060020a0316115b1561101c57600554600160a060020a03161561101457600554600654600160a060020a039091169063981b24d090610fb3908590611652565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610ff257600080fd5b6102c65a03f1151561100357600080fd5b505050604051805190509050610dc7565b506000610dc7565b611027600a8361166a565b9050610dc7565b600b5460009060ff16151561104257600080fd5b61104d338484611460565b50600192915050565b600b5460ff1681565b60065481565b60006110718484610716565b151561107c57600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111145780820151838201526020016110fc565b50505050905090810190601f1680156111415780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561116257600080fd5b6102c65a03f1151561117357600080fd5b5060019695505050505050565b600080548190819033600160a060020a039081169116146111a057600080fd5b6111a8610885565b9150838210156111b757600080fd5b6111c085610db8565b9050838110156111cf57600080fd5b6111dc600a8584036117c9565b600160a060020a0385166000908152600860205260409020611200908583036117c9565b600085600160a060020a031660008051602061190f8339815191528660405190815260200160405180910390a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461128157600080fd5b600160a060020a03831615156112cf57600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f1935050505015156112ca57600080fd5b61140a565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b151561132957600080fd5b6102c65a03f1151561133a57600080fd5b505050604051805160008054919350600160a060020a03808616935063a9059cbb92169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b15156113aa57600080fd5b6102c65a03f115156113bb57600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a35b505050565b600b546101009004600160a060020a031681565b60005433600160a060020a0390811691161461143e57600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b6000808215156114a45783600160a060020a031685600160a060020a031660008051602061190f8339815191528560405190815260200160405180910390a361164b565b6006544390106114b357600080fd5b600160a060020a038416158015906114dd575030600160a060020a031684600160a060020a031614155b15156114e857600080fd5b6114f285436109ed565b91508282101561150157600080fd5b60005461151690600160a060020a031661064b565b156115b15760008054600160a060020a031690634a393149908790879087906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561158b57600080fd5b6102c65a03f1151561159c57600080fd5b5050506040518051905015156115b157600080fd5b600160a060020a03851660009081526008602052604090206115d5908484036117c9565b6115df84436109ed565b9050828101819010156115f157600080fd5b600160a060020a0384166000908152600860205260409020611615908285016117c9565b83600160a060020a031685600160a060020a031660008051602061190f8339815191528560405190815260200160405180910390a35b5050505050565b60008183106116615781611663565b825b9392505050565b60008060008085805490506000141561168657600093506117c0565b85548690600019810190811061169857fe5b6000918252602090912001546001608060020a031685106116f5578554869060001981019081106116c557fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693506117c0565b85600081548110151561170457fe5b6000918252602090912001546001608060020a031685101561172957600093506117c0565b8554600093506000190191505b8282111561178657600260018385010104905084868281548110151561175857fe5b6000918252602090912001546001608060020a03161161177a57809250611781565b6001810391505b611736565b858381548110151561179457fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b815460009081901580611802575083544390859060001981019081106117eb57fe5b6000918252602090912001546001608060020a0316105b15611874578354849061181882600183016118d1565b8154811061182257fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff19909316929092171617815591506118b9565b83548490600019810190811061188657fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b60206040519081016040526000815290565b81548183558181151161140a5760008381526020902061140a91810190830161089391905b8082111561190a57600081556001016118f6565b50905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058204177b2d80dbdd16bf67ab19be5c5b427dea17e19dee85e33e30a24fd626759530029a165627a7a723058206b2167bd5e60ffa6f85181f0475d1a3a64a47e43392a6274a5460411e24627850029",
            "sourceMap": "2577:1223:4:-;;;;;;;;;;;;;;;;;;;;;;;3261:537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3261:537:4;;-1:-1:-1;;;;3261:537:4;;;;;-1:-1:-1;3261:537:4;;-1:-1:-1;3261:537:4;;;;;;;;;;;;;;;;;;;;3471:7;3488:30;3558:4;3574:12;3598:14;3624:10;3646:13;3671:12;3695:17;3521:203;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:236:4;;3733:8;:25;;;3759:10;3733:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;3733:37:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3785:8:4;;3261:537;-1:-1:-1;;;;;;;;;3261:537:4:o;2577:1223::-;;;;;;;;;;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "1577400",
              "executionCost": "1647",
              "totalCost": "1579047"
            },
            "external": {
              "createCloneToken(address,uint256,string,uint8,string,bool)": "infinite"
            }
          },
          "methodIdentifiers": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": "5b7b72c1"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Raul Martinez\",\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"params\":{\"_decimalUnits\":\"Number of decimals of the new token\",\"_parentToken\":\"Address of the token being cloned\",\"_snapshotBlock\":\"Block of the parent token that will  determine the initial distribution of the clone token\",\"_tokenName\":\"Name of the new token\",\"_tokenSymbol\":\"Token Symbol for the new token\",\"_transfersEnabled\":\"If true, tokens will be able to be transferred\"},\"return\":\"The address of the new token contract\"}},\"title\":\"MilestoneTracker Contract\"},\"userdoc\":{\"methods\":{\"createCloneToken(address,uint256,string,uint8,string,bool)\":{\"notice\":\"Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token\"}}}},\"settings\":{\"compilationTarget\":{\"./contracts/SampleUpgradeTokenFactory-TokenController.sol\":\"MockFutureMiniMeTokenFactory\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":./Controlled.sol=./contracts/Controlled.sol\",\":./TokenController.sol=./contracts/TokenController.sol\",\":./TokenFactory.sol=./contracts/TokenFactory.sol\",\":MiniMeToken.sol=./contracts/MiniMeToken.sol\"]},\"sources\":{\"./contracts/Controlled.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\ncontract Controlled {\\n    /// @notice The address of the controller is the only address that can call\\n    ///  a function with this modifier\\n    modifier onlyController { require(msg.sender == controller); _; }\\n\\n    address public controller;\\n\\n    function Controlled() public { controller = msg.sender;}\\n\\n    /// @notice Changes the controller of the contract\\n    /// @param _newController The new controller of the contract\\n    function changeController(address _newController) public onlyController {\\n        controller = _newController;\\n    }\\n}\\n\",\"keccak256\":\"0x770798704985a4588762ea932b913bc1df01b4625ab86c5a7278883bbde44b78\"},\"./contracts/MiniMeToken.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2016, Jordi Baylina\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n/// @title MiniMeToken Contract\\n/// @author Jordi Baylina\\n/// @dev This token contract's goal is to make it easy for anyone to clone this\\n///  token using the token distribution at a given block, this will allow DAO's\\n///  and DApps to upgrade their features in a decentralized manner without\\n///  affecting the original token\\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\\n\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"./TokenController.sol\\\";\\nimport \\\"./TokenFactory.sol\\\";\\n\\ncontract ApproveAndCallFallBack {\\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\\n}\\n\\n/// @dev The actual token contract, the default controller is the msg.sender\\n///  that deploys the contract, so usually this token will be deployed by a\\n///  token controller contract, which Giveth will call a \\\"Campaign\\\"\\ncontract MiniMeToken is Controlled {\\n\\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\\n    uint8 public decimals;             //Number of decimals of the smallest unit\\n    string public symbol;              //An identifier: e.g. REP\\n    string public version = 'MMT_0.2'; //An arbitrary versioning scheme\\n\\n\\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\\n    ///  given value, the block number attached is the one that last changed the\\n    ///  value\\n    struct  Checkpoint {\\n\\n        // `fromBlock` is the block number that the value was generated from\\n        uint128 fromBlock;\\n\\n        // `value` is the amount of tokens at a specific block number\\n        uint128 value;\\n    }\\n\\n    // `parentToken` is the Token address that was cloned to produce this token;\\n    //  it will be 0x0 for a token that was not cloned\\n    MiniMeToken public parentToken;\\n\\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\\n    //  used to determine the initial distribution of the Clone Token\\n    uint public parentSnapShotBlock;\\n\\n    // `creationBlock` is the block number that the Clone Token was created\\n    uint public creationBlock;\\n\\n    // `balances` is the map that tracks the balance of each address, in this\\n    //  contract when the balance changes the block number that the change\\n    //  occurred is also included in the map\\n    mapping (address => Checkpoint[]) balances;\\n\\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\\n    mapping (address => mapping (address => uint256)) allowed;\\n\\n    // Tracks the history of the `totalSupply` of the token\\n    Checkpoint[] totalSupplyHistory;\\n\\n    // Flag that determines if the token is transferable or not.\\n    bool public transfersEnabled;\\n\\n    // The factory used to create new clone tokens\\n    TokenFactory public tokenFactory;\\n\\n////////////////\\n// Constructor\\n////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public {\\n        tokenFactory = TokenFactory(_tokenFactory);\\n        name = _tokenName;                                 // Set the name\\n        decimals = _decimalUnits;                          // Set the decimals\\n        symbol = _tokenSymbol;                             // Set the symbol\\n        parentToken = MiniMeToken(_parentToken);\\n        parentSnapShotBlock = _parentSnapShotBlock;\\n        transfersEnabled = _transfersEnabled;\\n        creationBlock = block.number;\\n    }\\n\\n\\n///////////////////\\n// ERC20 Methods\\n///////////////////\\n\\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n        doTransfer(msg.sender, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\\n    ///  is approved by `_from`\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function transferFrom(address _from, address _to, uint256 _amount\\n    ) public returns (bool success) {\\n\\n        // The controller of this contract can move tokens around at will,\\n        //  this is important to recognize! Confirm that you trust the\\n        //  controller of this contract, which in most situations should be\\n        //  another open source smart contract or 0x0\\n        if (msg.sender != controller) {\\n            require(transfersEnabled);\\n\\n            // The standard ERC 20 transferFrom functionality\\n            require(allowed[_from][msg.sender] >= _amount);\\n            allowed[_from][msg.sender] -= _amount;\\n        }\\n        doTransfer(_from, _to, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This is the actual transfer function in the token contract, it can\\n    ///  only be called by other functions in this contract.\\n    /// @param _from The address holding the tokens being transferred\\n    /// @param _to The address of the recipient\\n    /// @param _amount The amount of tokens to be transferred\\n    /// @return True if the transfer was successful\\n    function doTransfer(address _from, address _to, uint _amount\\n    ) internal {\\n\\n           if (_amount == 0) {\\n               Transfer(_from, _to, _amount);    // Follow the spec to louch the event when transfer 0\\n               return;\\n           }\\n\\n           require(parentSnapShotBlock < block.number);\\n\\n           // Do not allow transfer to 0x0 or the token contract itself\\n           require((_to != 0) && (_to != address(this)));\\n\\n           // If the amount being transfered is more than the balance of the\\n           //  account the transfer throws\\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\\n\\n           require(previousBalanceFrom >= _amount);\\n\\n           // Alerts the token controller of the transfer\\n           if (isContract(controller)) {\\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\\n           }\\n\\n           // First update the balance array with the new value for the address\\n           //  sending the tokens\\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\\n\\n           // Then update the balance array with the new value for the address\\n           //  receiving the tokens\\n           var previousBalanceTo = balanceOfAt(_to, block.number);\\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\\n\\n           // An event to make the transfer easy to find on the blockchain\\n           Transfer(_from, _to, _amount);\\n\\n    }\\n\\n    /// @param _owner The address that's balance is being requested\\n    /// @return The balance of `_owner` at the current block\\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\\n        return balanceOfAt(_owner, block.number);\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\\n    ///  its behalf. This is a modified version of the ERC20 approve function\\n    ///  to be a little bit safer\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the approval was successful\\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\\n        require(transfersEnabled);\\n\\n        // To change the approve amount you first have to reduce the addresses`\\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\\n        //  already 0 to mitigate the race condition described here:\\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\\n\\n        // Alerts the token controller of the approve function call\\n        if (isContract(controller)) {\\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\\n        }\\n\\n        allowed[msg.sender][_spender] = _amount;\\n        Approval(msg.sender, _spender, _amount);\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to read the `allowed[]` map\\n    /// @param _owner The address of the account that owns the token\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\\n    ///  to spend\\n    function allowance(address _owner, address _spender\\n    ) public constant returns (uint256 remaining) {\\n        return allowed[_owner][_spender];\\n    }\\n\\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\\n    ///  its behalf, and then a function is triggered in the contract that is\\n    ///  being approved, `_spender`. This allows users to use their tokens to\\n    ///  interact with contracts in one function call instead of two\\n    /// @param _spender The address of the contract able to transfer the tokens\\n    /// @param _amount The amount of tokens to be approved for transfer\\n    /// @return True if the function call was successful\\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\\n    ) public returns (bool success) {\\n        require(approve(_spender, _amount));\\n\\n        ApproveAndCallFallBack(_spender).receiveApproval(\\n            msg.sender,\\n            _amount,\\n            this,\\n            _extraData\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @dev This function makes it easy to get the total number of tokens\\n    /// @return The total number of tokens\\n    function totalSupply() public constant returns (uint) {\\n        return totalSupplyAt(block.number);\\n    }\\n\\n\\n////////////////\\n// Query balance and totalSupply in History\\n////////////////\\n\\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @param _blockNumber The block number when the balance is queried\\n    /// @return The balance at `_blockNumber`\\n    function balanceOfAt(address _owner, uint _blockNumber) public constant\\n        returns (uint) {\\n\\n        // These next few lines are used when the balance of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.balanceOfAt` be queried at the\\n        //  genesis block for that token as this contains initial balance of\\n        //  this token\\n        if ((balances[_owner].length == 0)\\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                // Has no parent\\n                return 0;\\n            }\\n\\n        // This will return the expected balance during normal situations\\n        } else {\\n            return getValueAt(balances[_owner], _blockNumber);\\n        }\\n    }\\n\\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\\n    /// @param _blockNumber The block number when the totalSupply is queried\\n    /// @return The total amount of tokens at `_blockNumber`\\n    function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\\n\\n        // These next few lines are used when the totalSupply of the token is\\n        //  requested before a check point was ever created for this token, it\\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\\n        //  genesis block for this token as that contains totalSupply of this\\n        //  token at this block number.\\n        if ((totalSupplyHistory.length == 0)\\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\\n            if (address(parentToken) != 0) {\\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\\n            } else {\\n                return 0;\\n            }\\n\\n        // This will return the expected totalSupply during normal situations\\n        } else {\\n            return getValueAt(totalSupplyHistory, _blockNumber);\\n        }\\n    }\\n////////////////\\n// Change Token Factory\\n////////////////\\n\\n    /// @dev allows the controller to change the TokenFactory that clones the token\\n    /// @param _newTokenFactory new TokenFactory address\\n    function setTokenFactory(address _newTokenFactory) public onlyController {\\n      require(_newTokenFactory != address(0));\\n      tokenFactory = TokenFactory(_newTokenFactory);\\n    }\\n\\n////////////////\\n// Clone Token Method\\n////////////////\\n\\n    /// @notice Creates a new clone token with the initial distribution being\\n    ///  this token at `_snapshotBlock`\\n    /// @param _cloneTokenName Name of the clone token\\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\\n    /// @param _cloneTokenSymbol Symbol of the clone token\\n    /// @param _snapshotBlock Block when the distribution of the parent token is\\n    ///  copied to set the initial distribution of the new clone token;\\n    ///  if the block is zero than the actual block, the current block is used\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    /// @return The address of the new MiniMeToken Contract\\n    function createCloneToken(\\n        string _cloneTokenName,\\n        uint8 _cloneDecimalUnits,\\n        string _cloneTokenSymbol,\\n        uint _snapshotBlock,\\n        bool _transfersEnabled\\n        ) public returns(address) {\\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\\n        MiniMeToken cloneToken = MiniMeToken(tokenFactory.createCloneToken(\\n            this,\\n            _snapshotBlock,\\n            _cloneTokenName,\\n            _cloneDecimalUnits,\\n            _cloneTokenSymbol,\\n            _transfersEnabled\\n            ));\\n\\n        cloneToken.changeController(msg.sender);\\n\\n        // An event to make the token easy to find on the blockchain\\n        NewCloneToken(address(cloneToken), _snapshotBlock);\\n        return address(cloneToken);\\n    }\\n\\n////////////////\\n// Generate and destroy tokens\\n////////////////\\n\\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\\n    /// @param _owner The address that will be assigned the new tokens\\n    /// @param _amount The quantity of tokens generated\\n    /// @return True if the tokens are generated correctly\\n    function generateTokens(address _owner, uint _amount\\n    ) public onlyController returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\\n        uint previousBalanceTo = balanceOf(_owner);\\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\\n        Transfer(0, _owner, _amount);\\n        return true;\\n    }\\n\\n\\n    /// @notice Burns `_amount` tokens from `_owner`\\n    /// @param _owner The address that will lose the tokens\\n    /// @param _amount The quantity of tokens to burn\\n    /// @return True if the tokens are burned correctly\\n    function destroyTokens(address _owner, uint _amount\\n    ) onlyController public returns (bool) {\\n        uint curTotalSupply = totalSupply();\\n        require(curTotalSupply >= _amount);\\n        uint previousBalanceFrom = balanceOf(_owner);\\n        require(previousBalanceFrom >= _amount);\\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\\n        Transfer(_owner, 0, _amount);\\n        return true;\\n    }\\n\\n////////////////\\n// Enable tokens transfers\\n////////////////\\n\\n\\n    /// @notice Enables token holders to transfer their tokens freely if true\\n    /// @param _transfersEnabled True if transfers are allowed in the clone\\n    function enableTransfers(bool _transfersEnabled) public onlyController {\\n        transfersEnabled = _transfersEnabled;\\n    }\\n\\n////////////////\\n// Internal helper functions to query and set a value in a snapshot array\\n////////////////\\n\\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\\n    /// @param checkpoints The history of values being queried\\n    /// @param _block The block number to retrieve the value at\\n    /// @return The number of tokens being queried\\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\\n    ) constant internal returns (uint) {\\n        if (checkpoints.length == 0) return 0;\\n\\n        // Shortcut for the actual value\\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\\n            return checkpoints[checkpoints.length-1].value;\\n        if (_block < checkpoints[0].fromBlock) return 0;\\n\\n        // Binary search of the value in the array\\n        uint min = 0;\\n        uint max = checkpoints.length-1;\\n        while (max > min) {\\n            uint mid = (max + min + 1)/ 2;\\n            if (checkpoints[mid].fromBlock<=_block) {\\n                min = mid;\\n            } else {\\n                max = mid-1;\\n            }\\n        }\\n        return checkpoints[min].value;\\n    }\\n\\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\\n    ///  `totalSupplyHistory`\\n    /// @param checkpoints The history of data being updated\\n    /// @param _value The new number of tokens\\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\\n    ) internal  {\\n        if ((checkpoints.length == 0)\\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\\n               newCheckPoint.fromBlock =  uint128(block.number);\\n               newCheckPoint.value = uint128(_value);\\n           } else {\\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\\n               oldCheckPoint.value = uint128(_value);\\n           }\\n    }\\n\\n    /// @dev Internal function to determine if an address is a contract\\n    /// @param _addr The address being queried\\n    /// @return True if `_addr` is a contract\\n    function isContract(address _addr) constant internal returns(bool) {\\n        uint size;\\n        if (_addr == 0) return false;\\n        assembly {\\n            size := extcodesize(_addr)\\n        }\\n        return size>0;\\n    }\\n\\n    /// @dev Helper function to return a min betwen the two uints\\n    function min(uint a, uint b) pure internal returns (uint) {\\n        return a < b ? a : b;\\n    }\\n\\n    /// @notice The fallback function: If the contract's controller has not been\\n    ///  set to 0, then the `proxyPayment` method is called which relays the\\n    ///  ether and creates tokens as described in the token controller contract\\n    function () public payable {\\n        require(isContract(controller));\\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\\n    }\\n\\n//////////\\n// Safety Methods\\n//////////\\n\\n    /// @notice This method can be used by the controller to extract mistakenly\\n    ///  sent tokens to this contract.\\n    /// @param _token The address of the token contract that you want to recover\\n    ///  set to 0 in case you want to extract ether.\\n    function claimTokens(address _token) public onlyController {\\n        if (_token == 0x0) {\\n            controller.transfer(this.balance);\\n            return;\\n        }\\n\\n        MiniMeToken token = MiniMeToken(_token);\\n        uint balance = token.balanceOf(this);\\n        token.transfer(controller, balance);\\n        ClaimedTokens(_token, controller, balance);\\n    }\\n\\n////////////////\\n// Events\\n////////////////\\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _amount\\n        );\\n\\n}\\n\",\"keccak256\":\"0x818e3d9167eed5e6ba516ec6166842474dc734bb18075be40925aa1e58cb21f7\"},\"./contracts/SampleUpgradeTokenFactory-TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\nimport \\\"./TokenFactory.sol\\\";\\nimport \\\"./MiniMeToken.sol\\\";\\n\\n/// @title FutureMiniMeToken Contract\\n/// @author Raul Martinez\\n/// @dev Example of MiniMe with added functionality\\ncontract MockFutureMiniMeToken is MiniMeToken {\\n\\n    ////////////////\\n    // Constructor\\n    ////////////////\\n\\n    /// @notice Constructor to create a MiniMeToken\\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\\n    ///  will create the Clone token contracts, the token factory needs to be\\n    ///  deployed first\\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\\n    ///  new token\\n    /// @param _parentSnapShotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token, set to 0 if it\\n    ///  is a new token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    function MockFutureMiniMeToken(\\n        address _tokenFactory,\\n        address _parentToken,\\n        uint _parentSnapShotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) MiniMeToken(\\n        _tokenFactory,\\n        _parentToken,\\n        _parentSnapShotBlock,\\n        _tokenName,\\n        _decimalUnits,\\n        _tokenSymbol,\\n        _transfersEnabled\\n    ) public {\\n    }\\n    /// @dev example of added functionality in future MiniMeTokens\\n    /// @return sample results\\n    function achieveDecentralizedWorld() public pure returns (string) {\\n        return \\\"decentralization achieved\\\";\\n    }\\n\\n}\\n\\n/// @title MilestoneTracker Contract\\n/// @author Raul Martinez\\n/// @dev Example of the factory that will generate the FutureMiniMes\\ncontract MockFutureMiniMeTokenFactory is TokenFactory {\\n\\n  /// @notice Update the DApp by creating a new token with new functionalities\\n  ///  the msg.sender becomes the controller of this clone token\\n  /// @param _parentToken Address of the token being cloned\\n  /// @param _snapshotBlock Block of the parent token that will\\n  ///  determine the initial distribution of the clone token\\n  /// @param _tokenName Name of the new token\\n  /// @param _decimalUnits Number of decimals of the new token\\n  /// @param _tokenSymbol Token Symbol for the new token\\n  /// @param _transfersEnabled If true, tokens will be able to be transferred\\n  /// @return The address of the new token contract\\n  function createCloneToken(\\n      address _parentToken,\\n      uint _snapshotBlock,\\n      string _tokenName,\\n      uint8 _decimalUnits,\\n      string _tokenSymbol,\\n      bool _transfersEnabled\\n  ) public returns (address) {\\n      MockFutureMiniMeToken newToken = new MockFutureMiniMeToken(\\n          this,\\n          _parentToken,\\n          _snapshotBlock,\\n          _tokenName,\\n          _decimalUnits,\\n          _tokenSymbol,\\n          _transfersEnabled\\n          );\\n\\n      newToken.changeController(msg.sender);\\n      return newToken;\\n  }\\n}\\n\",\"keccak256\":\"0xeb93502555427590dfbfd43efb0852b9682bcc2f992bea58b333d4240355564d\"},\"./contracts/TokenController.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/// @dev The token controller contract must implement these functions\\ncontract TokenController {\\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\\n    /// @param _owner The address that sent the ether to create tokens\\n    /// @return True if the ether is accepted, false if it throws\\n    function proxyPayment(address _owner) public payable returns(bool);\\n\\n    /// @notice Notifies the controller about a token transfer allowing the\\n    ///  controller to react if desired\\n    /// @param _from The origin of the transfer\\n    /// @param _to The destination of the transfer\\n    /// @param _amount The amount of the transfer\\n    /// @return False if the controller does not authorize the transfer\\n    function onTransfer(address _from, address _to, uint _amount) public returns(bool);\\n\\n    /// @notice Notifies the controller about an approval allowing the\\n    ///  controller to react if desired\\n    /// @param _owner The address that calls `approve()`\\n    /// @param _spender The spender in the `approve()` call\\n    /// @param _amount The amount in the `approve()` call\\n    /// @return False if the controller does not authorize the approval\\n    function onApprove(address _owner, address _spender, uint _amount) public\\n        returns(bool);\\n}\\n\",\"keccak256\":\"0xf8bf7de20c0412ab90ec43c1432508a8316e17bd246adffa737e0d779413ff5e\"},\"./contracts/TokenFactory.sol\":{\"content\":\"pragma solidity ^0.4.18;\\n\\n/*\\n    Copyright 2017, Raúl Martínez\\n\\n    This program is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n\\n////////////////\\n// MiniMeTokenFactory\\n////////////////\\n\\n/// @dev a MinimeToken factory must implement this method\\ncontract TokenFactory {\\n\\n    /// @notice Update the DApp by creating a new token with new functionalities\\n    ///  the msg.sender becomes the controller of this clone token\\n    /// @param _parentToken Address of the token being cloned\\n    /// @param _snapshotBlock Block of the parent token that will\\n    ///  determine the initial distribution of the clone token\\n    /// @param _tokenName Name of the new token\\n    /// @param _decimalUnits Number of decimals of the new token\\n    /// @param _tokenSymbol Token Symbol for the new token\\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\\n    /// @return The address of the new token contract\\n    function createCloneToken(\\n        address _parentToken,\\n        uint _snapshotBlock,\\n        string _tokenName,\\n        uint8 _decimalUnits,\\n        string _tokenSymbol,\\n        bool _transfersEnabled\\n    ) public returns (address);\\n}\\n\",\"keccak256\":\"0xf64d9320ae9e43c01f4e54322fc08b18fe7261ed0e33060561a15d9b2b4bb70d\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": {
              "notice": "Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token"
            }
          }
        }
      }
    },
    "./contracts/TokenController.sol": {
      "TokenController": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_from",
                "type": "address"
              },
              {
                "name": "_to",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onTransfer",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_spender",
                "type": "address"
              },
              {
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "onApprove",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "constant": false,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "proxyPayment",
            "outputs": [
              {
                "name": "",
                "type": "bool"
              }
            ],
            "payable": true,
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "devdoc": {
          "methods": {
            "onApprove(address,address,uint256)": {
              "params": {
                "_amount": "The amount in the `approve()` call",
                "_owner": "The address that calls `approve()`",
                "_spender": "The spender in the `approve()` call"
              },
              "return": "False if the controller does not authorize the approval"
            },
            "onTransfer(address,address,uint256)": {
              "params": {
                "_amount": "The amount of the transfer",
                "_from": "The origin of the transfer",
                "_to": "The destination of the transfer"
              },
              "return": "False if the controller does not authorize the transfer"
            },
            "proxyPayment(address)": {
              "params": {
                "_owner": "The address that sent the ether to create tokens"
              },
              "return": "True if the ether is accepted, false if it throws"
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "methodIdentifiers": {
            "onApprove(address,address,uint256)": "da682aeb",
            "onTransfer(address,address,uint256)": "4a393149",
            "proxyPayment(address)": "f48c3054"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {
            "onApprove(address,address,uint256)": {
              "notice": "Notifies the controller about an approval allowing the  controller to react if desired"
            },
            "onTransfer(address,address,uint256)": {
              "notice": "Notifies the controller about a token transfer allowing the  controller to react if desired"
            },
            "proxyPayment(address)": {
              "notice": "Called when `_owner` sends ether to the MiniMe Token contract"
            }
          }
        }
      }
    },
    "./contracts/TokenFactory.sol": {
      "TokenFactory": {
        "abi": [
          {
            "constant": false,
            "inputs": [
              {
                "name": "_parentToken",
                "type": "address"
              },
              {
                "name": "_snapshotBlock",
                "type": "uint256"
              },
              {
                "name": "_tokenName",
                "type": "string"
              },
              {
                "name": "_decimalUnits",
                "type": "uint8"
              },
              {
                "name": "_tokenSymbol",
                "type": "string"
              },
              {
                "name": "_transfersEnabled",
                "type": "bool"
              }
            ],
            "name": "createCloneToken",
            "outputs": [
              {
                "name": "",
                "type": "address"
              }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "devdoc": {
          "methods": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": {
              "params": {
                "_decimalUnits": "Number of decimals of the new token",
                "_parentToken": "Address of the token being cloned",
                "_snapshotBlock": "Block of the parent token that will  determine the initial distribution of the clone token",
                "_tokenName": "Name of the new token",
                "_tokenSymbol": "Token Symbol for the new token",
                "_transfersEnabled": "If true, tokens will be able to be transferred"
              },
              "return": "The address of the new token contract"
            }
          }
        },
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "",
            "sourceMap": ""
          },
          "gasEstimates": null,
          "methodIdentifiers": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": "5b7b72c1"
          }
        },
        "metadata": "",
        "userdoc": {
          "methods": {
            "createCloneToken(address,uint256,string,uint8,string,bool)": {
              "notice": "Update the DApp by creating a new token with new functionalities  the msg.sender becomes the controller of this clone token"
            }
          }
        }
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:40:5: Warning: No visibility specified. Defaulting to \"public\".\n    function Owned() { owner = msg.sender;}\n    ^-------------------------------------^\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:45:5: Warning: No visibility specified. Defaulting to \"public\".\n    function changeOwner(address _newOwner) onlyOwner {\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:76:5: Warning: No visibility specified. Defaulting to \"public\".\n    function Campaign(\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:100:5: Warning: No visibility specified. Defaulting to \"public\".\n    function ()  payable {\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:112:5: Warning: No visibility specified. Defaulting to \"public\".\n    function proxyPayment(address _owner) payable returns(bool) {\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:5: Warning: No visibility specified. Defaulting to \"public\".\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:5: Warning: No visibility specified. Defaulting to \"public\".\n    function onApprove(address _owner, address _spender, uint _amount)\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:172:5: Warning: No visibility specified. Defaulting to \"public\".\n    function finalizeFunding() {\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:181:5: Warning: No visibility specified. Defaulting to \"public\".\n    function setVault(address _newVaultAddress) onlyOwner {\n    ^\nSpanning multiple lines.\n",
      "message": "No visibility specified. Defaulting to \"public\".",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n                        ^-----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n                                       ^---------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:123:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onTransfer(address _from, address _to, uint _amount) returns(bool) {\n                                                    ^----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:24: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount)\n                       ^------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount)\n                                       ^--------------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "type": "Warning"
    },
    {
      "component": "general",
      "formattedMessage": "./contracts/SampleCampaign-TokenController.sol:133:58: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function onApprove(address _owner, address _spender, uint _amount)\n                                                         ^----------^\n",
      "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
      "severity": "warning",
      "type": "Warning"
    }
  ],
  "sources": {
    "./contracts/Controlled.sol": {
      "id": 0
    },
    "./contracts/MiniMeToken.sol": {
      "id": 1
    },
    "./contracts/MiniMeTokenFactory.sol": {
      "id": 2
    },
    "./contracts/SampleCampaign-TokenController.sol": {
      "id": 3
    },
    "./contracts/SampleUpgradeTokenFactory-TokenController.sol": {
      "id": 4
    },
    "./contracts/TokenController.sol": {
      "id": 5
    },
    "./contracts/TokenFactory.sol": {
      "id": 6
    }
  }
}